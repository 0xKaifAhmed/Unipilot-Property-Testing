{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH9",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinimum",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISwapRouter.ExactInputParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinimum",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct ISwapRouter.ExactInputSingleParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactInputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMaximum",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISwapRouter.ExactOutputParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactOutput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMaximum",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct ISwapRouter.ExactOutputSingleParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactOutputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitAllowed",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitAllowedIfNecessary",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitIfNecessary",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "setTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeBips",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        }
      ],
      "name": "sweepTokenWithFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "amount0Delta",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1Delta",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3SwapCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeBips",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9WithFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60c06040526000196000553480156200001757600080fd5b50604051620027eb380380620027eb8339810160408190526200003a9162000076565b6001600160601b0319606092831b8116608052911b1660a052620000ad565b80516001600160a01b03811681146200007157600080fd5b919050565b6000806040838503121562000089578182fd5b620000948362000059565b9150620000a46020840162000059565b90509250929050565b60805160601c60a05160601c6126e2620001096000398061011d52806104f752806105e2528061066f52806106af528061079a52806117535280611799528061180d525080610bd352806110ce52806118e852506126e26000f3fe60806040526004361061010d5760003560e01c8063c04b8d5911610095578063df2ab5bb11610064578063df2ab5bb146102af578063e0e189a0146102c2578063f28c0498146102d5578063f3995c67146102e8578063fa461e33146102fb5761017d565b8063c04b8d5914610261578063c2e3140a14610274578063c45a015514610287578063db3e21981461029c5761017d565b806349404b7c116100dc57806349404b7c146101e65780634aa4a4fc146101f95780639b2c0a371461021b578063a4a78f0c1461022e578063ac9650d8146102415761017d565b806312210e8a146101825780633beb26c41461018a578063414bf389146101aa5780634659a494146101d35761017d565b3661017d57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461017b576040805162461bcd60e51b81526020600482015260096024820152684e6f7420574554483960b81b604482015290519081900360640190fd5b005b600080fd5b61017b61031b565b34801561019657600080fd5b5061017b6101a5366004612363565b61032d565b6101bd6101b836600461225c565b610332565b6040516101ca91906125cd565b60405180910390f35b61017b6101e1366004611fda565b610459565b61017b6101f436600461237b565b6104f3565b34801561020557600080fd5b5061020e61066d565b6040516101ca919061246a565b61017b6102293660046123aa565b610691565b61017b61023c366004611fda565b61085d565b61025461024f36600461203a565b6108ee565b6040516101ca91906124c4565b6101bd61026f3660046121b1565b610a2e565b61017b610282366004611fda565b610b42565b34801561029357600080fd5b5061020e610bd1565b6101bd6102aa36600461225c565b610bf5565b61017b6102bd366004611f3b565b610d1c565b61017b6102d0366004611f7c565b610dfa565b6101bd6102e3366004612278565b610f21565b61017b6102f6366004611fda565b611017565b34801561030757600080fd5b5061017b6103163660046120cc565b611089565b471561032b5761032b334761119c565b565b600155565b600081608001358061034261128b565b111561038b576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b61042460a08401356103a36080860160608701611f18565b6103b4610100870160e08801611f18565b60408051808201909152806103cc60208a018a611f18565b6103dc60608b0160408c01612340565b6103ec60408c0160208d01611f18565b6040516020016103fe9392919061241f565b6040516020818303038152906040528152602001336001600160a01b0316815250611291565b91508260c001358210156104535760405162461bcd60e51b815260040161044a90612563565b60405180910390fd5b50919050565b604080516323f2ebc360e21b815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156104d357600080fd5b505af11580156104e7573d6000803e3d6000fd5b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561056257600080fd5b505afa158015610576573d6000803e3d6000fd5b505050506040513d602081101561058c57600080fd5b50519050828110156105da576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610668577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561064657600080fd5b505af115801561065a573d6000803e3d6000fd5b50505050610668828261119c565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000821180156106a2575060648211155b6106ab57600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561071a57600080fd5b505afa15801561072e573d6000803e3d6000fd5b505050506040513d602081101561074457600080fd5b5051905084811015610792576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610856577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156107fe57600080fd5b505af1158015610812573d6000803e3d6000fd5b50505050600061271061082e85846113e390919063ffffffff16565b8161083557fe5b049050801561084857610848838261119c565b6108548582840361119c565b505b5050505050565b60408051636eb1769f60e11b81523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b1580156108ae57600080fd5b505afa1580156108c2573d6000803e3d6000fd5b505050506040513d60208110156108d857600080fd5b5051101561085457610854868686868686610459565b60608167ffffffffffffffff8111801561090757600080fd5b5060405190808252806020026020018201604052801561093b57816020015b60608152602001906001900390816109265790505b50905060005b82811015610a27576000803086868581811061095957fe5b905060200281019061096b91906125d6565b60405161097992919061245a565b600060405180830381855af49150503d80600081146109b4576040519150601f19603f3d011682016040523d82523d6000602084013e6109b9565b606091505b509150915081610a05576044815110156109d257600080fd5b600481019050808060200190518101906109ec9190612147565b60405162461bcd60e51b815260040161044a9190612524565b80848481518110610a1257fe5b60209081029190910101525050600101610941565b5092915050565b6000816040015180610a3e61128b565b1115610a87576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b335b6000610a98856000015161140d565b9050610ae4856060015182610ab1578660200151610ab3565b305b60006040518060400160405280610acd8b60000151611419565b8152602001876001600160a01b0316815250611291565b60608601528015610b04578451309250610afd90611428565b8552610b11565b8460600151935050610b17565b50610a89565b8360800151831015610b3b5760405162461bcd60e51b815260040161044a90612563565b5050919050565b60408051636eb1769f60e11b8152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b158015610b9157600080fd5b505afa158015610ba5573d6000803e3d6000fd5b505050506040513d6020811015610bbb57600080fd5b5051101561085457610854868686868686611017565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816080013580610c0561128b565b1115610c4e576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610cea60a0840135610c666080860160608701611f18565b610c77610100870160e08801611f18565b6040518060400160405280886020016020810190610c959190611f18565b610ca560608b0160408c01612340565b610cb260208c018c611f18565b604051602001610cc49392919061241f565b6040516020818303038152906040528152602001336001600160a01b031681525061143f565b91508260c00135821115610d105760405162461bcd60e51b815260040161044a90612537565b50600019600055919050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610d6b57600080fd5b505afa158015610d7f573d6000803e3d6000fd5b505050506040513d6020811015610d9557600080fd5b5051905082811015610de3576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610df457610df48483836115ba565b50505050565b600082118015610e0b575060648211155b610e1457600080fd5b6000856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610e6357600080fd5b505afa158015610e77573d6000803e3d6000fd5b505050506040513d6020811015610e8d57600080fd5b5051905084811015610edb576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610854576000612710610ef083866113e3565b81610ef757fe5b0490508015610f0b57610f0b8784836115ba565b610f1887868385036115ba565b50505050505050565b6000816040013580610f3161128b565b1115610f7a576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610fed6060840135610f926040860160208701611f18565b6040805180820190915260009080610faa89806125d6565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252503360209091015261143f565b5060005491508260800135821115610d105760405162461bcd60e51b815260040161044a90612537565b6040805163d505accf60e01b8152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156104d357600080fd5b60008413806110985750600083135b6110a157600080fd5b60006110af828401846122b0565b905060008060006110c38460000151611701565b9250925092506110f57f0000000000000000000000000000000000000000000000000000000000000000848484611732565b5060008060008a1361111c57846001600160a01b0316846001600160a01b03161089611133565b836001600160a01b0316856001600160a01b0316108a5b9150915081156111525761114d8587602001513384611751565b6104e7565b855161115d9061140d565b1561118257855161116d90611428565b865261117c813360008961143f565b506104e7565b806000819055508394506104e78587602001513384611751565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106111e85780518252601f1990920191602091820191016111c9565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461124a576040519150601f19603f3d011682016040523d82523d6000602084013e61124f565b606091505b5050905080610668576040805162461bcd60e51b815260206004820152600360248201526253544560e81b604482015290519081900360640190fd5b60015490565b60006001600160a01b0384166112a5573093505b60008060006112b78560000151611701565b919450925090506001600160a01b03808316908416106000806112db8686866118e1565b6001600160a01b031663128acb088b856112f48f61191f565b6001600160a01b038e1615611309578d61132f565b876113285773fffd8963efd1fc6a506488495d951d5263988d2561132f565b6401000276a45b8d6040516020016113409190612590565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161136f95949392919061247e565b6040805180830381600087803b15801561138857600080fd5b505af115801561139c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c091906120a9565b91509150826113cf57816113d1565b805b6000039b9a5050505050505050505050565b60008215806113fe575050818102818382816113fb57fe5b04145b61140757600080fd5b92915050565b8051604211155b919050565b6060611407826000602b611935565b805160609061140790839060179060161901611935565b60006001600160a01b038416611453573093505b60008060006114658560000151611701565b919450925090506001600160a01b03808416908316106000806114898587866118e1565b6001600160a01b031663128acb088b856114a28f61191f565b6000036001600160a01b038e16156114ba578d6114e0565b876114d95773fffd8963efd1fc6a506488495d951d5263988d256114e0565b6401000276a45b8d6040516020016114f19190612590565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161152095949392919061247e565b6040805180830381600087803b15801561153957600080fd5b505af115801561154d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157191906120a9565b9150915060008361158657818360000361158c565b82826000035b90985090506001600160a01b038a166115ab578b81146115ab57600080fd5b50505050505050949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b602083106116365780518252601f199092019160209182019101611617565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611698576040519150601f19603f3d011682016040523d82523d6000602084013e61169d565b606091505b50915091508180156116cb5750805115806116cb57508080602001905160208110156116c857600080fd5b50515b610856576040805162461bcd60e51b815260206004820152600260248201526114d560f21b604482015290519081900360640190fd5b6000808061170f8482611a86565b925061171c846014611b36565b9050611729846017611a86565b91509193909250565b600061174885611743868686611bdd565b611c33565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161480156117925750804710155b156118b4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156117f257600080fd5b505af1158015611806573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561188257600080fd5b505af1158015611896573d6000803e3d6000fd5b505050506040513d60208110156118ac57600080fd5b50610df49050565b6001600160a01b0383163014156118d5576118d08483836115ba565b610df4565b610df484848484611c56565b60006119177f0000000000000000000000000000000000000000000000000000000000000000611912868686611bdd565b611da6565b949350505050565b6000600160ff1b821061193157600080fd5b5090565b60608182601f011015611980576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b8282840110156119c8576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b81830184511015611a14576040805162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015290519081900360640190fd5b606082158015611a335760405191506000825260208201604052611a7d565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611a6c578051835260209283019201611a54565b5050858452601f01601f1916604052505b50949350505050565b600081826014011015611ad5576040805162461bcd60e51b8152602060048201526012602482015271746f416464726573735f6f766572666c6f7760701b604482015290519081900360640190fd5b8160140183511015611b26576040805162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b604482015290519081900360640190fd5b500160200151600160601b900490565b600081826003011015611b84576040805162461bcd60e51b8152602060048201526011602482015270746f55696e7432345f6f766572666c6f7760781b604482015290519081900360640190fd5b8160030183511015611bd4576040805162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b604482015290519081900360640190fd5b50016003015190565b611be5611e8a565b826001600160a01b0316846001600160a01b03161115611c03579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b6000611c3f8383611da6565b9050336001600160a01b0382161461140757600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000948594938a169392918291908083835b60208310611cda5780518252601f199092019160209182019101611cbb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d3c576040519150601f19603f3d011682016040523d82523d6000602084013e611d41565b606091505b5091509150818015611d6f575080511580611d6f5750808060200190516020811015611d6c57600080fd5b50515b610854576040805162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015290519081900360640190fd5b600081602001516001600160a01b031682600001516001600160a01b031610611dce57600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301206001600160f81b031960a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516060810182526000808252602082018190529181019190915290565b803561141481612694565b600082601f830112611ec5578081fd5b8135611ed8611ed382612646565b612622565b818152846020838601011115611eec578283fd5b816020850160208301379081016020019190915292915050565b60006101008284031215610453578081fd5b600060208284031215611f29578081fd5b8135611f3481612694565b9392505050565b600080600060608486031215611f4f578182fd5b8335611f5a81612694565b9250602084013591506040840135611f7181612694565b809150509250925092565b600080600080600060a08688031215611f93578081fd5b8535611f9e81612694565b9450602086013593506040860135611fb581612694565b9250606086013591506080860135611fcc81612694565b809150509295509295909350565b60008060008060008060c08789031215611ff2578081fd5b8635611ffd81612694565b95506020870135945060408701359350606087013560ff81168114612020578182fd5b9598949750929560808101359460a0909101359350915050565b6000806020838503121561204c578182fd5b823567ffffffffffffffff80821115612063578384fd5b818501915085601f830112612076578384fd5b813581811115612084578485fd5b8660208083028501011115612097578485fd5b60209290920196919550909350505050565b600080604083850312156120bb578182fd5b505080516020909101519092909150565b600080600080606085870312156120e1578182fd5b8435935060208501359250604085013567ffffffffffffffff80821115612106578384fd5b818701915087601f830112612119578384fd5b813581811115612127578485fd5b886020828501011115612138578485fd5b95989497505060200194505050565b600060208284031215612158578081fd5b815167ffffffffffffffff81111561216e578182fd5b8201601f8101841361217e578182fd5b805161218c611ed382612646565b8181528560208385010111156121a0578384fd5b611748826020830160208601612668565b6000602082840312156121c2578081fd5b813567ffffffffffffffff808211156121d9578283fd5b9083019060a082860312156121ec578283fd5b60405160a08101818110838211171561220157fe5b604052823582811115612212578485fd5b61221e87828601611eb5565b82525061222d60208401611eaa565b602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b6000610100828403121561226e578081fd5b611f348383611f06565b600060208284031215612289578081fd5b813567ffffffffffffffff81111561229f578182fd5b820160a08185031215611f34578182fd5b6000602082840312156122c1578081fd5b813567ffffffffffffffff808211156122d8578283fd5b90830190604082860312156122eb578283fd5b60405160408101818110838211171561230057fe5b604052823582811115612311578485fd5b61231d87828601611eb5565b8252506020830135925061233083612694565b6020810192909252509392505050565b600060208284031215612351578081fd5b813562ffffff81168114611f34578182fd5b600060208284031215612374578081fd5b5035919050565b6000806040838503121561238d578182fd5b82359150602083013561239f81612694565b809150509250929050565b600080600080608085870312156123bf578182fd5b8435935060208501356123d181612694565b92506040850135915060608501356123e881612694565b939692955090935050565b6000815180845261240b816020860160208601612668565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a0608082018190526000906124b9908301846123f3565b979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561251757603f198886030184526125058583516123f3565b945092850192908501906001016124e9565b5092979650505050505050565b600060208252611f3460208301846123f3565b602080825260129082015271151bdbc81b5d58da081c995c5d595cdd195960721b604082015260600190565b602080825260139082015272151bdbc81b1a5d1d1b19481c9958d95a5d9959606a1b604082015260600190565b6000602082528251604060208401526125ac60608401826123f3565b602094909401516001600160a01b0316604093909301929092525090919050565b90815260200190565b6000808335601e198436030181126125ec578283fd5b83018035915067ffffffffffffffff821115612606578283fd5b60200191503681900382131561261b57600080fd5b9250929050565b60405181810167ffffffffffffffff8111828210171561263e57fe5b604052919050565b600067ffffffffffffffff82111561265a57fe5b50601f01601f191660200190565b60005b8381101561268357818101518382015260200161266b565b83811115610df45750506000910152565b6001600160a01b03811681146126a957600080fd5b5056fea2646970667358221220399e490876649b32daa7be2edc4c2ed0b09fb033533e6758242d3e7179279ae564736f6c63430007060033",
    "sourceMap": "113:324:59:-:0;;;-1:-1:-1;;1338:57:38;;180:77:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;522:18:41;;;;;;;;550:14;;;;;113:324:59;;14:179:114;95:13;;-1:-1:-1;;;;;137:31:114;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:307::-;;;338:2;326:9;317:7;313:23;309:32;306:2;;;359:6;351;344:22;306:2;387:42;419:9;387:42;:::i;:::-;377:52;;448:51;495:2;484:9;480:18;448:51;:::i;:::-;438:61;;296:209;;;;;:::o;:::-;113:324:59;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061010d5760003560e01c8063c04b8d5911610095578063df2ab5bb11610064578063df2ab5bb146102af578063e0e189a0146102c2578063f28c0498146102d5578063f3995c67146102e8578063fa461e33146102fb5761017d565b8063c04b8d5914610261578063c2e3140a14610274578063c45a015514610287578063db3e21981461029c5761017d565b806349404b7c116100dc57806349404b7c146101e65780634aa4a4fc146101f95780639b2c0a371461021b578063a4a78f0c1461022e578063ac9650d8146102415761017d565b806312210e8a146101825780633beb26c41461018a578063414bf389146101aa5780634659a494146101d35761017d565b3661017d57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461017b576040805162461bcd60e51b81526020600482015260096024820152684e6f7420574554483960b81b604482015290519081900360640190fd5b005b600080fd5b61017b61031b565b34801561019657600080fd5b5061017b6101a5366004612363565b61032d565b6101bd6101b836600461225c565b610332565b6040516101ca91906125cd565b60405180910390f35b61017b6101e1366004611fda565b610459565b61017b6101f436600461237b565b6104f3565b34801561020557600080fd5b5061020e61066d565b6040516101ca919061246a565b61017b6102293660046123aa565b610691565b61017b61023c366004611fda565b61085d565b61025461024f36600461203a565b6108ee565b6040516101ca91906124c4565b6101bd61026f3660046121b1565b610a2e565b61017b610282366004611fda565b610b42565b34801561029357600080fd5b5061020e610bd1565b6101bd6102aa36600461225c565b610bf5565b61017b6102bd366004611f3b565b610d1c565b61017b6102d0366004611f7c565b610dfa565b6101bd6102e3366004612278565b610f21565b61017b6102f6366004611fda565b611017565b34801561030757600080fd5b5061017b6103163660046120cc565b611089565b471561032b5761032b334761119c565b565b600155565b600081608001358061034261128b565b111561038b576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b61042460a08401356103a36080860160608701611f18565b6103b4610100870160e08801611f18565b60408051808201909152806103cc60208a018a611f18565b6103dc60608b0160408c01612340565b6103ec60408c0160208d01611f18565b6040516020016103fe9392919061241f565b6040516020818303038152906040528152602001336001600160a01b0316815250611291565b91508260c001358210156104535760405162461bcd60e51b815260040161044a90612563565b60405180910390fd5b50919050565b604080516323f2ebc360e21b815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156104d357600080fd5b505af11580156104e7573d6000803e3d6000fd5b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561056257600080fd5b505afa158015610576573d6000803e3d6000fd5b505050506040513d602081101561058c57600080fd5b50519050828110156105da576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610668577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561064657600080fd5b505af115801561065a573d6000803e3d6000fd5b50505050610668828261119c565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000821180156106a2575060648211155b6106ab57600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561071a57600080fd5b505afa15801561072e573d6000803e3d6000fd5b505050506040513d602081101561074457600080fd5b5051905084811015610792576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610856577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156107fe57600080fd5b505af1158015610812573d6000803e3d6000fd5b50505050600061271061082e85846113e390919063ffffffff16565b8161083557fe5b049050801561084857610848838261119c565b6108548582840361119c565b505b5050505050565b60408051636eb1769f60e11b81523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b1580156108ae57600080fd5b505afa1580156108c2573d6000803e3d6000fd5b505050506040513d60208110156108d857600080fd5b5051101561085457610854868686868686610459565b60608167ffffffffffffffff8111801561090757600080fd5b5060405190808252806020026020018201604052801561093b57816020015b60608152602001906001900390816109265790505b50905060005b82811015610a27576000803086868581811061095957fe5b905060200281019061096b91906125d6565b60405161097992919061245a565b600060405180830381855af49150503d80600081146109b4576040519150601f19603f3d011682016040523d82523d6000602084013e6109b9565b606091505b509150915081610a05576044815110156109d257600080fd5b600481019050808060200190518101906109ec9190612147565b60405162461bcd60e51b815260040161044a9190612524565b80848481518110610a1257fe5b60209081029190910101525050600101610941565b5092915050565b6000816040015180610a3e61128b565b1115610a87576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b335b6000610a98856000015161140d565b9050610ae4856060015182610ab1578660200151610ab3565b305b60006040518060400160405280610acd8b60000151611419565b8152602001876001600160a01b0316815250611291565b60608601528015610b04578451309250610afd90611428565b8552610b11565b8460600151935050610b17565b50610a89565b8360800151831015610b3b5760405162461bcd60e51b815260040161044a90612563565b5050919050565b60408051636eb1769f60e11b8152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b158015610b9157600080fd5b505afa158015610ba5573d6000803e3d6000fd5b505050506040513d6020811015610bbb57600080fd5b5051101561085457610854868686868686611017565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816080013580610c0561128b565b1115610c4e576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610cea60a0840135610c666080860160608701611f18565b610c77610100870160e08801611f18565b6040518060400160405280886020016020810190610c959190611f18565b610ca560608b0160408c01612340565b610cb260208c018c611f18565b604051602001610cc49392919061241f565b6040516020818303038152906040528152602001336001600160a01b031681525061143f565b91508260c00135821115610d105760405162461bcd60e51b815260040161044a90612537565b50600019600055919050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610d6b57600080fd5b505afa158015610d7f573d6000803e3d6000fd5b505050506040513d6020811015610d9557600080fd5b5051905082811015610de3576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610df457610df48483836115ba565b50505050565b600082118015610e0b575060648211155b610e1457600080fd5b6000856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610e6357600080fd5b505afa158015610e77573d6000803e3d6000fd5b505050506040513d6020811015610e8d57600080fd5b5051905084811015610edb576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610854576000612710610ef083866113e3565b81610ef757fe5b0490508015610f0b57610f0b8784836115ba565b610f1887868385036115ba565b50505050505050565b6000816040013580610f3161128b565b1115610f7a576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610fed6060840135610f926040860160208701611f18565b6040805180820190915260009080610faa89806125d6565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252503360209091015261143f565b5060005491508260800135821115610d105760405162461bcd60e51b815260040161044a90612537565b6040805163d505accf60e01b8152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156104d357600080fd5b60008413806110985750600083135b6110a157600080fd5b60006110af828401846122b0565b905060008060006110c38460000151611701565b9250925092506110f57f0000000000000000000000000000000000000000000000000000000000000000848484611732565b5060008060008a1361111c57846001600160a01b0316846001600160a01b03161089611133565b836001600160a01b0316856001600160a01b0316108a5b9150915081156111525761114d8587602001513384611751565b6104e7565b855161115d9061140d565b1561118257855161116d90611428565b865261117c813360008961143f565b506104e7565b806000819055508394506104e78587602001513384611751565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106111e85780518252601f1990920191602091820191016111c9565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461124a576040519150601f19603f3d011682016040523d82523d6000602084013e61124f565b606091505b5050905080610668576040805162461bcd60e51b815260206004820152600360248201526253544560e81b604482015290519081900360640190fd5b60015490565b60006001600160a01b0384166112a5573093505b60008060006112b78560000151611701565b919450925090506001600160a01b03808316908416106000806112db8686866118e1565b6001600160a01b031663128acb088b856112f48f61191f565b6001600160a01b038e1615611309578d61132f565b876113285773fffd8963efd1fc6a506488495d951d5263988d2561132f565b6401000276a45b8d6040516020016113409190612590565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161136f95949392919061247e565b6040805180830381600087803b15801561138857600080fd5b505af115801561139c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c091906120a9565b91509150826113cf57816113d1565b805b6000039b9a5050505050505050505050565b60008215806113fe575050818102818382816113fb57fe5b04145b61140757600080fd5b92915050565b8051604211155b919050565b6060611407826000602b611935565b805160609061140790839060179060161901611935565b60006001600160a01b038416611453573093505b60008060006114658560000151611701565b919450925090506001600160a01b03808416908316106000806114898587866118e1565b6001600160a01b031663128acb088b856114a28f61191f565b6000036001600160a01b038e16156114ba578d6114e0565b876114d95773fffd8963efd1fc6a506488495d951d5263988d256114e0565b6401000276a45b8d6040516020016114f19190612590565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161152095949392919061247e565b6040805180830381600087803b15801561153957600080fd5b505af115801561154d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157191906120a9565b9150915060008361158657818360000361158c565b82826000035b90985090506001600160a01b038a166115ab578b81146115ab57600080fd5b50505050505050949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b602083106116365780518252601f199092019160209182019101611617565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611698576040519150601f19603f3d011682016040523d82523d6000602084013e61169d565b606091505b50915091508180156116cb5750805115806116cb57508080602001905160208110156116c857600080fd5b50515b610856576040805162461bcd60e51b815260206004820152600260248201526114d560f21b604482015290519081900360640190fd5b6000808061170f8482611a86565b925061171c846014611b36565b9050611729846017611a86565b91509193909250565b600061174885611743868686611bdd565b611c33565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161480156117925750804710155b156118b4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156117f257600080fd5b505af1158015611806573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561188257600080fd5b505af1158015611896573d6000803e3d6000fd5b505050506040513d60208110156118ac57600080fd5b50610df49050565b6001600160a01b0383163014156118d5576118d08483836115ba565b610df4565b610df484848484611c56565b60006119177f0000000000000000000000000000000000000000000000000000000000000000611912868686611bdd565b611da6565b949350505050565b6000600160ff1b821061193157600080fd5b5090565b60608182601f011015611980576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b8282840110156119c8576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b81830184511015611a14576040805162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015290519081900360640190fd5b606082158015611a335760405191506000825260208201604052611a7d565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611a6c578051835260209283019201611a54565b5050858452601f01601f1916604052505b50949350505050565b600081826014011015611ad5576040805162461bcd60e51b8152602060048201526012602482015271746f416464726573735f6f766572666c6f7760701b604482015290519081900360640190fd5b8160140183511015611b26576040805162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b604482015290519081900360640190fd5b500160200151600160601b900490565b600081826003011015611b84576040805162461bcd60e51b8152602060048201526011602482015270746f55696e7432345f6f766572666c6f7760781b604482015290519081900360640190fd5b8160030183511015611bd4576040805162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b604482015290519081900360640190fd5b50016003015190565b611be5611e8a565b826001600160a01b0316846001600160a01b03161115611c03579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b6000611c3f8383611da6565b9050336001600160a01b0382161461140757600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000948594938a169392918291908083835b60208310611cda5780518252601f199092019160209182019101611cbb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d3c576040519150601f19603f3d011682016040523d82523d6000602084013e611d41565b606091505b5091509150818015611d6f575080511580611d6f5750808060200190516020811015611d6c57600080fd5b50515b610854576040805162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015290519081900360640190fd5b600081602001516001600160a01b031682600001516001600160a01b031610611dce57600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301206001600160f81b031960a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516060810182526000808252602082018190529181019190915290565b803561141481612694565b600082601f830112611ec5578081fd5b8135611ed8611ed382612646565b612622565b818152846020838601011115611eec578283fd5b816020850160208301379081016020019190915292915050565b60006101008284031215610453578081fd5b600060208284031215611f29578081fd5b8135611f3481612694565b9392505050565b600080600060608486031215611f4f578182fd5b8335611f5a81612694565b9250602084013591506040840135611f7181612694565b809150509250925092565b600080600080600060a08688031215611f93578081fd5b8535611f9e81612694565b9450602086013593506040860135611fb581612694565b9250606086013591506080860135611fcc81612694565b809150509295509295909350565b60008060008060008060c08789031215611ff2578081fd5b8635611ffd81612694565b95506020870135945060408701359350606087013560ff81168114612020578182fd5b9598949750929560808101359460a0909101359350915050565b6000806020838503121561204c578182fd5b823567ffffffffffffffff80821115612063578384fd5b818501915085601f830112612076578384fd5b813581811115612084578485fd5b8660208083028501011115612097578485fd5b60209290920196919550909350505050565b600080604083850312156120bb578182fd5b505080516020909101519092909150565b600080600080606085870312156120e1578182fd5b8435935060208501359250604085013567ffffffffffffffff80821115612106578384fd5b818701915087601f830112612119578384fd5b813581811115612127578485fd5b886020828501011115612138578485fd5b95989497505060200194505050565b600060208284031215612158578081fd5b815167ffffffffffffffff81111561216e578182fd5b8201601f8101841361217e578182fd5b805161218c611ed382612646565b8181528560208385010111156121a0578384fd5b611748826020830160208601612668565b6000602082840312156121c2578081fd5b813567ffffffffffffffff808211156121d9578283fd5b9083019060a082860312156121ec578283fd5b60405160a08101818110838211171561220157fe5b604052823582811115612212578485fd5b61221e87828601611eb5565b82525061222d60208401611eaa565b602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b6000610100828403121561226e578081fd5b611f348383611f06565b600060208284031215612289578081fd5b813567ffffffffffffffff81111561229f578182fd5b820160a08185031215611f34578182fd5b6000602082840312156122c1578081fd5b813567ffffffffffffffff808211156122d8578283fd5b90830190604082860312156122eb578283fd5b60405160408101818110838211171561230057fe5b604052823582811115612311578485fd5b61231d87828601611eb5565b8252506020830135925061233083612694565b6020810192909252509392505050565b600060208284031215612351578081fd5b813562ffffff81168114611f34578182fd5b600060208284031215612374578081fd5b5035919050565b6000806040838503121561238d578182fd5b82359150602083013561239f81612694565b809150509250929050565b600080600080608085870312156123bf578182fd5b8435935060208501356123d181612694565b92506040850135915060608501356123e881612694565b939692955090935050565b6000815180845261240b816020860160208601612668565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a0608082018190526000906124b9908301846123f3565b979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561251757603f198886030184526125058583516123f3565b945092850192908501906001016124e9565b5092979650505050505050565b600060208252611f3460208301846123f3565b602080825260129082015271151bdbc81b5d58da081c995c5d595cdd195960721b604082015260600190565b602080825260139082015272151bdbc81b1a5d1d1b19481c9958d95a5d9959606a1b604082015260600190565b6000602082528251604060208401526125ac60608401826123f3565b602094909401516001600160a01b0316604093909301929092525090919050565b90815260200190565b6000808335601e198436030181126125ec578283fd5b83018035915067ffffffffffffffff821115612606578283fd5b60200191503681900382131561261b57600080fd5b9250929050565b60405181810167ffffffffffffffff8111828210171561263e57fe5b604052919050565b600067ffffffffffffffff82111561265a57fe5b50601f01601f191660200190565b60005b8381101561268357818101518382015260200161266b565b83811115610df45750506000910152565b6001600160a01b03811681146126a957600080fd5b5056fea2646970667358221220399e490876649b32daa7be2edc4c2ed0b09fb033533e6758242d3e7179279ae564736f6c63430007060033",
    "sourceMap": "113:324:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;439:10:42;-1:-1:-1;;;;;453:5:42;439:19;;431:41;;;;;-1:-1:-1;;;431:41:42;;;;;;;;;;;;-1:-1:-1;;;431:41:42;;;;;;;;;;;;;;;113:324:59;;;;;1406:160:42;;;:::i;365:70:59:-;;;;;;;;;;-1:-1:-1;365:70:59;;;;;:::i;:::-;;:::i;4516:685:38:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1325:289:45;;;;;;:::i;:::-;;:::i;524:397:42:-;;;;;;:::i;:::-;;:::i;420:39:41:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;553:698:43:-;;;;;;:::i;:::-;;:::i;1652:348:45:-;;;;;;:::i;:::-;;:::i;308:653:40:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5239:1289:38:-;;;;;;:::i;:::-;;:::i;973:314:45:-;;;;;;:::i;:::-;;:::i;328:41:41:-;;;;;;;;;;;;;:::i;8117:870:38:-;;;;;;:::i;:::-;;:::i;966:395:42:-;;;;;;:::i;:::-;;:::i;1303:678:43:-;;;;;;:::i;:::-;;:::i;9025:772:38:-;;;;;;:::i;:::-;;:::i;662:273:45:-;;;;;;:::i;:::-;;:::i;2122:1300:38:-;;;;;;;;;;-1:-1:-1;2122:1300:38;;;;;:::i;:::-;;:::i;1406:160:42:-;1467:21;:25;1463:96;;1494:65;1525:10;1537:21;1494:30;:65::i;:::-;1406:160::o;365:70:59:-;416:4;:12;365:70::o;4516:685:38:-;4702:17;4668:6;:15;;;244:8:44;223:17;:15;:17::i;:::-;:29;;215:61;;;;;-1:-1:-1;;;215:61:44;;;;;;;;;;;;-1:-1:-1;;;215:61:44;;;;;;;;;;;;;;;4747:369:38::1;4779:15;::::0;::::1;;4808:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;4838:24;::::0;;;::::1;::::0;::::1;;:::i;:::-;4876:230;::::0;;;;::::1;::::0;;;;4955:14:::1;;::::0;::::1;:6:::0;:14:::1;:::i;:::-;4991:10;::::0;;;::::1;::::0;::::1;;:::i;:::-;5023:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;4917:139;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4876:230;;;;5081:10;-1:-1:-1::0;;;;;4876:230:38::1;;;::::0;4747:18:::1;:369::i;:::-;4735:381;;5147:6;:23;;;5134:9;:36;;5126:68;;;;-1:-1:-1::0;;;5126:68:38::1;;;;;;;:::i;:::-;;;;;;;;;4516:685:::0;;;;:::o;1325:289:45:-;1517:90;;;-1:-1:-1;;;1517:90:45;;1551:10;1517:90;;;;1571:4;1517:90;;;;;;;;;;;;;;;;1593:4;1517:90;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1517:33:45;;;;;:90;;;;;-1:-1:-1;;1517:90:45;;;;;;;-1:-1:-1;1517:33:45;:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1325:289;;;;;;:::o;524:397:42:-;621:20;651:5;-1:-1:-1;;;;;644:23:42;;676:4;644:38;;;;;;;;;;;;;-1:-1:-1;;;;;644:38:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;644:38:42;;-1:-1:-1;700:29:42;;;;692:60;;;;;-1:-1:-1;;;692:60:42;;;;;;;;;;;;-1:-1:-1;;;692:60:42;;;;;;;;;;;;;;;767:16;;763:152;;806:5;-1:-1:-1;;;;;799:22:42;;822:12;799:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;849:55;880:9;891:12;849:30;:55::i;:::-;524:397;;;:::o;420:39:41:-;;;:::o;553:698:43:-;752:1;742:7;:11;:29;;;;;768:3;757:7;:14;;742:29;734:38;;;;;;783:20;813:5;-1:-1:-1;;;;;806:23:43;;838:4;806:38;;;;;;;;;;;;;-1:-1:-1;;;;;806:38:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;806:38:43;;-1:-1:-1;862:29:43;;;;854:60;;;;;-1:-1:-1;;;854:60:43;;;;;;;;;;;;-1:-1:-1;;;854:60:43;;;;;;;;;;;;;;;929:16;;925:320;;968:5;-1:-1:-1;;;;;961:22:43;;984:12;961:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1011:17;1059:6;1031:25;1048:7;1031:12;:16;;:25;;;;:::i;:::-;:34;;;;;;;-1:-1:-1;1083:13:43;;1079:74;;1098:55;1129:12;1143:9;1098:30;:55::i;:::-;1167:67;1198:9;1224;1209:12;:24;1167:30;:67::i;:::-;925:320;;553:698;;;;;:::o;1652:348:45:-;1861:50;;;-1:-1:-1;;;1861:50:45;;1885:10;1861:50;;;;1905:4;1861:50;;;;;;-1:-1:-1;;1914:17:45;-1:-1:-1;;;;;1861:23:45;;;;;:50;;;;;;;;;;;;;;;:23;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1861:50:45;:70;1857:136;;;1945:48;1963:5;1970;1977:6;1985:1;1988;1991;1945:17;:48::i;308:653:40:-;383:22;439:4;427:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:34;;466:9;461:494;481:15;;;461:494;;;518:12;;563:4;582;;587:1;582:7;;;;;;;;;;;;;;;;;;:::i;:::-;555:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;517:73;;;;610:7;605:306;;737:2;721:6;:13;:18;717:32;;;741:8;;;717:32;820:4;812:6;808:17;798:27;;878:6;867:28;;;;;;;;;;;;:::i;:::-;860:36;;-1:-1:-1;;;860:36:40;;;;;;;;:::i;605:306::-;938:6;925:7;933:1;925:10;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;498:3:40;;461:494;;;;308:653;;;;:::o;5239:1289:38:-;5411:17;5377:6;:15;;;244:8:44;223:17;:15;:17::i;:::-;:29;;215:61;;;;;-1:-1:-1;;;215:61:44;;;;;;;;;;;;-1:-1:-1;;;215:61:44;;;;;;;;;;;;;;;5460:10:38::1;5518:925;5545:21;5569:30;:6;:11;;;:28;:30::i;:::-;5545:54;;5711:394;5747:6;:15;;;5780:16;:51;;5815:6;:16;;;5780:51;;;5807:4;5780:51;5900:1;5919:172;;;;;;;;5964:26;:6;:11;;;:24;:26::i;:::-;5919:172;;;;6067:5;-1:-1:-1::0;;;;;5919:172:38::1;;;::::0;5711:18:::1;:394::i;:::-;5693:15;::::0;::::1;:412:::0;6175:258;::::1;;;6306:11:::0;;6231:4:::1;::::0;-1:-1:-1;6306:23:38::1;::::0;:21:::1;:23::i;:::-;6292:37:::0;;6175:258:::1;;;6380:6;:15;;;6368:27;;6413:5;;;6175:258;5518:925;;;;6474:6;:23;;;6461:9;:36;;6453:68;;;;-1:-1:-1::0;;;6453:68:38::1;;;;;;;:::i;:::-;286:1:44;5239:1289:38::0;;;;:::o;973:314:45:-;1177:50;;;-1:-1:-1;;;1177:50:45;;1201:10;1177:50;;;;1221:4;1177:50;;;;;;1230:5;;-1:-1:-1;;;;;1177:23:45;;;;;:50;;;;;;;;;;;;;;;:23;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1177:50:45;:58;1173:107;;;1237:43;1248:5;1255;1262:8;1272:1;1275;1278;1237:10;:43::i;328:41:41:-;;;:::o;8117:870:38:-;8305:16;8271:6;:15;;;244:8:44;223:17;:15;:17::i;:::-;:29;;215:61;;;;;-1:-1:-1;;;215:61:44;;;;;;;;;;;;-1:-1:-1;;;215:61:44;;;;;;;;;;;;;;;8404:371:38::1;8437:16;::::0;::::1;;8467;::::0;;;::::1;::::0;::::1;;:::i;:::-;8497:24;::::0;;;::::1;::::0;::::1;;:::i;:::-;8535:230;;;;;;;;8614:6;:15;;;;;;;;;;:::i;:::-;8651:10;::::0;;;::::1;::::0;::::1;;:::i;:::-;8683:14;;::::0;::::1;:6:::0;:14:::1;:::i;:::-;8576:139;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8535:230;;;;8740:10;-1:-1:-1::0;;;;;8535:230:38::1;;;::::0;8404:19:::1;:371::i;:::-;8393:382;;8806:6;:22;;;8794:8;:34;;8786:65;;;;-1:-1:-1::0;;;8786:65:38::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;8939:14:38::1;:41:::0;8117:870;;-1:-1:-1;8117:870:38:o;966:395:42:-;1107:20;1137:5;-1:-1:-1;;;;;1130:23:42;;1162:4;1130:38;;;;;;;;;;;;;-1:-1:-1;;;;;1130:38:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1130:38:42;;-1:-1:-1;1186:29:42;;;;1178:60;;;;;-1:-1:-1;;;1178:60:42;;;;;;;;;;;;-1:-1:-1;;;1178:60:42;;;;;;;;;;;;;;;1253:16;;1249:106;;1285:59;1313:5;1320:9;1331:12;1285:27;:59::i;:::-;966:395;;;;:::o;1303:678:43:-;1524:1;1514:7;:11;:29;;;;;1540:3;1529:7;:14;;1514:29;1506:38;;;;;;1555:20;1585:5;-1:-1:-1;;;;;1578:23:43;;1610:4;1578:38;;;;;;;;;;;;;-1:-1:-1;;;;;1578:38:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1578:38:43;;-1:-1:-1;1634:29:43;;;;1626:60;;;;;-1:-1:-1;;;1626:60:43;;;;;;;;;;;;-1:-1:-1;;;1626:60:43;;;;;;;;;;;;;;;1701:16;;1697:278;;1733:17;1781:6;1753:25;:12;1770:7;1753:16;:25::i;:::-;:34;;;;;;;-1:-1:-1;1805:13:43;;1801:78;;1820:59;1848:5;1855:12;1869:9;1820:27;:59::i;:::-;1893:71;1921:5;1928:9;1954;1939:12;:24;1893:27;:71::i;:::-;1697:278;1303:678;;;;;;:::o;9025:772:38:-;9201:16;9167:6;:15;;;244:8:44;223:17;:15;:17::i;:::-;:29;;215:61;;;;;-1:-1:-1;;;215:61:44;;;;;;;;;;;;-1:-1:-1;;;215:61:44;;;;;;;;;;;;;;;9452:176:38::1;9485:16;::::0;::::1;;9515;::::0;;;::::1;::::0;::::1;;:::i;:::-;9560:58;::::0;;;;::::1;::::0;;;9545:1:::1;::::0;9560:58;9585:11:::1;:6:::0;;:11:::1;:::i;:::-;9560:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;9560:58:38;;;-1:-1:-1;9605:10:38::1;9560:58;::::0;;::::1;::::0;9452:19:::1;:176::i;:::-;;9650:14;;9639:25;;9694:6;:22;;;9682:8;:34;;9674:65;;;;-1:-1:-1::0;;;9674:65:38::1;;;;;;;:::i;662:273:45:-:0;849:79;;;-1:-1:-1;;;849:79:45;;876:10;849:79;;;;896:4;849:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;849:26:45;;;;;:79;;;;;-1:-1:-1;;849:79:45;;;;;;;-1:-1:-1;849:26:45;:79;;;;;;;;;;2122:1300:38;2298:1;2283:12;:16;:36;;;;2318:1;2303:12;:16;2283:36;2275:45;;;;;;2393:28;2424:37;;;;2435:5;2424:37;:::i;:::-;2393:68;;2472:15;2489:16;2507:10;2521:53;:4;:22;;;:51;:53::i;:::-;2471:103;;;;;;2584:66;2618:7;2627;2636:8;2646:3;2584:33;:66::i;:::-;;2662:17;2681:19;2719:1;2704:12;:16;:132;;2805:7;-1:-1:-1;;;;;2794:18:38;:8;-1:-1:-1;;;;;2794:18:38;;2822:12;2704:132;;;2746:8;-1:-1:-1;;;;;2736:18:38;:7;-1:-1:-1;;;;;2736:18:38;;2764:12;2704:132;2661:175;;;;2850:12;2846:570;;;2878:49;2882:7;2891:4;:10;;;2903;2915:11;2878:3;:49::i;:::-;2846:570;;;3014:9;;:28;;:26;:28::i;:::-;3010:396;;;3074:9;;:21;;:19;:21::i;:::-;3062:33;;3113:53;3133:11;3146:10;3062:9;:4;3113:19;:53::i;:::-;;3010:396;;;3222:11;3205:14;:28;;;;3261:8;3251:18;;3342:49;3346:7;3355:4;:10;;;3367;3379:11;3342:3;:49::i;2370:165:58:-;2482:12;;;2442;2482;;;;;;;;;-1:-1:-1;;;;;2460:7:58;;;2475:5;;2460:35;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2460:35:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:54;;;2513:7;2505:23;;;;;-1:-1:-1;;;2505:23:58;;;;;;;;;;;;-1:-1:-1;;;2505:23:58;;;;;;;;;;;;;;263:96:59;348:4;;263:96;:::o;3476:1002:38:-;3653:17;-1:-1:-1;;;;;3749:23:38;;3745:54;;3794:4;3774:25;;3745:54;3811:15;3828:16;3846:10;3860:53;:4;:22;;;:51;:53::i;:::-;3810:103;;-1:-1:-1;3810:103:38;-1:-1:-1;3810:103:38;-1:-1:-1;;;;;;3942:18:38;;;;;;;3924:15;;4006:31;3810:103;;;4006:7;:31::i;:::-;-1:-1:-1;;;;;4006:36:38;;4056:9;4079:10;4103:19;:8;:17;:19::i;:::-;-1:-1:-1;;;;;4136:22:38;;;:235;;4354:17;4136:235;;;4199:10;:118;;4290:27;4199:118;;;4236:27;4199:118;4396:4;4385:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;4006:405;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3971:440;;;;4439:10;:30;;4462:7;4439:30;;;4452:7;4439:30;4437:33;;;3476:1002;-1:-1:-1;;;;;;;;;;;3476:1002:38:o;986:125:105:-;1044:9;1073:6;;;:30;;-1:-1:-1;;1088:5:105;;;1102:1;1097;1088:5;1097:1;1083:15;;;;;:20;1073:30;1065:39;;;;;;986:125;;;;:::o;992:138:56:-;1083:11;;777:24;-1:-1:-1;1083:40:56;992:138;;;;:::o;2319:127::-;2383:12;2414:25;:4;2425:1;618:23;2414:10;:25::i;2635:149::-;2751:11;;2696:12;;2727:50;;2751:4;;507:20;;-1:-1:-1;;2751:25:56;2727:10;:50::i;6583:1496:38:-;6762:16;-1:-1:-1;;;;;6857:23:38;;6853:54;;6902:4;6882:25;;6853:54;6919:16;6937:15;6954:10;6968:53;:4;:22;;;:51;:53::i;:::-;6918:103;;-1:-1:-1;6918:103:38;-1:-1:-1;6918:103:38;-1:-1:-1;;;;;;7050:18:38;;;;;;;7032:15;;7124:77;6918:103;;;7124:7;:77::i;:::-;-1:-1:-1;;;;;7124:82:38;;7224:9;7251:10;7280:20;:9;:18;:20::i;:::-;7279:21;;-1:-1:-1;;;;;7318:22:38;;;:259;;7560:17;7318:259;;;7389:10;:126;;7488:27;7389:126;;;7430:27;7389:126;7606:4;7595:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;7124:501;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7079:546;;;;7636:25;7703:10;:134;;7799:12;7823;7822:13;;7703:134;;;7737:12;7761;7760:13;;7703:134;7671:166;;-1:-1:-1;7671:166:38;-1:-1:-1;;;;;;8009:22:38;;8005:67;;8062:9;8041:17;:30;8033:39;;;;;;6583:1496;;;;;;;;;;;;;:::o;1211:309:58:-;1371:59;;;-1:-1:-1;;;;;1371:59:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1371:59:58;-1:-1:-1;;;1371:59:58;;;1360:71;;;;1325:12;;;;1360:10;;;;1371:59;1360:71;;;1371:59;1360:71;;1371:59;1360:71;;;;;;;;;;-1:-1:-1;;1360:71:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;-1:-1:-1;1461:11:58;;:16;;:44;;;1492:4;1481:24;;;;;;;;;;;;;;;-1:-1:-1;1481:24:58;1461:44;1441:72;;;;;-1:-1:-1;;;1441:72:58;;;;;;;;;;;;-1:-1:-1;;;1441:72:58;;;;;;;;;;;;;;1779:314:56;1883:14;;;1983:17;:4;1883:14;1983;:17::i;:::-;1974:26;-1:-1:-1;2016:24:56;:4;304:2;2016:13;:24::i;:::-;2010:30;-1:-1:-1;2059:27:56;:4;507:20;2059:14;:27::i;:::-;2050:36;;1779:314;;;;;:::o;683:259:55:-;829:19;867:68;882:7;891:43;914:6;922;930:3;891:22;:43::i;:::-;867:14;:68::i;:::-;860:75;683:259;-1:-1:-1;;;;;683:259:55:o;1757:699:42:-;1904:5;-1:-1:-1;;;;;1895:14:42;:5;-1:-1:-1;;;;;1895:14:42;;:48;;;;;1938:5;1913:21;:30;;1895:48;1891:559;;;1996:5;-1:-1:-1;;;;;1989:21:42;;2018:5;1989:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:5;-1:-1:-1;;;;;2075:22:42;;2098:9;2109:5;2075:40;;;;;;;;;;;;;-1:-1:-1;;;;;2075:40:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1891:559:42;;-1:-1:-1;1891:559:42;;-1:-1:-1;;;;;2136:22:42;;2153:4;2136:22;2132:318;;;2265:52;2293:5;2300:9;2311:5;2265:27;:52::i;:::-;2132:318;;;2376:63;2408:5;2415;2422:9;2433:5;2376:31;:63::i;1644:349:38:-;1757:14;1834:138;1882:7;1911:43;1934:6;1942;1950:3;1911:22;:43::i;:::-;1834:26;:138::i;:::-;1783:203;1644:349;-1:-1:-1;;;;1644:349:38:o;924:121:106:-;976:8;-1:-1:-1;;;1004:1:106;:10;996:19;;;;;;-1:-1:-1;1036:1:106;924:121::o;399:3007:54:-;521:12;569:7;553;563:2;553:12;:23;;545:50;;;;;-1:-1:-1;;;545:50:54;;;;;;;;;;;;-1:-1:-1;;;545:50:54;;;;;;;;;;;;;;;633:6;622:7;613:6;:16;:26;;605:53;;;;;-1:-1:-1;;;605:53:54;;;;;;;;;;;;-1:-1:-1;;;605:53:54;;;;;;;;;;;;;;;702:7;693:6;:16;676:6;:13;:33;;668:63;;;;;-1:-1:-1;;;668:63:54;;;;;;;;;;;;-1:-1:-1;;;668:63:54;;;;;;;;;;;;;;;742:22;805:15;;837:2099;;;;3089:4;3083:11;3070:24;;3287:1;3276:9;3269:20;3339:4;3328:9;3324:20;3318:4;3311:34;798:2565;;837:2099;1031:4;1025:11;1012:24;;1726:2;1717:7;1713:16;2128:9;2121:17;2115:4;2111:28;2099:9;2088;2084:25;2080:60;2180:7;2176:2;2172:16;2448:6;2434:9;2427:17;2421:4;2417:28;2405:9;2397:6;2393:22;2389:57;2385:70;2210:461;2485:3;2481:2;2478:11;2210:461;;;2639:9;;2628:21;;2530:4;2522:13;;;;2566;2210:461;;;-1:-1:-1;;2693:26:54;;;2913:2;2896:11;-1:-1:-1;;2892:25:54;2886:4;2879:39;-1:-1:-1;798:2565:54;-1:-1:-1;3390:9:54;399:3007;-1:-1:-1;;;;399:3007:54:o;3412:416::-;3491:7;3533:6;3518;3527:2;3518:11;:21;;3510:52;;;;;-1:-1:-1;;;3510:52:54;;;;;;;;;;;;-1:-1:-1;;;3510:52:54;;;;;;;;;;;;;;;3597:6;3606:2;3597:11;3580:6;:13;:28;;3572:62;;;;;-1:-1:-1;;;3572:62:54;;;;;;;;;;;;-1:-1:-1;;;3572:62:54;;;;;;;;;;;;;;;-1:-1:-1;3722:30:54;3738:4;3722:30;3716:37;-1:-1:-1;;;3712:71:54;;;3412:416::o;3834:365::-;3912:6;3952;3938;3947:1;3938:10;:20;;3930:50;;;;;-1:-1:-1;;;3930:50:54;;;;;;;;;;;;-1:-1:-1;;;3930:50:54;;;;;;;;;;;;;;;4015:6;4024:1;4015:10;3998:6;:13;:27;;3990:60;;;;;-1:-1:-1;;;3990:60:54;;;;;;;;;;;;-1:-1:-1;;;3990:60:54;;;;;;;;;;;;;;;-1:-1:-1;4127:29:54;4143:3;4127:29;4121:36;;3834:365::o;784:274:57:-;901:14;;:::i;:::-;940:6;-1:-1:-1;;;;;931:15:57;:6;-1:-1:-1;;;;;931:15:57;;927:56;;;968:6;;976;927:56;-1:-1:-1;1000:51:57;;;;;;;;-1:-1:-1;;;;;1000:51:57;;;;;;;;;;;;;;;;;;;;;;;784:274::o;1189:279:55:-;1313:19;1370:44;1397:7;1406;1370:26;:44::i;:::-;1348:67;-1:-1:-1;1433:10:55;-1:-1:-1;;;;;1433:27:55;;;1425:36;;;;;561:358:58;759:69;;;-1:-1:-1;;;;;759:69:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;759:69:58;-1:-1:-1;;;759:69:58;;;748:81;;;;701:12;;;;748:10;;;;759:69;748:81;;;759:69;748:81;;759:69;748:81;;;;;;;;;;-1:-1:-1;;748:81:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;-1:-1:-1;859:11:58;;:16;;:44;;;890:4;879:24;;;;;;;;;;;;;;;-1:-1:-1;879:24:58;859:44;839:73;;;;;-1:-1:-1;;;839:73:58;;;;;;;;;;;;-1:-1:-1;;;839:73:58;;;;;;;;;;;;;;1305:512:57;1389:12;1434:3;:10;;;-1:-1:-1;;;;;1421:23:57;:3;:10;;;-1:-1:-1;;;;;1421:23:57;;1413:32;;;;;;-1:-1:-1;1668:10:57;;1680;;;;;1692:7;;;;;1657:43;;-1:-1:-1;;;;;1657:43:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1647:54;;;;;;-1:-1:-1;;;;;;1539:229:57;;;;;;;-1:-1:-1;;1539:229:57;;;;;;;;;;;;241:66;1539:229;;;;;;;;;;;;;;;;;;;;;;;;;1508:278;;;;;;1305:512::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:138:114:-;84:20;;113:33;84:20;113:33;:::i;157:485::-;;254:3;247:4;239:6;235:17;231:27;221:2;;276:5;269;262:20;221:2;316:6;303:20;347:49;362:33;392:2;362:33;:::i;:::-;347:49;:::i;:::-;421:2;412:7;405:19;467:3;460:4;455:2;447:6;443:15;439:26;436:35;433:2;;;488:5;481;474:20;433:2;557;550:4;542:6;538:17;531:4;522:7;518:18;505:55;580:16;;;598:4;576:27;569:42;;;;584:7;211:431;-1:-1:-1;;211:431:114:o;647:182::-;;770:3;761:6;756:3;752:16;748:26;745:2;;;791:5;784;777:20;834:259;;946:2;934:9;925:7;921:23;917:32;914:2;;;967:6;959;952:22;914:2;1011:9;998:23;1030:33;1057:5;1030:33;:::i;:::-;1082:5;904:189;-1:-1:-1;;;904:189:114:o;1098:470::-;;;;1244:2;1232:9;1223:7;1219:23;1215:32;1212:2;;;1265:6;1257;1250:22;1212:2;1309:9;1296:23;1328:33;1355:5;1328:33;:::i;:::-;1380:5;-1:-1:-1;1432:2:114;1417:18;;1404:32;;-1:-1:-1;1488:2:114;1473:18;;1460:32;1501:35;1460:32;1501:35;:::i;:::-;1555:7;1545:17;;;1202:366;;;;;:::o;1573:683::-;;;;;;1753:3;1741:9;1732:7;1728:23;1724:33;1721:2;;;1775:6;1767;1760:22;1721:2;1819:9;1806:23;1838:33;1865:5;1838:33;:::i;:::-;1890:5;-1:-1:-1;1942:2:114;1927:18;;1914:32;;-1:-1:-1;1998:2:114;1983:18;;1970:32;2011:35;1970:32;2011:35;:::i;:::-;2065:7;-1:-1:-1;2119:2:114;2104:18;;2091:32;;-1:-1:-1;2175:3:114;2160:19;;2147:33;2189:35;2147:33;2189:35;:::i;:::-;2243:7;2233:17;;;1711:545;;;;;;;;:::o;2261:709::-;;;;;;;2456:3;2444:9;2435:7;2431:23;2427:33;2424:2;;;2478:6;2470;2463:22;2424:2;2522:9;2509:23;2541:33;2568:5;2541:33;:::i;:::-;2593:5;-1:-1:-1;2645:2:114;2630:18;;2617:32;;-1:-1:-1;2696:2:114;2681:18;;2668:32;;-1:-1:-1;2752:2:114;2737:18;;2724:32;2800:4;2787:18;;2775:31;;2765:2;;2825:6;2817;2810:22;2765:2;2414:556;;;;-1:-1:-1;2414:556:114;;2907:3;2892:19;;2879:33;;2959:3;2944:19;;;2931:33;;-1:-1:-1;2414:556:114;-1:-1:-1;;2414:556:114:o;2975:677::-;;;3133:2;3121:9;3112:7;3108:23;3104:32;3101:2;;;3154:6;3146;3139:22;3101:2;3199:9;3186:23;3228:18;3269:2;3261:6;3258:14;3255:2;;;3290:6;3282;3275:22;3255:2;3333:6;3322:9;3318:22;3308:32;;3378:7;3371:4;3367:2;3363:13;3359:27;3349:2;;3405:6;3397;3390:22;3349:2;3450;3437:16;3476:2;3468:6;3465:14;3462:2;;;3497:6;3489;3482:22;3462:2;3556:7;3551:2;3545;3537:6;3533:15;3529:2;3525:24;3521:33;3518:46;3515:2;;;3582:6;3574;3567:22;3515:2;3618;3610:11;;;;;3640:6;;-1:-1:-1;3091:561:114;;-1:-1:-1;;;;3091:561:114:o;3657:253::-;;;3795:2;3783:9;3774:7;3770:23;3766:32;3763:2;;;3816:6;3808;3801:22;3763:2;-1:-1:-1;;3844:16:114;;3900:2;3885:18;;;3879:25;3844:16;;3879:25;;-1:-1:-1;3753:157:114:o;3915:775::-;;;;;4078:2;4066:9;4057:7;4053:23;4049:32;4046:2;;;4099:6;4091;4084:22;4046:2;4140:9;4127:23;4117:33;;4197:2;4186:9;4182:18;4169:32;4159:42;;4252:2;4241:9;4237:18;4224:32;4275:18;4316:2;4308:6;4305:14;4302:2;;;4337:6;4329;4322:22;4302:2;4380:6;4369:9;4365:22;4355:32;;4425:7;4418:4;4414:2;4410:13;4406:27;4396:2;;4452:6;4444;4437:22;4396:2;4497;4484:16;4523:2;4515:6;4512:14;4509:2;;;4544:6;4536;4529:22;4509:2;4594:7;4589:2;4580:6;4576:2;4572:15;4568:24;4565:37;4562:2;;;4620:6;4612;4605:22;4562:2;4036:654;;;;-1:-1:-1;;4656:2:114;4648:11;;-1:-1:-1;;;4036:654:114:o;4695:676::-;;4828:2;4816:9;4807:7;4803:23;4799:32;4796:2;;;4849:6;4841;4834:22;4796:2;4887:9;4881:16;4920:18;4912:6;4909:30;4906:2;;;4957:6;4949;4942:22;4906:2;4985:22;;5038:4;5030:13;;5026:27;-1:-1:-1;5016:2:114;;5072:6;5064;5057:22;5016:2;5106;5100:9;5131:49;5146:33;5176:2;5146:33;:::i;5131:49::-;5203:2;5196:5;5189:17;5243:7;5238:2;5233;5229;5225:11;5221:20;5218:33;5215:2;;;5269:6;5261;5254:22;5215:2;5287:54;5338:2;5333;5326:5;5322:14;5317:2;5313;5309:11;5287:54;:::i;5376:1043::-;;5523:2;5511:9;5502:7;5498:23;5494:32;5491:2;;;5544:6;5536;5529:22;5491:2;5589:9;5576:23;5618:18;5659:2;5651:6;5648:14;5645:2;;;5680:6;5672;5665:22;5645:2;5708:22;;;;5764:4;5746:16;;;5742:27;5739:2;;;5787:6;5779;5772:22;5739:2;5825;5819:9;5867:4;5859:6;5855:17;5922:6;5910:10;5907:22;5902:2;5890:10;5887:18;5884:46;5881:2;;;5933:9;5881:2;5960;5953:22;6000:16;;6028;;;6025:2;;;6062:6;6054;6047:22;6025:2;6095:46;6133:7;6122:8;6118:2;6114:17;6095:46;:::i;:::-;6087:6;6080:62;;6175:33;6204:2;6200;6196:11;6175:33;:::i;:::-;6170:2;6162:6;6158:15;6151:58;6263:2;6259;6255:11;6242:25;6237:2;6229:6;6225:15;6218:50;6322:2;6318;6314:11;6301:25;6296:2;6288:6;6284:15;6277:50;6382:3;6378:2;6374:12;6361:26;6355:3;6347:6;6343:16;6336:52;6407:6;6397:16;;;;;5481:938;;;;:::o;6424:283::-;;6579:3;6567:9;6558:7;6554:23;6550:33;6547:2;;;6601:6;6593;6586:22;6547:2;6629:72;6693:7;6682:9;6629:72;:::i;6712:428::-;;6862:2;6850:9;6841:7;6837:23;6833:32;6830:2;;;6883:6;6875;6868:22;6830:2;6928:9;6915:23;6961:18;6953:6;6950:30;6947:2;;;6998:6;6990;6983:22;6947:2;7026:22;;7082:3;7064:16;;;7060:26;7057:2;;;7104:6;7096;7089:22;7434:929;;7581:2;7569:9;7560:7;7556:23;7552:32;7549:2;;;7602:6;7594;7587:22;7549:2;7647:9;7634:23;7676:18;7717:2;7709:6;7706:14;7703:2;;;7738:6;7730;7723:22;7703:2;7766:22;;;;7822:4;7804:16;;;7800:27;7797:2;;;7845:6;7837;7830:22;7797:2;7883:4;7877:11;7927:4;7919:6;7915:17;7982:6;7970:10;7967:22;7962:2;7950:10;7947:18;7944:46;7941:2;;;7993:9;7941:2;8020:4;8013:24;8062:16;;8090;;;8087:2;;;8124:6;8116;8109:22;8087:2;8157:46;8195:7;8184:8;8180:2;8176:17;8157:46;:::i;:::-;8149:6;8142:62;;8247:2;8243;8239:11;8226:25;8213:38;;8260:33;8287:5;8260:33;:::i;:::-;8321:2;8309:15;;8302:30;;;;-1:-1:-1;8313:6:114;7539:824;-1:-1:-1;;;7539:824:114:o;8632:294::-;;8743:2;8731:9;8722:7;8718:23;8714:32;8711:2;;;8764:6;8756;8749:22;8711:2;8808:9;8795:23;8858:8;8851:5;8847:20;8840:5;8837:31;8827:2;;8887:6;8879;8872:22;8931:190;;9043:2;9031:9;9022:7;9018:23;9014:32;9011:2;;;9064:6;9056;9049:22;9011:2;-1:-1:-1;9092:23:114;;9001:120;-1:-1:-1;9001:120:114:o;9126:327::-;;;9255:2;9243:9;9234:7;9230:23;9226:32;9223:2;;;9276:6;9268;9261:22;9223:2;9317:9;9304:23;9294:33;;9377:2;9366:9;9362:18;9349:32;9390:33;9417:5;9390:33;:::i;:::-;9442:5;9432:15;;;9213:240;;;;;:::o;9458:539::-;;;;;9621:3;9609:9;9600:7;9596:23;9592:33;9589:2;;;9643:6;9635;9628:22;9589:2;9684:9;9671:23;9661:33;;9744:2;9733:9;9729:18;9716:32;9757:33;9784:5;9757:33;:::i;:::-;9809:5;-1:-1:-1;9861:2:114;9846:18;;9833:32;;-1:-1:-1;9917:2:114;9902:18;;9889:32;9930:35;9889:32;9930:35;:::i;:::-;9579:418;;;;-1:-1:-1;9579:418:114;;-1:-1:-1;;9579:418:114:o;10002:259::-;;10083:5;10077:12;10110:6;10105:3;10098:19;10126:63;10182:6;10175:4;10170:3;10166:14;10159:4;10152:5;10148:16;10126:63;:::i;:::-;10243:2;10222:15;-1:-1:-1;;10218:29:114;10209:39;;;;10250:4;10205:50;;10053:208;-1:-1:-1;;10053:208:114:o;10266:431::-;10519:2;10515:15;;;-1:-1:-1;;10511:24:114;;;10499:37;;10592:3;10570:16;;;;-1:-1:-1;;;;;;10566:41:114;10561:2;10552:12;;10545:63;10642:15;;10638:24;10633:2;10624:12;;10617:46;10688:2;10679:12;;10439:258::o;10702:273::-;;10885:6;10877;10872:3;10859:33;10911:16;;10936:15;;;10911:16;10849:126;-1:-1:-1;10849:126:114:o;10980:203::-;-1:-1:-1;;;;;11144:32:114;;;;11126:51;;11114:2;11099:18;;11081:102::o;11188:570::-;-1:-1:-1;;;;;11477:15:114;;;11459:34;;11536:14;;11529:22;11524:2;11509:18;;11502:50;11583:2;11568:18;;11561:34;;;11631:15;;11626:2;11611:18;;11604:43;11439:3;11678;11663:19;;11656:32;;;11188:570;;11705:47;;11732:19;;11724:6;11705:47;:::i;:::-;11697:55;11411:347;-1:-1:-1;;;;;;;11411:347:114:o;11763:806::-;;11952:2;11992;11981:9;11977:18;12022:2;12011:9;12004:21;12045:6;12080;12074:13;12111:6;12103;12096:22;12149:2;12138:9;12134:18;12127:25;;12212:2;12206;12198:6;12194:15;12183:9;12179:31;12175:40;12161:54;;12250:2;12242:6;12238:15;12271:4;12284:256;12298:6;12295:1;12292:13;12284:256;;;12391:2;12387:7;12375:9;12367:6;12363:22;12359:36;12354:3;12347:49;12419:41;12453:6;12444;12438:13;12419:41;:::i;:::-;12409:51;-1:-1:-1;12518:12:114;;;;12483:15;;;;12320:1;12313:9;12284:256;;;-1:-1:-1;12557:6:114;;11932:637;-1:-1:-1;;;;;;;11932:637:114:o;12574:221::-;;12723:2;12712:9;12705:21;12743:46;12785:2;12774:9;12770:18;12762:6;12743:46;:::i;12800:342::-;13002:2;12984:21;;;13041:2;13021:18;;;13014:30;-1:-1:-1;;;13075:2:114;13060:18;;13053:48;13133:2;13118:18;;12974:168::o;13147:343::-;13349:2;13331:21;;;13388:2;13368:18;;;13361:30;-1:-1:-1;;;13422:2:114;13407:18;;13400:49;13481:2;13466:18;;13321:169::o;13495:476::-;;13694:2;13683:9;13676:21;13732:6;13726:13;13775:4;13770:2;13759:9;13755:18;13748:32;13803:52;13851:2;13840:9;13836:18;13822:12;13803:52;:::i;:::-;13915:2;13903:15;;;;13897:22;-1:-1:-1;;;;;13893:48:114;13886:4;13871:20;;;;13864:78;;;;-1:-1:-1;13789:66:114;;13666:305;-1:-1:-1;13666:305:114:o;13976:177::-;14122:25;;;14110:2;14095:18;;14077:76::o;14158:533::-;;;14301:11;14288:25;14395:2;14391:7;14380:8;14364:14;14360:29;14356:43;14336:18;14332:68;14322:2;;14417:4;14411;14404:18;14322:2;14447:33;;14499:20;;;-1:-1:-1;14542:18:114;14531:30;;14528:2;;;14577:4;14571;14564:18;14528:2;14613:4;14601:17;;-1:-1:-1;14644:14:114;14640:27;;;14630:38;;14627:2;;;14681:1;14678;14671:12;14627:2;14252:439;;;;;:::o;14696:242::-;14766:2;14760:9;14796:17;;;14843:18;14828:34;;14864:22;;;14825:62;14822:2;;;14890:9;14822:2;14917;14910:22;14740:198;;-1:-1:-1;14740:198:114:o;14943:181::-;;15026:18;15018:6;15015:30;15012:2;;;15048:9;15012:2;-1:-1:-1;15107:2:114;15084:17;-1:-1:-1;;15080:31:114;15113:4;15076:42;;15002:122::o;15129:258::-;15201:1;15211:113;15225:6;15222:1;15219:13;15211:113;;;15301:11;;;15295:18;15282:11;;;15275:39;15247:2;15240:10;15211:113;;;15342:6;15339:1;15336:13;15333:2;;;-1:-1:-1;;15377:1:114;15359:16;;15352:27;15182:205::o;15392:133::-;-1:-1:-1;;;;;15469:31:114;;15459:42;;15449:2;;15515:1;15512;15505:12;15449:2;15439:86;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "11187": [
        {
          "start": 3027,
          "length": 32
        },
        {
          "start": 4302,
          "length": 32
        },
        {
          "start": 6376,
          "length": 32
        }
      ],
      "11191": [
        {
          "start": 285,
          "length": 32
        },
        {
          "start": 1271,
          "length": 32
        },
        {
          "start": 1506,
          "length": 32
        },
        {
          "start": 1647,
          "length": 32
        },
        {
          "start": 1711,
          "length": 32
        },
        {
          "start": 1946,
          "length": 32
        },
        {
          "start": 5971,
          "length": 32
        },
        {
          "start": 6041,
          "length": 32
        },
        {
          "start": 6157,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "WETH9()": "4aa4a4fc",
    "exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
    "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
    "exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
    "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
    "factory()": "c45a0155",
    "multicall(bytes[])": "ac9650d8",
    "refundETH()": "12210e8a",
    "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
    "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "4659a494",
    "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "a4a78f0c",
    "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a",
    "setTime(uint256)": "3beb26c4",
    "sweepToken(address,uint256,address)": "df2ab5bb",
    "sweepTokenWithFee(address,uint256,address,uint256,address)": "e0e189a0",
    "uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33",
    "unwrapWETH9(uint256,address)": "49404b7c",
    "unwrapWETH9WithFee(uint256,address,uint256,address)": "9b2c0a37"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"setTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"sweepTokenWithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9WithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this).\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this)\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"sweepTokenWithFee(address,uint256,address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}},\"unwrapWETH9WithFee(uint256,address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"sweepTokenWithFee(address,uint256,address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1 (inclusive) going to feeRecipient\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"},\"unwrapWETH9WithFee(uint256,address,uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1 (inclusive) going to feeRecipient\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/periphery/contracts/test/MockTimeSwapRouter.sol\":\"MockTimeSwapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@cryptoalgebra/=node_modules/@cryptoalgebra/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/dependencies/periphery/contracts/SwapRouter.sol\":{\"keccak256\":\"0x1c685179ed93aed7c61628de3d4e5447995fc50c7010eab13211247ce86d2bf5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://313bb2a53fceb7b7d302aead5cff6d87a6967ec340fee1c553ffcf7f14f754a8\",\"dweb:/ipfs/QmbSL17RcEa81EDY9GEfV1bQc7vcjUV8nDMNs7xYfs1ZJc\"]},\"contracts/dependencies/periphery/contracts/base/BlockTimestamp.sol\":{\"keccak256\":\"0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93\",\"dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b\"]},\"contracts/dependencies/periphery/contracts/base/Multicall.sol\":{\"keccak256\":\"0xfcfd78c62d2145634a791d5680a1af7055fbd301c415d29c09333c99c37d9037\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d1c8f4a18cec8ad49e5269c5b07c7f6fd497dfc1b7b777f8ddcfb8055efd803\",\"dweb:/ipfs/QmdeCTnfHM3RGtQuo3DMX9m7gPspGGwQp7ho6m9cJjjnER\"]},\"contracts/dependencies/periphery/contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0xd43c2355a7d5659b1fa1fb322647f760722d73a6a5e62ede53d426f3b406b795\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://657920576878ca936157383782a97b74166c303a3932c0d72eac3a2d057c3a96\",\"dweb:/ipfs/Qma71Ska1ZbPBnYpeE5S2EAeEtwGfHEMHo3SnDwY1fVmm5\"]},\"contracts/dependencies/periphery/contracts/base/PeripheryPayments.sol\":{\"keccak256\":\"0xd6129c6c9605d84b2a205eaec18a25090c4002be7c54da3cee61b84a882b820b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://db1a47eaa47416ee2d1f4b9a988e02687579ac2280bd1ce28a52758e7eaabc44\",\"dweb:/ipfs/QmcWrSBBRCay6SqWTt1kh4gfDFn2jQBtNZGQ6zk7vfZdNy\"]},\"contracts/dependencies/periphery/contracts/base/PeripheryPaymentsWithFee.sol\":{\"keccak256\":\"0x741fce65e52728144c6ebee5380418b9e70a59e04725f2dd7e922a82fd794651\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6ed09cd710995191d01a51af53b9cb557337f623f061663a6d6d2ead74f18fc2\",\"dweb:/ipfs/QmQDFQshWiHJZAKWKGAzo8vpjfRgmq9uoMp7NHnJdsAZEu\"]},\"contracts/dependencies/periphery/contracts/base/PeripheryValidation.sol\":{\"keccak256\":\"0xc736bab599912d6212e8414ee4ba7af0c1e08ff6aa11caa85f5f6e07f7d421c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://06f6c13a86900c71fa486fc029a59d1b7eb96162bb42885b5f845d995294893e\",\"dweb:/ipfs/QmUcBxMsmncw9n6eXhzzwSasGBvBGKH5FT8HSrAxrsXV4A\"]},\"contracts/dependencies/periphery/contracts/base/SelfPermit.sol\":{\"keccak256\":\"0xe75aedfc1eff6c84adac82b2bc41d197127a74530f0c344a7a122a6c8ec186be\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://05150ae691e10f2c9c82ad46de86c8b6683d8eba995e6f9ff82eaefc064902e9\",\"dweb:/ipfs/QmdKxxmxCPxV7qe11MbRhpaQXDAnnKWH1BoTMmEXYPAA7g\"]},\"contracts/dependencies/periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]},\"contracts/dependencies/periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"contracts/dependencies/periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"contracts/dependencies/periphery/contracts/interfaces/IPeripheryPaymentsWithFee.sol\":{\"keccak256\":\"0x23ebe0ced112c7ca3869868874b691fcbb50f90c482580dc9ebe718bda34edfc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://689ebfcb90a26bf31af6e35456e41940c23d145cfc59d1ae5f6fa060945dd768\",\"dweb:/ipfs/QmZxVsaUWqnEEsRcphuWBvuEExQxznztSmFUkMa5ks8AHY\"]},\"contracts/dependencies/periphery/contracts/interfaces/ISelfPermit.sol\":{\"keccak256\":\"0xe1a1c072855e687c90317c15b9b6ce81cc683723f73d70e47b40f2f9bad0c2be\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://53b0881a1c55254d157054bd3d1c86982c0f5429bd2a9986c15479f6b71ef678\",\"dweb:/ipfs/Qmc9WZqXzQmqsA3xYxojbx9nXcG3FGuwAjM3opEmRGSnBb\"]},\"contracts/dependencies/periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/dependencies/periphery/contracts/interfaces/external/IERC20PermitAllowed.sol\":{\"keccak256\":\"0x8c4c1b8e724e0a78cb691d703dd37cd91b8bd6600537fb227807a194025a792d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://783be851155842a02cdb0483c3a69ecc0e7ae8545f65cec1d4aeb355b2026a7d\",\"dweb:/ipfs/QmZNBQosTjpGNKB3Eo2K6Zzye7FYiLVoEki5iPB2Y69jz2\"]},\"contracts/dependencies/periphery/contracts/interfaces/external/IWETH9.sol\":{\"keccak256\":\"0x6d7a8eb484e84bceb1d84c7be431c5b8120d519b0c2a7b4c7064c814635dea4c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8c3c81eb23b88076475e8ddd4edccb007358fa64911fc7e671a00adaf2006e75\",\"dweb:/ipfs/QmPbrPJ4w3UDPioJCvgtxMRaWNRa7tKHqDLtU17DTZPHBB\"]},\"contracts/dependencies/periphery/contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0x68629e5b1a30b6490c6ae721c28117f6f963745462b007da0769758eb67f10d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://370e31ceab1a7504f98dec122f65d9b8c6fc6420fd8cdd171b3dd57c4d5d21fc\",\"dweb:/ipfs/QmcquKATbnopgs92RdM5bKewt7GdCpgGhVY4hxmv1KjnnH\"]},\"contracts/dependencies/periphery/contracts/libraries/CallbackValidation.sol\":{\"keccak256\":\"0x490c80ca7f4a0ee0514041ddec0867e8a52b24febf1670991797af8fed9f3eec\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f775ba8ad52041a351fbd7000801266d5a10be2f1a53d13c6c9862b2baa935bd\",\"dweb:/ipfs/Qmcaxyr6VutZeaymeBNVcZrBVAHhyJ11sjhWpgj2GX6D5K\"]},\"contracts/dependencies/periphery/contracts/libraries/Path.sol\":{\"keccak256\":\"0xb22c562b5175d50dbcc2224325666090d985f052abdcfe275c8dfc884e34de61\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://27aeff27314476ab3c77313ae1f0c5b2442b86315f5ce741cb2150a87c3cbad3\",\"dweb:/ipfs/QmQNno2g1CJvjnH6ych4LuHr1UZDEZPACgYG4XvivxGrqV\"]},\"contracts/dependencies/periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]},\"contracts/dependencies/periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/dependencies/periphery/contracts/test/MockTimeSwapRouter.sol\":{\"keccak256\":\"0x34442bab1f261980e2fadbd5d39f6d2f3938b0c70e801c6406a963c8833c772c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://832488b6d2ebeeb3d39bf33902f75ee4b77869382c7db0bf1ccc5934a7efb54c\",\"dweb:/ipfs/QmfM7sXNQdjsvqTSauGanj9BzZdP6gKk3SvhBx95o2u9a1\"]},\"node_modules/@openzeppelin/contracts/drafts/IERC20Permit.sol\":{\"keccak256\":\"0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c14e8ff1b384bdb68f262669364b1e79fbbd82b85938b7ce788a1395c40c6a2\",\"dweb:/ipfs/QmUKLXfSeEuRUXkeWLBhjHTKeSFoNBCS1RaMXv1AmHXYzn\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"node_modules/@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"node_modules/@uniswap/v3-core/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869\",\"dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU\"]},\"node_modules/@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x1f864a2bf61ba05f3173eaf2e3f94c5e1da4bec0554757527b6d1ef1fe439e4e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5139b586df546a9d1c46804ca400b1cb9ce87236eaf212ebd64edee6747a172a\",\"dweb:/ipfs/QmVa2kcRw3VyuB6j1EVWXACKnkbQZgfXYXNi5voq3XkYG8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_WETH9",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactInputParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "path",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMinimum",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactInput",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactInputSingleParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactInputSingle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactOutputParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "path",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMaximum",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactOutput",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactOutputSingleParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMaximum",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactOutputSingle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitAllowedIfNecessary"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitIfNecessary"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTime"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "feeBips",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepTokenWithFee"
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "amount0Delta",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "amount1Delta",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "uniswapV3SwapCallback"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWETH9"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "feeBips",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWETH9WithFee"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "exactInput((bytes,address,uint256,uint256,uint256))": {
            "params": {
              "params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
            },
            "returns": {
              "amountOut": "The amount of the received token"
            }
          },
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "params": {
              "params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
            },
            "returns": {
              "amountOut": "The amount of the received token"
            }
          },
          "exactOutput((bytes,address,uint256,uint256,uint256))": {
            "params": {
              "params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
            },
            "returns": {
              "amountIn": "The amount of the input token"
            }
          },
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "params": {
              "params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
            },
            "returns": {
              "amountIn": "The amount of the input token"
            }
          },
          "multicall(bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract"
            },
            "returns": {
              "results": "The results from each of the calls passed in via data"
            }
          },
          "refundETH()": {
            "details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
          },
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this).",
            "params": {
              "deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
              "value": "The amount that can be spent of token"
            }
          },
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this)",
            "params": {
              "expiry": "The timestamp at which the permit is no longer valid",
              "nonce": "The current nonce of the owner",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
            }
          },
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.",
            "params": {
              "expiry": "The timestamp at which the permit is no longer valid",
              "nonce": "The current nonce of the owner",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
            }
          },
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit",
            "params": {
              "deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
              "value": "The amount that can be spent of token"
            }
          },
          "sweepToken(address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
            "params": {
              "amountMinimum": "The minimum amount of token required for a transfer",
              "recipient": "The destination address of the token",
              "token": "The contract address of the token which will be transferred to `recipient`"
            }
          },
          "sweepTokenWithFee(address,uint256,address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users"
          },
          "uniswapV3SwapCallback(int256,int256,bytes)": {
            "details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
            "params": {
              "amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
              "amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
              "data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
            }
          },
          "unwrapWETH9(uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
            "params": {
              "amountMinimum": "The minimum amount of WETH9 to unwrap",
              "recipient": "The address receiving ETH"
            }
          },
          "unwrapWETH9WithFee(uint256,address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "exactInput((bytes,address,uint256,uint256,uint256))": {
            "notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
          },
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "notice": "Swaps `amountIn` of one token for as much as possible of another token"
          },
          "exactOutput((bytes,address,uint256,uint256,uint256))": {
            "notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
          },
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "notice": "Swaps as little as possible of one token for `amountOut` of another token"
          },
          "multicall(bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          },
          "refundETH()": {
            "notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
          },
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend a given token from `msg.sender`"
          },
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
          },
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
          },
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend a given token from `msg.sender`"
          },
          "sweepToken(address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient"
          },
          "sweepTokenWithFee(address,uint256,address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1 (inclusive) going to feeRecipient"
          },
          "uniswapV3SwapCallback(int256,int256,bytes)": {
            "notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
          },
          "unwrapWETH9(uint256,address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
          },
          "unwrapWETH9WithFee(uint256,address,uint256,address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1 (inclusive) going to feeRecipient"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@cryptoalgebra/=node_modules/@cryptoalgebra/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/dependencies/periphery/contracts/test/MockTimeSwapRouter.sol": "MockTimeSwapRouter"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/dependencies/periphery/contracts/SwapRouter.sol": {
        "keccak256": "0x1c685179ed93aed7c61628de3d4e5447995fc50c7010eab13211247ce86d2bf5",
        "urls": [
          "bzz-raw://313bb2a53fceb7b7d302aead5cff6d87a6967ec340fee1c553ffcf7f14f754a8",
          "dweb:/ipfs/QmbSL17RcEa81EDY9GEfV1bQc7vcjUV8nDMNs7xYfs1ZJc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/base/BlockTimestamp.sol": {
        "keccak256": "0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6",
        "urls": [
          "bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93",
          "dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/base/Multicall.sol": {
        "keccak256": "0xfcfd78c62d2145634a791d5680a1af7055fbd301c415d29c09333c99c37d9037",
        "urls": [
          "bzz-raw://0d1c8f4a18cec8ad49e5269c5b07c7f6fd497dfc1b7b777f8ddcfb8055efd803",
          "dweb:/ipfs/QmdeCTnfHM3RGtQuo3DMX9m7gPspGGwQp7ho6m9cJjjnER"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/base/PeripheryImmutableState.sol": {
        "keccak256": "0xd43c2355a7d5659b1fa1fb322647f760722d73a6a5e62ede53d426f3b406b795",
        "urls": [
          "bzz-raw://657920576878ca936157383782a97b74166c303a3932c0d72eac3a2d057c3a96",
          "dweb:/ipfs/Qma71Ska1ZbPBnYpeE5S2EAeEtwGfHEMHo3SnDwY1fVmm5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/base/PeripheryPayments.sol": {
        "keccak256": "0xd6129c6c9605d84b2a205eaec18a25090c4002be7c54da3cee61b84a882b820b",
        "urls": [
          "bzz-raw://db1a47eaa47416ee2d1f4b9a988e02687579ac2280bd1ce28a52758e7eaabc44",
          "dweb:/ipfs/QmcWrSBBRCay6SqWTt1kh4gfDFn2jQBtNZGQ6zk7vfZdNy"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/base/PeripheryPaymentsWithFee.sol": {
        "keccak256": "0x741fce65e52728144c6ebee5380418b9e70a59e04725f2dd7e922a82fd794651",
        "urls": [
          "bzz-raw://6ed09cd710995191d01a51af53b9cb557337f623f061663a6d6d2ead74f18fc2",
          "dweb:/ipfs/QmQDFQshWiHJZAKWKGAzo8vpjfRgmq9uoMp7NHnJdsAZEu"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/base/PeripheryValidation.sol": {
        "keccak256": "0xc736bab599912d6212e8414ee4ba7af0c1e08ff6aa11caa85f5f6e07f7d421c3",
        "urls": [
          "bzz-raw://06f6c13a86900c71fa486fc029a59d1b7eb96162bb42885b5f845d995294893e",
          "dweb:/ipfs/QmUcBxMsmncw9n6eXhzzwSasGBvBGKH5FT8HSrAxrsXV4A"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/base/SelfPermit.sol": {
        "keccak256": "0xe75aedfc1eff6c84adac82b2bc41d197127a74530f0c344a7a122a6c8ec186be",
        "urls": [
          "bzz-raw://05150ae691e10f2c9c82ad46de86c8b6683d8eba995e6f9ff82eaefc064902e9",
          "dweb:/ipfs/QmdKxxmxCPxV7qe11MbRhpaQXDAnnKWH1BoTMmEXYPAA7g"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/interfaces/IMulticall.sol": {
        "keccak256": "0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b",
        "urls": [
          "bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016",
          "dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
        "keccak256": "0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d",
        "urls": [
          "bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f",
          "dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/interfaces/IPeripheryPayments.sol": {
        "keccak256": "0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274",
        "urls": [
          "bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407",
          "dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/interfaces/IPeripheryPaymentsWithFee.sol": {
        "keccak256": "0x23ebe0ced112c7ca3869868874b691fcbb50f90c482580dc9ebe718bda34edfc",
        "urls": [
          "bzz-raw://689ebfcb90a26bf31af6e35456e41940c23d145cfc59d1ae5f6fa060945dd768",
          "dweb:/ipfs/QmZxVsaUWqnEEsRcphuWBvuEExQxznztSmFUkMa5ks8AHY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/interfaces/ISelfPermit.sol": {
        "keccak256": "0xe1a1c072855e687c90317c15b9b6ce81cc683723f73d70e47b40f2f9bad0c2be",
        "urls": [
          "bzz-raw://53b0881a1c55254d157054bd3d1c86982c0f5429bd2a9986c15479f6b71ef678",
          "dweb:/ipfs/Qmc9WZqXzQmqsA3xYxojbx9nXcG3FGuwAjM3opEmRGSnBb"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/interfaces/external/IERC20PermitAllowed.sol": {
        "keccak256": "0x8c4c1b8e724e0a78cb691d703dd37cd91b8bd6600537fb227807a194025a792d",
        "urls": [
          "bzz-raw://783be851155842a02cdb0483c3a69ecc0e7ae8545f65cec1d4aeb355b2026a7d",
          "dweb:/ipfs/QmZNBQosTjpGNKB3Eo2K6Zzye7FYiLVoEki5iPB2Y69jz2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/interfaces/external/IWETH9.sol": {
        "keccak256": "0x6d7a8eb484e84bceb1d84c7be431c5b8120d519b0c2a7b4c7064c814635dea4c",
        "urls": [
          "bzz-raw://8c3c81eb23b88076475e8ddd4edccb007358fa64911fc7e671a00adaf2006e75",
          "dweb:/ipfs/QmPbrPJ4w3UDPioJCvgtxMRaWNRa7tKHqDLtU17DTZPHBB"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/libraries/BytesLib.sol": {
        "keccak256": "0x68629e5b1a30b6490c6ae721c28117f6f963745462b007da0769758eb67f10d4",
        "urls": [
          "bzz-raw://370e31ceab1a7504f98dec122f65d9b8c6fc6420fd8cdd171b3dd57c4d5d21fc",
          "dweb:/ipfs/QmcquKATbnopgs92RdM5bKewt7GdCpgGhVY4hxmv1KjnnH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/libraries/CallbackValidation.sol": {
        "keccak256": "0x490c80ca7f4a0ee0514041ddec0867e8a52b24febf1670991797af8fed9f3eec",
        "urls": [
          "bzz-raw://f775ba8ad52041a351fbd7000801266d5a10be2f1a53d13c6c9862b2baa935bd",
          "dweb:/ipfs/Qmcaxyr6VutZeaymeBNVcZrBVAHhyJ11sjhWpgj2GX6D5K"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/libraries/Path.sol": {
        "keccak256": "0xb22c562b5175d50dbcc2224325666090d985f052abdcfe275c8dfc884e34de61",
        "urls": [
          "bzz-raw://27aeff27314476ab3c77313ae1f0c5b2442b86315f5ce741cb2150a87c3cbad3",
          "dweb:/ipfs/QmQNno2g1CJvjnH6ych4LuHr1UZDEZPACgYG4XvivxGrqV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/libraries/PoolAddress.sol": {
        "keccak256": "0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2",
        "urls": [
          "bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840",
          "dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/test/MockTimeSwapRouter.sol": {
        "keccak256": "0x34442bab1f261980e2fadbd5d39f6d2f3938b0c70e801c6406a963c8833c772c",
        "urls": [
          "bzz-raw://832488b6d2ebeeb3d39bf33902f75ee4b77869382c7db0bf1ccc5934a7efb54c",
          "dweb:/ipfs/QmfM7sXNQdjsvqTSauGanj9BzZdP6gKk3SvhBx95o2u9a1"
        ],
        "license": "UNLICENSED"
      },
      "node_modules/@openzeppelin/contracts/drafts/IERC20Permit.sol": {
        "keccak256": "0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f",
        "urls": [
          "bzz-raw://8c14e8ff1b384bdb68f262669364b1e79fbbd82b85938b7ce788a1395c40c6a2",
          "dweb:/ipfs/QmUKLXfSeEuRUXkeWLBhjHTKeSFoNBCS1RaMXv1AmHXYzn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76",
        "urls": [
          "bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b",
          "dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol": {
        "keccak256": "0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d",
        "urls": [
          "bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37",
          "dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/libraries/SafeCast.sol": {
        "keccak256": "0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8",
        "urls": [
          "bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869",
          "dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x1f864a2bf61ba05f3173eaf2e3f94c5e1da4bec0554757527b6d1ef1fe439e4e",
        "urls": [
          "bzz-raw://5139b586df546a9d1c46804ca400b1cb9ce87236eaf212ebd64edee6747a172a",
          "dweb:/ipfs/QmVa2kcRw3VyuB6j1EVWXACKnkbQZgfXYXNi5voq3XkYG8"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/dependencies/periphery/contracts/test/MockTimeSwapRouter.sol",
    "id": 12699,
    "exportedSymbols": {
      "BlockTimestamp": [
        11092
      ],
      "BytesLib": [
        12200
      ],
      "CallbackValidation": [
        12262
      ],
      "IERC20": [
        41556
      ],
      "IERC20Permit": [
        40577
      ],
      "IERC20PermitAllowed": [
        12064
      ],
      "IMulticall": [
        11801
      ],
      "IPeripheryImmutableState": [
        11817
      ],
      "IPeripheryPayments": [
        11843
      ],
      "IPeripheryPaymentsWithFee": [
        11876
      ],
      "ISelfPermit": [
        11944
      ],
      "ISwapRouter": [
        12040
      ],
      "IUniswapV3Pool": [
        41734
      ],
      "IUniswapV3PoolActions": [
        41844
      ],
      "IUniswapV3PoolDerivedState": [
        41875
      ],
      "IUniswapV3PoolEvents": [
        41994
      ],
      "IUniswapV3PoolImmutables": [
        42034
      ],
      "IUniswapV3PoolOwnerActions": [
        42060
      ],
      "IUniswapV3PoolState": [
        42168
      ],
      "IUniswapV3SwapCallback": [
        41748
      ],
      "IWETH9": [
        12081
      ],
      "LowGasSafeMath": [
        42481
      ],
      "MockTimeSwapRouter": [
        12698
      ],
      "Multicall": [
        11177
      ],
      "Path": [
        12395
      ],
      "PeripheryImmutableState": [
        11208
      ],
      "PeripheryPayments": [
        11418
      ],
      "PeripheryPaymentsWithFee": [
        11599
      ],
      "PeripheryValidation": [
        11619
      ],
      "PoolAddress": [
        12487
      ],
      "SafeCast": [
        42551
      ],
      "SelfPermit": [
        11786
      ],
      "SwapRouter": [
        11078
      ],
      "TickMath": [
        43602
      ],
      "TransferHelper": [
        12658
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:399:59",
    "nodes": [
      {
        "id": 12660,
        "nodeType": "PragmaDirective",
        "src": "39:23:59",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ]
      },
      {
        "id": 12661,
        "nodeType": "PragmaDirective",
        "src": "63:19:59",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 12662,
        "nodeType": "ImportDirective",
        "src": "84:27:59",
        "nodes": [],
        "absolutePath": "contracts/dependencies/periphery/contracts/SwapRouter.sol",
        "file": "../SwapRouter.sol",
        "scope": 12699,
        "sourceUnit": 11079,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12698,
        "nodeType": "ContractDefinition",
        "src": "113:324:59",
        "nodes": [
          {
            "id": 12666,
            "nodeType": "VariableDeclaration",
            "src": "161:12:59",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "time",
            "scope": 12698,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12665,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12678,
            "nodeType": "FunctionDefinition",
            "src": "180:77:59",
            "nodes": [],
            "body": {
              "id": 12677,
              "nodeType": "Block",
              "src": "255:2:59",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12673,
                    "name": "_factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12668,
                    "src": "237:8:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 12674,
                    "name": "_WETH9",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12670,
                    "src": "247:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12675,
                "modifierName": {
                  "id": 12672,
                  "name": "SwapRouter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11078,
                  "src": "226:10:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SwapRouter_$11078_$",
                    "typeString": "type(contract SwapRouter)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "226:28:59"
              }
            ],
            "name": "",
            "parameters": {
              "id": 12671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12668,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nodeType": "VariableDeclaration",
                  "scope": 12678,
                  "src": "192:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "192:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12670,
                  "mutability": "mutable",
                  "name": "_WETH9",
                  "nodeType": "VariableDeclaration",
                  "scope": 12678,
                  "src": "210:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "210:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "191:34:59"
            },
            "returnParameters": {
              "id": 12676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "255:0:59"
            },
            "scope": 12698,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12687,
            "nodeType": "FunctionDefinition",
            "src": "263:96:59",
            "nodes": [],
            "body": {
              "id": 12686,
              "nodeType": "Block",
              "src": "331:28:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12684,
                    "name": "time",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12666,
                    "src": "348:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12683,
                  "id": 12685,
                  "nodeType": "Return",
                  "src": "341:11:59"
                }
              ]
            },
            "baseFunctions": [
              11091
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_blockTimestamp",
            "overrides": {
              "id": 12680,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "304:8:59"
            },
            "parameters": {
              "id": 12679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "287:2:59"
            },
            "returnParameters": {
              "id": 12683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12682,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12687,
                  "src": "322:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "321:9:59"
            },
            "scope": 12698,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 12697,
            "nodeType": "FunctionDefinition",
            "src": "365:70:59",
            "nodes": [],
            "body": {
              "id": 12696,
              "nodeType": "Block",
              "src": "406:29:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12692,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12666,
                      "src": "416:4:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12693,
                      "name": "_time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12689,
                      "src": "423:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "416:12:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12695,
                  "nodeType": "ExpressionStatement",
                  "src": "416:12:59"
                }
              ]
            },
            "functionSelector": "3beb26c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTime",
            "parameters": {
              "id": 12690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12689,
                  "mutability": "mutable",
                  "name": "_time",
                  "nodeType": "VariableDeclaration",
                  "scope": 12697,
                  "src": "382:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "381:15:59"
            },
            "returnParameters": {
              "id": 12691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:0:59"
            },
            "scope": 12698,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12663,
              "name": "SwapRouter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11078,
              "src": "144:10:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SwapRouter_$11078",
                "typeString": "contract SwapRouter"
              }
            },
            "id": 12664,
            "nodeType": "InheritanceSpecifier",
            "src": "144:10:59"
          }
        ],
        "contractDependencies": [
          11078,
          11092,
          11177,
          11208,
          11418,
          11599,
          11619,
          11786,
          11801,
          11817,
          11843,
          11876,
          11944,
          12040,
          41748
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12698,
          11078,
          11786,
          11944,
          11177,
          11801,
          11599,
          11876,
          11418,
          11619,
          11208,
          11817,
          11843,
          11092,
          12040,
          41748
        ],
        "name": "MockTimeSwapRouter",
        "scope": 12699
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 59
}