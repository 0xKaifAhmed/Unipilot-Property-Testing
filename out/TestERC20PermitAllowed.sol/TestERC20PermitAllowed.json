{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToMint",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b50604051620015c4380380620015c4833981810160405260208110156200005d57600080fd5b5051604080518082018252600a808252690546573742045524332360b41b60208381018290528451808601865260018152603160f81b818301528551808701875293845283820192835285518087019096526004865263151154d560e21b9186019190915282518695859492939091620000da916003916200035a565b508051620000f09060049060208401906200035a565b50506005805460ff1916601217905550815160208084019190912082519183019190912060c082905260e08190527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620001496200017c565b60a0526200015981848462000180565b608052610100525062000174935033925084915050620001e4565b505062000406565b4690565b60008383836200018f6200017c565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b03168152602001955050505050506040516020818303038152906040528051906020012090509392505050565b6001600160a01b03821662000240576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200024e60008383620002f3565b6200026a81600254620002f860201b6200097f1790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200029d9183906200097f620002f8821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b60008282018381101562000353576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620003925760008555620003dd565b82601f10620003ad57805160ff1916838001178555620003dd565b82800160010185558215620003dd579182015b82811115620003dd578251825591602001919060010190620003c0565b50620003eb929150620003ef565b5090565b5b80821115620003eb5760008155600101620003f0565b60805160a05160c05160e0516101005161012051611174620004506000398061080c525080610d1f525080610d61525080610d40525080610cc6525080610cf652506111746000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d71461031c578063a9059cbb14610348578063d505accf14610374578063dd62ed3e146103c557610100565b806370a082311461026c5780637ecebe00146102925780638fcbaf0c146102b857806395d89b411461031457610100565b8063313ce567116100d3578063313ce567146102125780633644e5151461023057806339509351146102385780633eaaf86b1461026457610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d6103f3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561048a565b604080519115158252519081900360200190f35b6101ca6104a7565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b038135811691602081013590911690604001356104ad565b61021a610534565b6040805160ff9092168252519081900360200190f35b6101ca61053d565b6101ae6004803603604081101561024e57600080fd5b506001600160a01b03813516906020013561054c565b6101ca61059a565b6101ca6004803603602081101561028257600080fd5b50356001600160a01b03166105a0565b6101ca600480360360208110156102a857600080fd5b50356001600160a01b03166105bb565b61031260048036036101008110156102cf57600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e001356105e2565b005b61010d6106c0565b6101ae6004803603604081101561033257600080fd5b506001600160a01b038135169060200135610721565b6101ae6004803603604081101561035e57600080fd5b506001600160a01b038135169060200135610789565b610312600480360360e081101561038a57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561079d565b6101ca600480360360408110156103db57600080fd5b506001600160a01b0381358116916020013516610954565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561047f5780601f106104545761010080835404028352916020019161047f565b820191906000526020600020905b81548152906001019060200180831161046257829003601f168201915b505050505090505b90565b600061049e6104976109e0565b84846109e4565b50600192915050565b60025490565b60006104ba848484610ad0565b61052a846104c66109e0565b610525856040518060600160405280602881526020016110a9602891396001600160a01b038a166000908152600160205260408120906105046109e0565b6001600160a01b031681526020810191909152604001600020549190610c2b565b6109e4565b5060019392505050565b60055460ff1690565b6000610547610cc2565b905090565b600061049e6105596109e0565b84610525856001600061056a6109e0565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061097f565b60025481565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b03811660009081526006602052604081206105dc90610d8c565b92915050565b85306001600160a01b0316637ecebe008a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561063057600080fd5b505afa158015610644573d6000803e3d6000fd5b505050506040513d602081101561065a57600080fd5b5051146106985760405162461bcd60e51b815260040180806020018281038252602b815260200180610ff2602b913960400191505060405180910390fd5b6106b68888866106a95760006106ad565b6000195b8887878761079d565b5050505050505050565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561047f5780601f106104545761010080835404028352916020019161047f565b600061049e61072e6109e0565b846105258560405180606001604052806025815260200161111a60259139600160006107586109e0565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610c2b565b600061049e6107966109e0565b8484610ad0565b834211156107f2576040805162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015290519081900360640190fd5b6001600160a01b03871660009081526006602052604081207f00000000000000000000000000000000000000000000000000000000000000009089908990899061083b90610d8c565b8960405160200180878152602001866001600160a01b03168152602001856001600160a01b03168152602001848152602001838152602001828152602001965050505050505060405160208183030381529060405280519060200120905060006108a482610d90565b905060006108b482878787610ddc565b9050896001600160a01b0316816001600160a01b03161461091c576040805162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015290519081900360640190fd5b6001600160a01b038a16600090815260066020526040902061093d90610f5a565b6109488a8a8a6109e4565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000828201838110156109d9576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b038316610a295760405162461bcd60e51b81526004018080602001828103825260248152602001806110f66024913960400191505060405180910390fd5b6001600160a01b038216610a6e5760405162461bcd60e51b815260040180806020018281038252602281526020018061101d6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610b155760405162461bcd60e51b81526004018080602001828103825260258152602001806110d16025913960400191505060405180910390fd5b6001600160a01b038216610b5a5760405162461bcd60e51b8152600401808060200182810382526023815260200180610fcf6023913960400191505060405180910390fd5b610b65838383610f63565b610ba28160405180606001604052806026815260200161103f602691396001600160a01b0386166000908152602081905260409020549190610c2b565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610bd1908261097f565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610cba5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c7f578181015183820152602001610c67565b50505050905090810190601f168015610cac5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60007f0000000000000000000000000000000000000000000000000000000000000000610ced610f68565b1415610d1a57507f0000000000000000000000000000000000000000000000000000000000000000610487565b610d857f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610f6c565b9050610487565b5490565b6000610d9a610cc2565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610e3d5760405162461bcd60e51b81526004018080602001828103825260228152602001806110656022913960400191505060405180910390fd5b8360ff16601b1480610e5257508360ff16601c145b610e8d5760405162461bcd60e51b81526004018080602001828103825260228152602001806110876022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610ee9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f51576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b80546001019055565b505050565b4690565b6000838383610f79610f68565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b0316815260200195505050505050604051602081830303815290604052805190602001209050939250505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573735465737445524332305065726d6974416c6c6f7765643a3a7065726d69743a2077726f6e67206e6f6e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c756545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212205f405f09393788abecc1893615cbf66973313b6b5420197e941726a5c832016964736f6c63430007060033",
    "sourceMap": "231:537:119:-:0;;;1006:95:256;961:140;;303:60:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;303:60:119;1333:57:256;;;;;;;;;;;;-1:-1:-1;;;303:60:119;1333:57:256;;;;;;2324:542:255;;;;;;;;;;-1:-1:-1;;;2324:542:255;;;;1949:138:263;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1949:138:263;;;;;;;2016:13;;303:60:119;;1333:57:256;;2324:542:255;;1949:138:263;;2016:13;;:5;;:13;:::i;:::-;-1:-1:-1;2039:17:263;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2066:9:263;:14;;-1:-1:-1;;2066:14:263;2078:2;2066:14;;;-1:-1:-1;2410:22:255;;;;;;;;;;2466:25;;;;;;;;;2625;;;;2660:31;;;;2520:95;2720:13;:11;:13::i;:::-;2701:32;;2770:58;2792:8;2802:10;2814:13;2770:21;:58::i;:::-;2743:85;;2838:21;;-1:-1:-1;260:31:117::2;::::0;-1:-1:-1;266:10:117::2;::::0;-1:-1:-1;278:12:117;;-1:-1:-1;;260:5:117::2;:31::i;:::-;162:136:::0;303:60:119;231:537;;4382:320:255;4677:9;;4652:44::o;3241:327::-;3343:7;3420:8;3446:4;3468:7;3493:13;:11;:13::i;:::-;3532:4;3392:159;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3392:159:255;;;;;;;;;;;;;;;;;;;;;;;;3369:192;;;;;;3362:199;;3241:327;;;;;:::o;7816:370:263:-;-1:-1:-1;;;;;7899:21:263;;7891:65;;;;;-1:-1:-1;;;7891:65:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;7967:49;7996:1;8000:7;8009:6;7967:20;:49::i;:::-;8042:24;8059:6;8042:12;;:16;;;;;;:24;;;;:::i;:::-;8027:12;:39;-1:-1:-1;;;;;8097:18:263;;:9;:18;;;;;;;;;;;;:30;;8120:6;;8097:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8076:18:263;;:9;:18;;;;;;;;;;;:51;;;;8142:37;;;;;;;8076:18;;:9;;8142:37;;;;;;;;;;7816:370;;:::o;10685:92::-;;;;:::o;2682:175:260:-;2740:7;2771:5;;;2794:6;;;;2786:46;;;;;-1:-1:-1;;;2786:46:260;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:1;2682:175;-1:-1:-1;;;2682:175:260:o;231:537:119:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;231:537:119;;;-1:-1:-1;231:537:119;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d71461031c578063a9059cbb14610348578063d505accf14610374578063dd62ed3e146103c557610100565b806370a082311461026c5780637ecebe00146102925780638fcbaf0c146102b857806395d89b411461031457610100565b8063313ce567116100d3578063313ce567146102125780633644e5151461023057806339509351146102385780633eaaf86b1461026457610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d6103f3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561048a565b604080519115158252519081900360200190f35b6101ca6104a7565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b038135811691602081013590911690604001356104ad565b61021a610534565b6040805160ff9092168252519081900360200190f35b6101ca61053d565b6101ae6004803603604081101561024e57600080fd5b506001600160a01b03813516906020013561054c565b6101ca61059a565b6101ca6004803603602081101561028257600080fd5b50356001600160a01b03166105a0565b6101ca600480360360208110156102a857600080fd5b50356001600160a01b03166105bb565b61031260048036036101008110156102cf57600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e001356105e2565b005b61010d6106c0565b6101ae6004803603604081101561033257600080fd5b506001600160a01b038135169060200135610721565b6101ae6004803603604081101561035e57600080fd5b506001600160a01b038135169060200135610789565b610312600480360360e081101561038a57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561079d565b6101ca600480360360408110156103db57600080fd5b506001600160a01b0381358116916020013516610954565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561047f5780601f106104545761010080835404028352916020019161047f565b820191906000526020600020905b81548152906001019060200180831161046257829003601f168201915b505050505090505b90565b600061049e6104976109e0565b84846109e4565b50600192915050565b60025490565b60006104ba848484610ad0565b61052a846104c66109e0565b610525856040518060600160405280602881526020016110a9602891396001600160a01b038a166000908152600160205260408120906105046109e0565b6001600160a01b031681526020810191909152604001600020549190610c2b565b6109e4565b5060019392505050565b60055460ff1690565b6000610547610cc2565b905090565b600061049e6105596109e0565b84610525856001600061056a6109e0565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061097f565b60025481565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b03811660009081526006602052604081206105dc90610d8c565b92915050565b85306001600160a01b0316637ecebe008a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561063057600080fd5b505afa158015610644573d6000803e3d6000fd5b505050506040513d602081101561065a57600080fd5b5051146106985760405162461bcd60e51b815260040180806020018281038252602b815260200180610ff2602b913960400191505060405180910390fd5b6106b68888866106a95760006106ad565b6000195b8887878761079d565b5050505050505050565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561047f5780601f106104545761010080835404028352916020019161047f565b600061049e61072e6109e0565b846105258560405180606001604052806025815260200161111a60259139600160006107586109e0565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610c2b565b600061049e6107966109e0565b8484610ad0565b834211156107f2576040805162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015290519081900360640190fd5b6001600160a01b03871660009081526006602052604081207f00000000000000000000000000000000000000000000000000000000000000009089908990899061083b90610d8c565b8960405160200180878152602001866001600160a01b03168152602001856001600160a01b03168152602001848152602001838152602001828152602001965050505050505060405160208183030381529060405280519060200120905060006108a482610d90565b905060006108b482878787610ddc565b9050896001600160a01b0316816001600160a01b03161461091c576040805162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015290519081900360640190fd5b6001600160a01b038a16600090815260066020526040902061093d90610f5a565b6109488a8a8a6109e4565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000828201838110156109d9576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b038316610a295760405162461bcd60e51b81526004018080602001828103825260248152602001806110f66024913960400191505060405180910390fd5b6001600160a01b038216610a6e5760405162461bcd60e51b815260040180806020018281038252602281526020018061101d6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610b155760405162461bcd60e51b81526004018080602001828103825260258152602001806110d16025913960400191505060405180910390fd5b6001600160a01b038216610b5a5760405162461bcd60e51b8152600401808060200182810382526023815260200180610fcf6023913960400191505060405180910390fd5b610b65838383610f63565b610ba28160405180606001604052806026815260200161103f602691396001600160a01b0386166000908152602081905260409020549190610c2b565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610bd1908261097f565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610cba5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c7f578181015183820152602001610c67565b50505050905090810190601f168015610cac5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60007f0000000000000000000000000000000000000000000000000000000000000000610ced610f68565b1415610d1a57507f0000000000000000000000000000000000000000000000000000000000000000610487565b610d857f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610f6c565b9050610487565b5490565b6000610d9a610cc2565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610e3d5760405162461bcd60e51b81526004018080602001828103825260228152602001806110656022913960400191505060405180910390fd5b8360ff16601b1480610e5257508360ff16601c145b610e8d5760405162461bcd60e51b81526004018080602001828103825260228152602001806110876022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610ee9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f51576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b80546001019055565b505050565b4690565b6000838383610f79610f68565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b0316815260200195505050505050604051602081830303815290604052805190602001209050939250505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573735465737445524332305065726d6974416c6c6f7765643a3a7065726d69743a2077726f6e67206e6f6e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c756545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212205f405f09393788abecc1893615cbf66973313b6b5420197e941726a5c832016964736f6c63430007060033",
    "sourceMap": "231:537:119:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2152:89:263;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4228:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4228:166:263;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3219:106;;;:::i;:::-;;;;;;;;;;;;;;;;4861:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4861:317:263;;;;;;;;;;;;;;;;;:::i;3070:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2548:113:256;;;:::i;5573:215:263:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5573:215:263;;;;;;;;:::i;1515:27::-;;;:::i;3383:125::-;;;;;;;;;;;;;;;;-1:-1:-1;3383:125:263;-1:-1:-1;;;;;3383:125:263;;:::i;2306:118:256:-;;;;;;;;;;;;;;;;-1:-1:-1;2306:118:256;-1:-1:-1;;;;;2306:118:256;;:::i;369:397:119:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;369:397:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2354:93:263;;;:::i;6275:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6275:266:263;;;;;;;;:::i;3711:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3711:172:263;;;;;;;;:::i;1451:794:256:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1451:794:256;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3941:149:263:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3941:149:263;;;;;;;;;;:::i;2152:89::-;2229:5;2222:12;;;;;;;;-1:-1:-1;;2222:12:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2197:13;;2222:12;;2229:5;;2222:12;;2229:5;2222:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2152:89;;:::o;4228:166::-;4311:4;4327:39;4336:12;:10;:12::i;:::-;4350:7;4359:6;4327:8;:39::i;:::-;-1:-1:-1;4383:4:263;4228:166;;;;:::o;3219:106::-;3306:12;;3219:106;:::o;4861:317::-;4967:4;4983:36;4993:6;5001:9;5012:6;4983:9;:36::i;:::-;5029:121;5038:6;5046:12;:10;:12::i;:::-;5060:89;5098:6;5060:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5060:19:263;;;;;;:11;:19;;;;;;5080:12;:10;:12::i;:::-;-1:-1:-1;;;;;5060:33:263;;;;;;;;;;;;-1:-1:-1;5060:33:263;;;:89;:37;:89::i;:::-;5029:8;:121::i;:::-;-1:-1:-1;5167:4:263;4861:317;;;;;:::o;3070:89::-;3143:9;;;;3070:89;:::o;2548:113:256:-;2608:7;2634:20;:18;:20::i;:::-;2627:27;;2548:113;:::o;5573:215:263:-;5661:4;5677:83;5686:12;:10;:12::i;:::-;5700:7;5709:50;5748:10;5709:11;:25;5721:12;:10;:12::i;:::-;-1:-1:-1;;;;;5709:25:263;;;;;;;;;;;;;;;;;-1:-1:-1;5709:25:263;;;:34;;;;;;;;;;;:38;:50::i;1515:27::-;;;;:::o;3383:125::-;-1:-1:-1;;;;;3483:18:263;3457:7;3483:18;;;;;;;;;;;;3383:125::o;2306:118:256:-;-1:-1:-1;;;;;2393:14:256;;2367:7;2393:14;;;:7;:14;;;;;:24;;:22;:24::i;:::-;2386:31;2306:118;-1:-1:-1;;2306:118:256:o;369:397:119:-;623:5;600:4;-1:-1:-1;;;;;600:11:119;;612:6;600:19;;;;;;;;;;;;;-1:-1:-1;;;;;600:19:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;600:19:119;:28;592:84;;;;-1:-1:-1;;;592:84:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:73;693:6;701:7;710;:31;;740:1;710:31;;;-1:-1:-1;;710:31:119;743:6;751:1;754;757;686:6;:73::i;:::-;369:397;;;;;;;;:::o;2354:93:263:-;2433:7;2426:14;;;;;;;;-1:-1:-1;;2426:14:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2401:13;;2426:14;;2433:7;;2426:14;;2433:7;2426:14;;;;;;;;;;;;;;;;;;;;;;;;6275:266;6368:4;6384:129;6393:12;:10;:12::i;:::-;6407:7;6416:96;6455:15;6416:96;;;;;;;;;;;;;;;;;:11;:25;6428:12;:10;:12::i;:::-;-1:-1:-1;;;;;6416:25:263;;;;;;;;;;;;;;;;;-1:-1:-1;6416:25:263;;;:34;;;;;;;;;;;:96;:38;:96::i;3711:172::-;3797:4;3813:42;3823:12;:10;:12::i;:::-;3837:9;3848:6;3813:9;:42::i;1451:794:256:-;1678:8;1659:15;:27;;1651:69;;;;;-1:-1:-1;;;1651:69:256;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1908:14:256;;1731:18;1908:14;;;:7;:14;;;;;1803:16;;1837:5;;1860:7;;1885:5;;1908:24;;:22;:24::i;:::-;1950:8;1775:197;;;;;;;;;;;-1:-1:-1;;;;;1775:197:256;;;;;;-1:-1:-1;;;;;1775:197:256;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1752:230;;;;;;1731:251;;1993:12;2008:28;2025:10;2008:16;:28::i;:::-;1993:43;;2047:14;2064:28;2078:4;2084:1;2087;2090;2064:13;:28::i;:::-;2047:45;;2120:5;-1:-1:-1;;;;;2110:15:256;:6;-1:-1:-1;;;;;2110:15:256;;2102:58;;;;;-1:-1:-1;;;2102:58:256;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2171:14:256;;;;;;:7;:14;;;;;:26;;:24;:26::i;:::-;2207:31;2216:5;2223:7;2232:5;2207:8;:31::i;:::-;1451:794;;;;;;;;;;:::o;3941:149:263:-;-1:-1:-1;;;;;4056:18:263;;;4030:7;4056:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3941:149::o;2682:175:260:-;2740:7;2771:5;;;2794:6;;;;2786:46;;;;;-1:-1:-1;;;2786:46:260;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:1;2682:175;-1:-1:-1;;;2682:175:260:o;598:104:273:-;685:10;598:104;:::o;9339:340:263:-;-1:-1:-1;;;;;9440:19:263;;9432:68;;;;-1:-1:-1;;;9432:68:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9518:21:263;;9510:68;;;;-1:-1:-1;;;9510:68:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9589:18:263;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9640:32;;;;;;;;;;;;;;;;;9339:340;;;:::o;7015:530::-;-1:-1:-1;;;;;7120:20:263;;7112:70;;;;-1:-1:-1;;;7112:70:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7200:23:263;;7192:71;;;;-1:-1:-1;;;7192:71:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7274:47;7295:6;7303:9;7314:6;7274:20;:47::i;:::-;7352:71;7374:6;7352:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7352:17:263;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7332:17:263;;;:9;:17;;;;;;;;;;;:91;;;;7456:20;;;;;;;:32;;7481:6;7456:24;:32::i;:::-;-1:-1:-1;;;;;7433:20:263;;;:9;:20;;;;;;;;;;;;:55;;;;7503:35;;;;;;;7433:20;;7503:35;;;;;;;;;;;;;7015:530;;;:::o;5424:163:260:-;5510:7;5545:12;5537:6;;;;5529:29;;;;-1:-1:-1;;;5529:29:260;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5575:5:260;;;5424:163::o;2952:283:255:-;3013:7;3053:16;3036:13;:11;:13::i;:::-;:33;3032:197;;;-1:-1:-1;3092:24:255;3085:31;;3032:197;3154:64;3176:10;3188:12;3202:15;3154:21;:64::i;:::-;3147:71;;;;1098:112:274;1189:14;;1098:112::o;4193:183:255:-;4270:7;4335:20;:18;:20::i;:::-;4357:10;4306:62;;;;;;-1:-1:-1;;;4306:62:255;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4296:73;;;;;;4289:80;;4193:183;;;:::o;1952:1414:254:-;2037:7;2952:66;2938:80;;;2930:127;;;;-1:-1:-1;;;2930:127:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3075:1;:7;;3080:2;3075:7;:18;;;;3086:1;:7;;3091:2;3086:7;3075:18;3067:65;;;;-1:-1:-1;;;3067:65:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3227:14;3244:24;3254:4;3260:1;3263;3266;3244:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3244:24:254;;-1:-1:-1;;3244:24:254;;;-1:-1:-1;;;;;;;3286:20:254;;3278:57;;;;;-1:-1:-1;;;3278:57:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;3353:6;1952:1414;-1:-1:-1;;;;;1952:1414:254:o;1216:178:274:-;1368:19;;1386:1;1368:19;;;1216:178::o;10685:92:263:-;;;;:::o;4382:320:255:-;4677:9;;4652:44::o;3241:327::-;3343:7;3420:8;3446:4;3468:7;3493:13;:11;:13::i;:::-;3532:4;3392:159;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3392:159:255;;;;;;;;;;;;;;;;;;;;;;;;3369:192;;;;;;3362:199;;3241:327;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "77235": [
        {
          "start": 3318,
          "length": 32
        }
      ],
      "77237": [
        {
          "start": 3270,
          "length": 32
        }
      ],
      "77239": [
        {
          "start": 3392,
          "length": 32
        }
      ],
      "77241": [
        {
          "start": 3425,
          "length": 32
        }
      ],
      "77243": [
        {
          "start": 3359,
          "length": 32
        }
      ],
      "77405": [
        {
          "start": 2060,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "_totalSupply()": "3eaaf86b",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "8fcbaf0c",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToMint\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"details\":\"This is the permit interface used by DAI and CHAI\",\"params\":{\"allowed\":\"Boolean that sets approval amount, true for type(uint256).max and false for 0\",\"expiry\":\"The timestamp at which the permit is no longer valid\",\"holder\":\"The address of the token holder, the token owner\",\"nonce\":\"The holder's nonce, increases at each call to permit\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The address of the token spender\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"notice\":\"Approve the spender to spend some tokens via the holder signature\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/periphery/contracts/test/TestERC20PermitAllowed.sol\":\"TestERC20PermitAllowed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@cryptoalgebra/=node_modules/@cryptoalgebra/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/dependencies/periphery/contracts/interfaces/external/IERC20PermitAllowed.sol\":{\"keccak256\":\"0x8c4c1b8e724e0a78cb691d703dd37cd91b8bd6600537fb227807a194025a792d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://783be851155842a02cdb0483c3a69ecc0e7ae8545f65cec1d4aeb355b2026a7d\",\"dweb:/ipfs/QmZNBQosTjpGNKB3Eo2K6Zzye7FYiLVoEki5iPB2Y69jz2\"]},\"contracts/dependencies/periphery/contracts/test/TestERC20.sol\":{\"keccak256\":\"0x949018b853ff82728babf2bcfdc2c218081c5a826eb1bb3a2caac94b9b78b822\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7018299440a66d9048d94b80e867f255f531911254e086a4eff4a8aa7c1c530e\",\"dweb:/ipfs/QmbWUgTqbj7VdJZwFvreocWQnPJmrfD91wKsyKGDFrrdTM\"]},\"contracts/dependencies/periphery/contracts/test/TestERC20PermitAllowed.sol\":{\"keccak256\":\"0x88e806f716fd7b6bce7394838dded60227265af1c7d33d44ef7d8efd51700133\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4ba6b5838f4213d2cb5dbc708850489ee65e9e003dd970ca5b2bd91279cc0610\",\"dweb:/ipfs/QmdrkXEneQ2vZEXyzuLiAka9TQBcKTgHD6YRNRGSs7QVhW\"]},\"node_modules/@openzeppelin/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc80ce3fcc5e444a2c5bdb902fe4d4f4ecba04e9b416425697d00ae95c1955f82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a84a791d3dfe88a0dcc5b3b825e8375d0ed60c96067b5beb9e2f7dabb0afb0e6\",\"dweb:/ipfs/QmPWUkNDWJkNgEZp1WuAMKkd2XvkuZBcx8HTTTauaj837Y\"]},\"node_modules/@openzeppelin/contracts/drafts/EIP712.sol\":{\"keccak256\":\"0xe4bc5cda2bfee483ff10334881c9ea5cc4df7faa7b18a5a4b8f02fc51cf8adca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0f0314cb3b722c5d221eeef6f5c050d4fd339bf7f2bf41c9304a62ff95bf33a\",\"dweb:/ipfs/QmVSBgT22SEY2mAkd8qNjsqTq8tciugToxbRzwPSSADPuJ\"]},\"node_modules/@openzeppelin/contracts/drafts/ERC20Permit.sol\":{\"keccak256\":\"0x680c4b732f003b048d6a3cf227398d2f7f620eca779ab379662430adb6b19dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb8490d82756117d1ace222668f78756a1982deef7f4483d070fc37a1aeeb85c\",\"dweb:/ipfs/QmWv8kZ4y2joQ8iSe7Xc6ceULqns8TemtvW2j2KRsdryzD\"]},\"node_modules/@openzeppelin/contracts/drafts/IERC20Permit.sol\":{\"keccak256\":\"0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c14e8ff1b384bdb68f262669364b1e79fbbd82b85938b7ce788a1395c40c6a2\",\"dweb:/ipfs/QmUKLXfSeEuRUXkeWLBhjHTKeSFoNBCS1RaMXv1AmHXYzn\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa9a179d76a22a9de3d3ad210a2fcc650ce86691e5326a7a26f94f72387bdc05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e912de329af963286839ca8caa936153154bdde29fed98830a00850ee1311c\",\"dweb:/ipfs/QmbyycCdMZXLaMEnqpjnFYRizeFDTVjiYHrhM1c4AaYUdu\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x281817771877c42089619462a78f41030c77a46032fafde039883f50d752648e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://102e79148de08abe8fa6453f0e40db5829adb78dc0b6f2a21e39aa69d1626ffe\",\"dweb:/ipfs/Qmf6CdzLCKyBPoUYU4AhAsnwd5M4QsA1dYgN8pw1TnBz6p\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x2424442932373c51391b31409f9620d1e1396c37f41ab9d82c51d69bebdd1ab5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcdf37ee59c10644338fbdfb3b7692125ff42003b34990eff8b04beedd89846f\",\"dweb:/ipfs/QmTMAvXQ4DoZbUSS3oBkNr2SddRPCTrE7DZNXrFArHnk8x\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountToMint",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": {
            "details": "This is the permit interface used by DAI and CHAI",
            "params": {
              "allowed": "Boolean that sets approval amount, true for type(uint256).max and false for 0",
              "expiry": "The timestamp at which the permit is no longer valid",
              "holder": "The address of the token holder, the token owner",
              "nonce": "The holder's nonce, increases at each call to permit",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "spender": "The address of the token spender",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
            }
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": {
            "notice": "Approve the spender to spend some tokens via the holder signature"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@cryptoalgebra/=node_modules/@cryptoalgebra/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/dependencies/periphery/contracts/test/TestERC20PermitAllowed.sol": "TestERC20PermitAllowed"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/dependencies/periphery/contracts/interfaces/external/IERC20PermitAllowed.sol": {
        "keccak256": "0x8c4c1b8e724e0a78cb691d703dd37cd91b8bd6600537fb227807a194025a792d",
        "urls": [
          "bzz-raw://783be851155842a02cdb0483c3a69ecc0e7ae8545f65cec1d4aeb355b2026a7d",
          "dweb:/ipfs/QmZNBQosTjpGNKB3Eo2K6Zzye7FYiLVoEki5iPB2Y69jz2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/dependencies/periphery/contracts/test/TestERC20.sol": {
        "keccak256": "0x949018b853ff82728babf2bcfdc2c218081c5a826eb1bb3a2caac94b9b78b822",
        "urls": [
          "bzz-raw://7018299440a66d9048d94b80e867f255f531911254e086a4eff4a8aa7c1c530e",
          "dweb:/ipfs/QmbWUgTqbj7VdJZwFvreocWQnPJmrfD91wKsyKGDFrrdTM"
        ],
        "license": "UNLICENSED"
      },
      "contracts/dependencies/periphery/contracts/test/TestERC20PermitAllowed.sol": {
        "keccak256": "0x88e806f716fd7b6bce7394838dded60227265af1c7d33d44ef7d8efd51700133",
        "urls": [
          "bzz-raw://4ba6b5838f4213d2cb5dbc708850489ee65e9e003dd970ca5b2bd91279cc0610",
          "dweb:/ipfs/QmdrkXEneQ2vZEXyzuLiAka9TQBcKTgHD6YRNRGSs7QVhW"
        ],
        "license": "UNLICENSED"
      },
      "node_modules/@openzeppelin/contracts/cryptography/ECDSA.sol": {
        "keccak256": "0xc80ce3fcc5e444a2c5bdb902fe4d4f4ecba04e9b416425697d00ae95c1955f82",
        "urls": [
          "bzz-raw://a84a791d3dfe88a0dcc5b3b825e8375d0ed60c96067b5beb9e2f7dabb0afb0e6",
          "dweb:/ipfs/QmPWUkNDWJkNgEZp1WuAMKkd2XvkuZBcx8HTTTauaj837Y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/drafts/EIP712.sol": {
        "keccak256": "0xe4bc5cda2bfee483ff10334881c9ea5cc4df7faa7b18a5a4b8f02fc51cf8adca",
        "urls": [
          "bzz-raw://e0f0314cb3b722c5d221eeef6f5c050d4fd339bf7f2bf41c9304a62ff95bf33a",
          "dweb:/ipfs/QmVSBgT22SEY2mAkd8qNjsqTq8tciugToxbRzwPSSADPuJ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/drafts/ERC20Permit.sol": {
        "keccak256": "0x680c4b732f003b048d6a3cf227398d2f7f620eca779ab379662430adb6b19dfc",
        "urls": [
          "bzz-raw://fb8490d82756117d1ace222668f78756a1982deef7f4483d070fc37a1aeeb85c",
          "dweb:/ipfs/QmWv8kZ4y2joQ8iSe7Xc6ceULqns8TemtvW2j2KRsdryzD"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/drafts/IERC20Permit.sol": {
        "keccak256": "0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f",
        "urls": [
          "bzz-raw://8c14e8ff1b384bdb68f262669364b1e79fbbd82b85938b7ce788a1395c40c6a2",
          "dweb:/ipfs/QmUKLXfSeEuRUXkeWLBhjHTKeSFoNBCS1RaMXv1AmHXYzn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
        "keccak256": "0xa9a179d76a22a9de3d3ad210a2fcc650ce86691e5326a7a26f94f72387bdc05a",
        "urls": [
          "bzz-raw://33e912de329af963286839ca8caa936153154bdde29fed98830a00850ee1311c",
          "dweb:/ipfs/QmbyycCdMZXLaMEnqpjnFYRizeFDTVjiYHrhM1c4AaYUdu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x281817771877c42089619462a78f41030c77a46032fafde039883f50d752648e",
        "urls": [
          "bzz-raw://102e79148de08abe8fa6453f0e40db5829adb78dc0b6f2a21e39aa69d1626ffe",
          "dweb:/ipfs/Qmf6CdzLCKyBPoUYU4AhAsnwd5M4QsA1dYgN8pw1TnBz6p"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76",
        "urls": [
          "bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b",
          "dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
        "urls": [
          "bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
          "dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0x2424442932373c51391b31409f9620d1e1396c37f41ab9d82c51d69bebdd1ab5",
        "urls": [
          "bzz-raw://dcdf37ee59c10644338fbdfb3b7692125ff42003b34990eff8b04beedd89846f",
          "dweb:/ipfs/QmTMAvXQ4DoZbUSS3oBkNr2SddRPCTrE7DZNXrFArHnk8x"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/dependencies/periphery/contracts/test/TestERC20PermitAllowed.sol",
    "id": 28839,
    "exportedSymbols": {
      "Context": [
        80581
      ],
      "Counters": [
        80631
      ],
      "ECDSA": [
        77230
      ],
      "EIP712": [
        77379
      ],
      "ERC20": [
        78776
      ],
      "ERC20Permit": [
        77525
      ],
      "IERC20": [
        78913
      ],
      "IERC20Permit": [
        77561
      ],
      "IERC20PermitAllowed": [
        20513
      ],
      "SafeMath": [
        78028
      ],
      "TestERC20": [
        28743
      ],
      "TestERC20PermitAllowed": [
        28838
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:730:119",
    "nodes": [
      {
        "id": 28774,
        "nodeType": "PragmaDirective",
        "src": "39:23:119",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ]
      },
      {
        "id": 28775,
        "nodeType": "ImportDirective",
        "src": "64:25:119",
        "nodes": [],
        "absolutePath": "contracts/dependencies/periphery/contracts/test/TestERC20.sol",
        "file": "./TestERC20.sol",
        "scope": 28839,
        "sourceUnit": 28744,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28776,
        "nodeType": "ImportDirective",
        "src": "90:56:119",
        "nodes": [],
        "absolutePath": "contracts/dependencies/periphery/contracts/interfaces/external/IERC20PermitAllowed.sol",
        "file": "../interfaces/external/IERC20PermitAllowed.sol",
        "scope": 28839,
        "sourceUnit": 20514,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28838,
        "nodeType": "ContractDefinition",
        "src": "231:537:119",
        "nodes": [
          {
            "id": 28789,
            "nodeType": "FunctionDefinition",
            "src": "303:60:119",
            "nodes": [],
            "body": {
              "id": 28788,
              "nodeType": "Block",
              "src": "361:2:119",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28785,
                    "name": "amountToMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28782,
                    "src": "347:12:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 28786,
                "modifierName": {
                  "id": 28784,
                  "name": "TestERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28743,
                  "src": "337:9:119",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TestERC20_$28743_$",
                    "typeString": "type(contract TestERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "337:23:119"
              }
            ],
            "name": "",
            "parameters": {
              "id": 28783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28782,
                  "mutability": "mutable",
                  "name": "amountToMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 28789,
                  "src": "315:20:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "314:22:119"
            },
            "returnParameters": {
              "id": 28787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "361:0:119"
            },
            "scope": 28838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28837,
            "nodeType": "FunctionDefinition",
            "src": "369:397:119",
            "nodes": [],
            "body": {
              "id": 28836,
              "nodeType": "Block",
              "src": "582:184:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 28812,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28791,
                              "src": "612:6:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 28810,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "600:4:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestERC20PermitAllowed_$28838",
                                "typeString": "contract TestERC20PermitAllowed"
                              }
                            },
                            "id": 28811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonces",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 77513,
                            "src": "600:11:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 28813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "600:19:119",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 28814,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28795,
                          "src": "623:5:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "600:28:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5465737445524332305065726d6974416c6c6f7765643a3a7065726d69743a2077726f6e67206e6f6e6365",
                        "id": 28816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "630:45:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16a746fb8402a3aea63c2ae4b24e2f7ae56cdfb3d221dff262ecc07012a6f967",
                          "typeString": "literal_string \"TestERC20PermitAllowed::permit: wrong nonce\""
                        },
                        "value": "TestERC20PermitAllowed::permit: wrong nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16a746fb8402a3aea63c2ae4b24e2f7ae56cdfb3d221dff262ecc07012a6f967",
                          "typeString": "literal_string \"TestERC20PermitAllowed::permit: wrong nonce\""
                        }
                      ],
                      "id": 28809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "592:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:84:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28818,
                  "nodeType": "ExpressionStatement",
                  "src": "592:84:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28820,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28791,
                        "src": "693:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28821,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28793,
                        "src": "701:7:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "id": 28822,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28799,
                          "src": "710:7:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "hexValue": "30",
                          "id": 28828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "740:1:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "id": 28829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "710:31:119",
                        "trueExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 28825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "725:7:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 28824,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "725:7:119",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 28823,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "720:4:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 28826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "720:13:119",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 28827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "720:17:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28830,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28797,
                        "src": "743:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28831,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28801,
                        "src": "751:1:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 28832,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28803,
                        "src": "754:1:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 28833,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28805,
                        "src": "757:1:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 28819,
                      "name": "permit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77497,
                      "src": "686:6:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32)"
                      }
                    },
                    "id": 28834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "686:73:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28835,
                  "nodeType": "ExpressionStatement",
                  "src": "686:73:119"
                }
              ]
            },
            "baseFunctions": [
              20512
            ],
            "functionSelector": "8fcbaf0c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "overrides": {
              "id": 28807,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "573:8:119"
            },
            "parameters": {
              "id": 28806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28791,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 28837,
                  "src": "394:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28793,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 28837,
                  "src": "418:15:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "418:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28795,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 28837,
                  "src": "443:13:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28797,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 28837,
                  "src": "466:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28799,
                  "mutability": "mutable",
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 28837,
                  "src": "490:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28798,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28801,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 28837,
                  "src": "512:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 28800,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:5:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28803,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 28837,
                  "src": "529:9:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28802,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28805,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 28837,
                  "src": "548:9:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28804,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "384:179:119"
            },
            "returnParameters": {
              "id": 28808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:119"
            },
            "scope": 28838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28777,
              "name": "TestERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 28743,
              "src": "266:9:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestERC20_$28743",
                "typeString": "contract TestERC20"
              }
            },
            "id": 28778,
            "nodeType": "InheritanceSpecifier",
            "src": "266:9:119"
          },
          {
            "baseName": {
              "id": 28779,
              "name": "IERC20PermitAllowed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20513,
              "src": "277:19:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20PermitAllowed_$20513",
                "typeString": "contract IERC20PermitAllowed"
              }
            },
            "id": 28780,
            "nodeType": "InheritanceSpecifier",
            "src": "277:19:119"
          }
        ],
        "contractDependencies": [
          20513,
          28743,
          77379,
          77525,
          77561,
          78776,
          78913,
          80581
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28838,
          20513,
          28743,
          77525,
          77379,
          77561,
          78776,
          78913,
          80581
        ],
        "name": "TestERC20PermitAllowed",
        "scope": 28839
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 119
}