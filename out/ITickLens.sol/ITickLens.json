{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "int16",
          "name": "tickBitmapIndex",
          "type": "int16"
        }
      ],
      "name": "getPopulatedTicksInWord",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24"
            },
            {
              "internalType": "int128",
              "name": "liquidityNet",
              "type": "int128"
            },
            {
              "internalType": "uint128",
              "name": "liquidityGross",
              "type": "uint128"
            }
          ],
          "internalType": "struct ITickLens.PopulatedTick[]",
          "name": "populatedTicks",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getPopulatedTicksInWord(address,int16)": "351fb478"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"int16\",\"name\":\"tickBitmapIndex\",\"type\":\"int16\"}],\"name\":\"getPopulatedTicksInWord\",\"outputs\":[{\"components\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"}],\"internalType\":\"struct ITickLens.PopulatedTick[]\",\"name\":\"populatedTicks\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This avoids the waterfall of fetching the tick bitmap, parsing the bitmap to know which ticks to fetch, and then sending additional multicalls to fetch the tick data\",\"kind\":\"dev\",\"methods\":{\"getPopulatedTicksInWord(address,int16)\":{\"params\":{\"pool\":\"The address of the pool for which to fetch populated tick data\",\"tickBitmapIndex\":\"The index of the word in the tick bitmap for which to parse the bitmap and fetch all the populated ticks\"},\"returns\":{\"populatedTicks\":\"An array of tick data for the given word in the tick bitmap\"}}},\"title\":\"Tick Lens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPopulatedTicksInWord(address,int16)\":{\"notice\":\"Get all the tick data for the populated ticks from a word of the tick bitmap of a pool\"}},\"notice\":\"Provides functions for fetching chunks of tick data for a pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/interfaces/ITickLens.sol\":\"ITickLens\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@cryptoalgebra/=node_modules/@cryptoalgebra/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/test/interfaces/ITickLens.sol\":{\"keccak256\":\"0x44570f142562496f3b71e7c90c337aeffa56aa8dcce918537aa796599962f97e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4ff8b6e474a133d5aeac42dfc841299ca6456a87ab461caf334e7d48ac6bc70\",\"dweb:/ipfs/QmYE3nmgx65jcm5EqikS5Sw1SdWjNTKtcQkJvE1ZWFoszE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "int16",
              "name": "tickBitmapIndex",
              "type": "int16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPopulatedTicksInWord",
          "outputs": [
            {
              "internalType": "struct ITickLens.PopulatedTick[]",
              "name": "populatedTicks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityNet",
                  "type": "int128"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidityGross",
                  "type": "uint128"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getPopulatedTicksInWord(address,int16)": {
            "params": {
              "pool": "The address of the pool for which to fetch populated tick data",
              "tickBitmapIndex": "The index of the word in the tick bitmap for which to parse the bitmap and fetch all the populated ticks"
            },
            "returns": {
              "populatedTicks": "An array of tick data for the given word in the tick bitmap"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getPopulatedTicksInWord(address,int16)": {
            "notice": "Get all the tick data for the populated ticks from a word of the tick bitmap of a pool"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@cryptoalgebra/=node_modules/@cryptoalgebra/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/test/interfaces/ITickLens.sol": "ITickLens"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/test/interfaces/ITickLens.sol": {
        "keccak256": "0x44570f142562496f3b71e7c90c337aeffa56aa8dcce918537aa796599962f97e",
        "urls": [
          "bzz-raw://c4ff8b6e474a133d5aeac42dfc841299ca6456a87ab461caf334e7d48ac6bc70",
          "dweb:/ipfs/QmYE3nmgx65jcm5EqikS5Sw1SdWjNTKtcQkJvE1ZWFoszE"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/interfaces/ITickLens.sol",
    "id": 43124,
    "exportedSymbols": {
      "ITickLens": [
        43123
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1042:191",
    "nodes": [
      {
        "id": 43102,
        "nodeType": "PragmaDirective",
        "src": "45:24:191",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".5"
        ]
      },
      {
        "id": 43103,
        "nodeType": "PragmaDirective",
        "src": "70:19:191",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 43123,
        "nodeType": "ContractDefinition",
        "src": "366:720:191",
        "nodes": [
          {
            "id": 43111,
            "nodeType": "StructDefinition",
            "src": "392:109:191",
            "nodes": [],
            "canonicalName": "ITickLens.PopulatedTick",
            "members": [
              {
                "constant": false,
                "id": 43106,
                "mutability": "mutable",
                "name": "tick",
                "nodeType": "VariableDeclaration",
                "scope": 43111,
                "src": "423:10:191",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                },
                "typeName": {
                  "id": 43105,
                  "name": "int24",
                  "nodeType": "ElementaryTypeName",
                  "src": "423:5:191",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43108,
                "mutability": "mutable",
                "name": "liquidityNet",
                "nodeType": "VariableDeclaration",
                "scope": 43111,
                "src": "443:19:191",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int128",
                  "typeString": "int128"
                },
                "typeName": {
                  "id": 43107,
                  "name": "int128",
                  "nodeType": "ElementaryTypeName",
                  "src": "443:6:191",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43110,
                "mutability": "mutable",
                "name": "liquidityGross",
                "nodeType": "VariableDeclaration",
                "scope": 43111,
                "src": "472:22:191",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 43109,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "472:7:191",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PopulatedTick",
            "scope": 43123,
            "visibility": "public"
          },
          {
            "id": 43122,
            "nodeType": "FunctionDefinition",
            "src": "928:156:191",
            "nodes": [],
            "documentation": {
              "id": 43112,
              "nodeType": "StructuredDocumentation",
              "src": "507:416:191",
              "text": "@notice Get all the tick data for the populated ticks from a word of the tick bitmap of a pool\n @param pool The address of the pool for which to fetch populated tick data\n @param tickBitmapIndex The index of the word in the tick bitmap for which to parse the bitmap and\n fetch all the populated ticks\n @return populatedTicks An array of tick data for the given word in the tick bitmap"
            },
            "functionSelector": "351fb478",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPopulatedTicksInWord",
            "parameters": {
              "id": 43117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43114,
                  "mutability": "mutable",
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 43122,
                  "src": "961:12:191",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:191",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43116,
                  "mutability": "mutable",
                  "name": "tickBitmapIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 43122,
                  "src": "975:21:191",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int16",
                    "typeString": "int16"
                  },
                  "typeName": {
                    "id": 43115,
                    "name": "int16",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:5:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int16",
                      "typeString": "int16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "960:37:191"
            },
            "returnParameters": {
              "id": 43121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43120,
                  "mutability": "mutable",
                  "name": "populatedTicks",
                  "nodeType": "VariableDeclaration",
                  "scope": 43122,
                  "src": "1045:37:191",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PopulatedTick_$43111_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ITickLens.PopulatedTick[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43118,
                      "name": "PopulatedTick",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 43111,
                      "src": "1045:13:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PopulatedTick_$43111_storage_ptr",
                        "typeString": "struct ITickLens.PopulatedTick"
                      }
                    },
                    "id": 43119,
                    "nodeType": "ArrayTypeName",
                    "src": "1045:15:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PopulatedTick_$43111_storage_$dyn_storage_ptr",
                      "typeString": "struct ITickLens.PopulatedTick[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1044:39:191"
            },
            "scope": 43123,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 43104,
          "nodeType": "StructuredDocumentation",
          "src": "91:275:191",
          "text": "@title Tick Lens\n @notice Provides functions for fetching chunks of tick data for a pool\n @dev This avoids the waterfall of fetching the tick bitmap, parsing the bitmap to know which ticks to fetch, and\n then sending additional multicalls to fetch the tick data"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          43123
        ],
        "name": "ITickLens",
        "scope": 43124
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 191
}