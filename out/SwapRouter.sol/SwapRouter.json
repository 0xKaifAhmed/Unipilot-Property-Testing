{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH9",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinimum",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISwapRouter.ExactInputParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinimum",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct ISwapRouter.ExactInputSingleParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactInputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMaximum",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISwapRouter.ExactOutputParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactOutput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMaximum",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct ISwapRouter.ExactOutputSingleParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactOutputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitAllowed",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitAllowedIfNecessary",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitIfNecessary",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeBips",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        }
      ],
      "name": "sweepTokenWithFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "amount0Delta",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1Delta",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3SwapCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeBips",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9WithFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60c06040526000196000553480156200001757600080fd5b50604051620027a1380380620027a18339810160408190526200003a9162000076565b6001600160601b0319606092831b8116608052911b1660a052620000ad565b80516001600160a01b03811681146200007157600080fd5b919050565b6000806040838503121562000089578182fd5b620000948362000059565b9150620000a46020840162000059565b90509250929050565b60805160601c60a05160601c612698620001096000398061011252806104c752806105b2528061063f528061067f528061076a5280611721528061176752806117db525080610ba3528061109e52806118b652506126986000f3fe6080604052600436106101025760003560e01c8063c04b8d5911610095578063df2ab5bb11610064578063df2ab5bb14610284578063e0e189a014610297578063f28c0498146102aa578063f3995c67146102bd578063fa461e33146102d057610172565b8063c04b8d5914610236578063c2e3140a14610249578063c45a01551461025c578063db3e21981461027157610172565b80634aa4a4fc116100d15780634aa4a4fc146101ce5780639b2c0a37146101f0578063a4a78f0c14610203578063ac9650d81461021657610172565b806312210e8a14610177578063414bf3891461017f5780634659a494146101a857806349404b7c146101bb57610172565b3661017257336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610170576040805162461bcd60e51b81526020600482015260096024820152684e6f7420574554483960b81b604482015290519081900360640190fd5b005b600080fd5b6101706102f0565b61019261018d36600461222a565b610302565b60405161019f9190612583565b60405180910390f35b6101706101b6366004611fa8565b610429565b6101706101c9366004612331565b6104c3565b3480156101da57600080fd5b506101e361063d565b60405161019f9190612420565b6101706101fe366004612360565b610661565b610170610211366004611fa8565b61082d565b610229610224366004612008565b6108be565b60405161019f919061247a565b61019261024436600461217f565b6109fe565b610170610257366004611fa8565b610b12565b34801561026857600080fd5b506101e3610ba1565b61019261027f36600461222a565b610bc5565b610170610292366004611f09565b610cec565b6101706102a5366004611f4a565b610dca565b6101926102b8366004612246565b610ef1565b6101706102cb366004611fa8565b610fe7565b3480156102dc57600080fd5b506101706102eb36600461209a565b611059565b471561030057610300334761116c565b565b600081608001358061031261125b565b111561035b576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b6103f460a08401356103736080860160608701611ee6565b610384610100870160e08801611ee6565b604080518082019091528061039c60208a018a611ee6565b6103ac60608b0160408c0161230e565b6103bc60408c0160208d01611ee6565b6040516020016103ce939291906123d5565b6040516020818303038152906040528152602001336001600160a01b031681525061125f565b91508260c001358210156104235760405162461bcd60e51b815260040161041a90612519565b60405180910390fd5b50919050565b604080516323f2ebc360e21b815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156104a357600080fd5b505af11580156104b7573d6000803e3d6000fd5b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561053257600080fd5b505afa158015610546573d6000803e3d6000fd5b505050506040513d602081101561055c57600080fd5b50519050828110156105aa576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610638577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561061657600080fd5b505af115801561062a573d6000803e3d6000fd5b50505050610638828261116c565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600082118015610672575060648211155b61067b57600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156106ea57600080fd5b505afa1580156106fe573d6000803e3d6000fd5b505050506040513d602081101561071457600080fd5b5051905084811015610762576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610826577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156107ce57600080fd5b505af11580156107e2573d6000803e3d6000fd5b5050505060006127106107fe85846113b190919063ffffffff16565b8161080557fe5b049050801561081857610818838261116c565b6108248582840361116c565b505b5050505050565b60408051636eb1769f60e11b81523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b15801561087e57600080fd5b505afa158015610892573d6000803e3d6000fd5b505050506040513d60208110156108a857600080fd5b5051101561082457610824868686868686610429565b60608167ffffffffffffffff811180156108d757600080fd5b5060405190808252806020026020018201604052801561090b57816020015b60608152602001906001900390816108f65790505b50905060005b828110156109f7576000803086868581811061092957fe5b905060200281019061093b919061258c565b604051610949929190612410565b600060405180830381855af49150503d8060008114610984576040519150601f19603f3d011682016040523d82523d6000602084013e610989565b606091505b5091509150816109d5576044815110156109a257600080fd5b600481019050808060200190518101906109bc9190612115565b60405162461bcd60e51b815260040161041a91906124da565b808484815181106109e257fe5b60209081029190910101525050600101610911565b5092915050565b6000816040015180610a0e61125b565b1115610a57576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b335b6000610a6885600001516113db565b9050610ab4856060015182610a81578660200151610a83565b305b60006040518060400160405280610a9d8b600001516113e7565b8152602001876001600160a01b031681525061125f565b60608601528015610ad4578451309250610acd906113f6565b8552610ae1565b8460600151935050610ae7565b50610a59565b8360800151831015610b0b5760405162461bcd60e51b815260040161041a90612519565b5050919050565b60408051636eb1769f60e11b8152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b158015610b6157600080fd5b505afa158015610b75573d6000803e3d6000fd5b505050506040513d6020811015610b8b57600080fd5b5051101561082457610824868686868686610fe7565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816080013580610bd561125b565b1115610c1e576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610cba60a0840135610c366080860160608701611ee6565b610c47610100870160e08801611ee6565b6040518060400160405280886020016020810190610c659190611ee6565b610c7560608b0160408c0161230e565b610c8260208c018c611ee6565b604051602001610c94939291906123d5565b6040516020818303038152906040528152602001336001600160a01b031681525061140d565b91508260c00135821115610ce05760405162461bcd60e51b815260040161041a906124ed565b50600019600055919050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610d3b57600080fd5b505afa158015610d4f573d6000803e3d6000fd5b505050506040513d6020811015610d6557600080fd5b5051905082811015610db3576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610dc457610dc4848383611588565b50505050565b600082118015610ddb575060648211155b610de457600080fd5b6000856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610e3357600080fd5b505afa158015610e47573d6000803e3d6000fd5b505050506040513d6020811015610e5d57600080fd5b5051905084811015610eab576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610824576000612710610ec083866113b1565b81610ec757fe5b0490508015610edb57610edb878483611588565b610ee88786838503611588565b50505050505050565b6000816040013580610f0161125b565b1115610f4a576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610fbd6060840135610f626040860160208701611ee6565b6040805180820190915260009080610f7a898061258c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252503360209091015261140d565b5060005491508260800135821115610ce05760405162461bcd60e51b815260040161041a906124ed565b6040805163d505accf60e01b8152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156104a357600080fd5b60008413806110685750600083135b61107157600080fd5b600061107f8284018461227e565b9050600080600061109384600001516116cf565b9250925092506110c57f0000000000000000000000000000000000000000000000000000000000000000848484611700565b5060008060008a136110ec57846001600160a01b0316846001600160a01b03161089611103565b836001600160a01b0316856001600160a01b0316108a5b9150915081156111225761111d858760200151338461171f565b6104b7565b855161112d906113db565b1561115257855161113d906113f6565b865261114c813360008961140d565b506104b7565b806000819055508394506104b7858760200151338461171f565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106111b85780518252601f199092019160209182019101611199565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461121a576040519150601f19603f3d011682016040523d82523d6000602084013e61121f565b606091505b5050905080610638576040805162461bcd60e51b815260206004820152600360248201526253544560e81b604482015290519081900360640190fd5b4290565b60006001600160a01b038416611273573093505b600080600061128585600001516116cf565b919450925090506001600160a01b03808316908416106000806112a98686866118af565b6001600160a01b031663128acb088b856112c28f6118ed565b6001600160a01b038e16156112d7578d6112fd565b876112f65773fffd8963efd1fc6a506488495d951d5263988d256112fd565b6401000276a45b8d60405160200161130e9190612546565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161133d959493929190612434565b6040805180830381600087803b15801561135657600080fd5b505af115801561136a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138e9190612077565b915091508261139d578161139f565b805b6000039b9a5050505050505050505050565b60008215806113cc575050818102818382816113c957fe5b04145b6113d557600080fd5b92915050565b8051604211155b919050565b60606113d5826000602b611903565b80516060906113d590839060179060161901611903565b60006001600160a01b038416611421573093505b600080600061143385600001516116cf565b919450925090506001600160a01b03808416908316106000806114578587866118af565b6001600160a01b031663128acb088b856114708f6118ed565b6000036001600160a01b038e1615611488578d6114ae565b876114a75773fffd8963efd1fc6a506488495d951d5263988d256114ae565b6401000276a45b8d6040516020016114bf9190612546565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016114ee959493929190612434565b6040805180830381600087803b15801561150757600080fd5b505af115801561151b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153f9190612077565b9150915060008361155457818360000361155a565b82826000035b90985090506001600160a01b038a16611579578b811461157957600080fd5b50505050505050949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b602083106116045780518252601f1990920191602091820191016115e5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611666576040519150601f19603f3d011682016040523d82523d6000602084013e61166b565b606091505b5091509150818015611699575080511580611699575080806020019051602081101561169657600080fd5b50515b610826576040805162461bcd60e51b815260206004820152600260248201526114d560f21b604482015290519081900360640190fd5b600080806116dd8482611a54565b92506116ea846014611b04565b90506116f7846017611a54565b91509193909250565b600061171685611711868686611bab565b611c01565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161480156117605750804710155b15611882577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156117c057600080fd5b505af11580156117d4573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561185057600080fd5b505af1158015611864573d6000803e3d6000fd5b505050506040513d602081101561187a57600080fd5b50610dc49050565b6001600160a01b0383163014156118a35761189e848383611588565b610dc4565b610dc484848484611c24565b60006118e57f00000000000000000000000000000000000000000000000000000000000000006118e0868686611bab565b611d74565b949350505050565b6000600160ff1b82106118ff57600080fd5b5090565b60608182601f01101561194e576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b828284011015611996576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b818301845110156119e2576040805162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015290519081900360640190fd5b606082158015611a015760405191506000825260208201604052611a4b565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611a3a578051835260209283019201611a22565b5050858452601f01601f1916604052505b50949350505050565b600081826014011015611aa3576040805162461bcd60e51b8152602060048201526012602482015271746f416464726573735f6f766572666c6f7760701b604482015290519081900360640190fd5b8160140183511015611af4576040805162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b604482015290519081900360640190fd5b500160200151600160601b900490565b600081826003011015611b52576040805162461bcd60e51b8152602060048201526011602482015270746f55696e7432345f6f766572666c6f7760781b604482015290519081900360640190fd5b8160030183511015611ba2576040805162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b604482015290519081900360640190fd5b50016003015190565b611bb3611e58565b826001600160a01b0316846001600160a01b03161115611bd1579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b6000611c0d8383611d74565b9050336001600160a01b038216146113d557600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000948594938a169392918291908083835b60208310611ca85780518252601f199092019160209182019101611c89565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d0a576040519150601f19603f3d011682016040523d82523d6000602084013e611d0f565b606091505b5091509150818015611d3d575080511580611d3d5750808060200190516020811015611d3a57600080fd5b50515b610824576040805162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015290519081900360640190fd5b600081602001516001600160a01b031682600001516001600160a01b031610611d9c57600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301206001600160f81b031960a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516060810182526000808252602082018190529181019190915290565b80356113e28161264a565b600082601f830112611e93578081fd5b8135611ea6611ea1826125fc565b6125d8565b818152846020838601011115611eba578283fd5b816020850160208301379081016020019190915292915050565b60006101008284031215610423578081fd5b600060208284031215611ef7578081fd5b8135611f028161264a565b9392505050565b600080600060608486031215611f1d578182fd5b8335611f288161264a565b9250602084013591506040840135611f3f8161264a565b809150509250925092565b600080600080600060a08688031215611f61578081fd5b8535611f6c8161264a565b9450602086013593506040860135611f838161264a565b9250606086013591506080860135611f9a8161264a565b809150509295509295909350565b60008060008060008060c08789031215611fc0578081fd5b8635611fcb8161264a565b95506020870135945060408701359350606087013560ff81168114611fee578182fd5b9598949750929560808101359460a0909101359350915050565b6000806020838503121561201a578182fd5b823567ffffffffffffffff80821115612031578384fd5b818501915085601f830112612044578384fd5b813581811115612052578485fd5b8660208083028501011115612065578485fd5b60209290920196919550909350505050565b60008060408385031215612089578182fd5b505080516020909101519092909150565b600080600080606085870312156120af578182fd5b8435935060208501359250604085013567ffffffffffffffff808211156120d4578384fd5b818701915087601f8301126120e7578384fd5b8135818111156120f5578485fd5b886020828501011115612106578485fd5b95989497505060200194505050565b600060208284031215612126578081fd5b815167ffffffffffffffff81111561213c578182fd5b8201601f8101841361214c578182fd5b805161215a611ea1826125fc565b81815285602083850101111561216e578384fd5b61171682602083016020860161261e565b600060208284031215612190578081fd5b813567ffffffffffffffff808211156121a7578283fd5b9083019060a082860312156121ba578283fd5b60405160a0810181811083821117156121cf57fe5b6040528235828111156121e0578485fd5b6121ec87828601611e83565b8252506121fb60208401611e78565b602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b6000610100828403121561223c578081fd5b611f028383611ed4565b600060208284031215612257578081fd5b813567ffffffffffffffff81111561226d578182fd5b820160a08185031215611f02578182fd5b60006020828403121561228f578081fd5b813567ffffffffffffffff808211156122a6578283fd5b90830190604082860312156122b9578283fd5b6040516040810181811083821117156122ce57fe5b6040528235828111156122df578485fd5b6122eb87828601611e83565b825250602083013592506122fe8361264a565b6020810192909252509392505050565b60006020828403121561231f578081fd5b813562ffffff81168114611f02578182fd5b60008060408385031215612343578182fd5b8235915060208301356123558161264a565b809150509250929050565b60008060008060808587031215612375578182fd5b8435935060208501356123878161264a565b925060408501359150606085013561239e8161264a565b939692955090935050565b600081518084526123c181602086016020860161261e565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a06080820181905260009061246f908301846123a9565b979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156124cd57603f198886030184526124bb8583516123a9565b9450928501929085019060010161249f565b5092979650505050505050565b600060208252611f0260208301846123a9565b602080825260129082015271151bdbc81b5d58da081c995c5d595cdd195960721b604082015260600190565b602080825260139082015272151bdbc81b1a5d1d1b19481c9958d95a5d9959606a1b604082015260600190565b60006020825282516040602084015261256260608401826123a9565b602094909401516001600160a01b0316604093909301929092525090919050565b90815260200190565b6000808335601e198436030181126125a2578283fd5b83018035915067ffffffffffffffff8211156125bc578283fd5b6020019150368190038213156125d157600080fd5b9250929050565b60405181810167ffffffffffffffff811182821017156125f457fe5b604052919050565b600067ffffffffffffffff82111561261057fe5b50601f01601f191660200190565b60005b83811015612639578181015183820152602001612621565b83811115610dc45750506000910152565b6001600160a01b038116811461265f57600080fd5b5056fea264697066735822122014cc0897ce7039699cb2c93992991b27cca72c22d0ceb77c9c9b8c86392785a564736f6c63430007060033",
    "sourceMap": "775:8938:158:-:0;;;-1:-1:-1;;1338:57:158;;1402:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;522:18:169;;;;;;;;550:14;;;;;775:8938:158;;14:179:315;95:13;;-1:-1:-1;;;;;137:31:315;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:307::-;;;338:2;326:9;317:7;313:23;309:32;306:2;;;359:6;351;344:22;306:2;387:42;419:9;387:42;:::i;:::-;377:52;;448:51;495:2;484:9;480:18;448:51;:::i;:::-;438:61;;296:209;;;;;:::o;:::-;775:8938:158;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101025760003560e01c8063c04b8d5911610095578063df2ab5bb11610064578063df2ab5bb14610284578063e0e189a014610297578063f28c0498146102aa578063f3995c67146102bd578063fa461e33146102d057610172565b8063c04b8d5914610236578063c2e3140a14610249578063c45a01551461025c578063db3e21981461027157610172565b80634aa4a4fc116100d15780634aa4a4fc146101ce5780639b2c0a37146101f0578063a4a78f0c14610203578063ac9650d81461021657610172565b806312210e8a14610177578063414bf3891461017f5780634659a494146101a857806349404b7c146101bb57610172565b3661017257336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610170576040805162461bcd60e51b81526020600482015260096024820152684e6f7420574554483960b81b604482015290519081900360640190fd5b005b600080fd5b6101706102f0565b61019261018d36600461222a565b610302565b60405161019f9190612583565b60405180910390f35b6101706101b6366004611fa8565b610429565b6101706101c9366004612331565b6104c3565b3480156101da57600080fd5b506101e361063d565b60405161019f9190612420565b6101706101fe366004612360565b610661565b610170610211366004611fa8565b61082d565b610229610224366004612008565b6108be565b60405161019f919061247a565b61019261024436600461217f565b6109fe565b610170610257366004611fa8565b610b12565b34801561026857600080fd5b506101e3610ba1565b61019261027f36600461222a565b610bc5565b610170610292366004611f09565b610cec565b6101706102a5366004611f4a565b610dca565b6101926102b8366004612246565b610ef1565b6101706102cb366004611fa8565b610fe7565b3480156102dc57600080fd5b506101706102eb36600461209a565b611059565b471561030057610300334761116c565b565b600081608001358061031261125b565b111561035b576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b6103f460a08401356103736080860160608701611ee6565b610384610100870160e08801611ee6565b604080518082019091528061039c60208a018a611ee6565b6103ac60608b0160408c0161230e565b6103bc60408c0160208d01611ee6565b6040516020016103ce939291906123d5565b6040516020818303038152906040528152602001336001600160a01b031681525061125f565b91508260c001358210156104235760405162461bcd60e51b815260040161041a90612519565b60405180910390fd5b50919050565b604080516323f2ebc360e21b815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156104a357600080fd5b505af11580156104b7573d6000803e3d6000fd5b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561053257600080fd5b505afa158015610546573d6000803e3d6000fd5b505050506040513d602081101561055c57600080fd5b50519050828110156105aa576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610638577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561061657600080fd5b505af115801561062a573d6000803e3d6000fd5b50505050610638828261116c565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600082118015610672575060648211155b61067b57600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156106ea57600080fd5b505afa1580156106fe573d6000803e3d6000fd5b505050506040513d602081101561071457600080fd5b5051905084811015610762576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610826577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156107ce57600080fd5b505af11580156107e2573d6000803e3d6000fd5b5050505060006127106107fe85846113b190919063ffffffff16565b8161080557fe5b049050801561081857610818838261116c565b6108248582840361116c565b505b5050505050565b60408051636eb1769f60e11b81523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b15801561087e57600080fd5b505afa158015610892573d6000803e3d6000fd5b505050506040513d60208110156108a857600080fd5b5051101561082457610824868686868686610429565b60608167ffffffffffffffff811180156108d757600080fd5b5060405190808252806020026020018201604052801561090b57816020015b60608152602001906001900390816108f65790505b50905060005b828110156109f7576000803086868581811061092957fe5b905060200281019061093b919061258c565b604051610949929190612410565b600060405180830381855af49150503d8060008114610984576040519150601f19603f3d011682016040523d82523d6000602084013e610989565b606091505b5091509150816109d5576044815110156109a257600080fd5b600481019050808060200190518101906109bc9190612115565b60405162461bcd60e51b815260040161041a91906124da565b808484815181106109e257fe5b60209081029190910101525050600101610911565b5092915050565b6000816040015180610a0e61125b565b1115610a57576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b335b6000610a6885600001516113db565b9050610ab4856060015182610a81578660200151610a83565b305b60006040518060400160405280610a9d8b600001516113e7565b8152602001876001600160a01b031681525061125f565b60608601528015610ad4578451309250610acd906113f6565b8552610ae1565b8460600151935050610ae7565b50610a59565b8360800151831015610b0b5760405162461bcd60e51b815260040161041a90612519565b5050919050565b60408051636eb1769f60e11b8152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b158015610b6157600080fd5b505afa158015610b75573d6000803e3d6000fd5b505050506040513d6020811015610b8b57600080fd5b5051101561082457610824868686868686610fe7565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816080013580610bd561125b565b1115610c1e576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610cba60a0840135610c366080860160608701611ee6565b610c47610100870160e08801611ee6565b6040518060400160405280886020016020810190610c659190611ee6565b610c7560608b0160408c0161230e565b610c8260208c018c611ee6565b604051602001610c94939291906123d5565b6040516020818303038152906040528152602001336001600160a01b031681525061140d565b91508260c00135821115610ce05760405162461bcd60e51b815260040161041a906124ed565b50600019600055919050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610d3b57600080fd5b505afa158015610d4f573d6000803e3d6000fd5b505050506040513d6020811015610d6557600080fd5b5051905082811015610db3576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610dc457610dc4848383611588565b50505050565b600082118015610ddb575060648211155b610de457600080fd5b6000856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610e3357600080fd5b505afa158015610e47573d6000803e3d6000fd5b505050506040513d6020811015610e5d57600080fd5b5051905084811015610eab576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610824576000612710610ec083866113b1565b81610ec757fe5b0490508015610edb57610edb878483611588565b610ee88786838503611588565b50505050505050565b6000816040013580610f0161125b565b1115610f4a576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610fbd6060840135610f626040860160208701611ee6565b6040805180820190915260009080610f7a898061258c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252503360209091015261140d565b5060005491508260800135821115610ce05760405162461bcd60e51b815260040161041a906124ed565b6040805163d505accf60e01b8152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156104a357600080fd5b60008413806110685750600083135b61107157600080fd5b600061107f8284018461227e565b9050600080600061109384600001516116cf565b9250925092506110c57f0000000000000000000000000000000000000000000000000000000000000000848484611700565b5060008060008a136110ec57846001600160a01b0316846001600160a01b03161089611103565b836001600160a01b0316856001600160a01b0316108a5b9150915081156111225761111d858760200151338461171f565b6104b7565b855161112d906113db565b1561115257855161113d906113f6565b865261114c813360008961140d565b506104b7565b806000819055508394506104b7858760200151338461171f565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106111b85780518252601f199092019160209182019101611199565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461121a576040519150601f19603f3d011682016040523d82523d6000602084013e61121f565b606091505b5050905080610638576040805162461bcd60e51b815260206004820152600360248201526253544560e81b604482015290519081900360640190fd5b4290565b60006001600160a01b038416611273573093505b600080600061128585600001516116cf565b919450925090506001600160a01b03808316908416106000806112a98686866118af565b6001600160a01b031663128acb088b856112c28f6118ed565b6001600160a01b038e16156112d7578d6112fd565b876112f65773fffd8963efd1fc6a506488495d951d5263988d256112fd565b6401000276a45b8d60405160200161130e9190612546565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161133d959493929190612434565b6040805180830381600087803b15801561135657600080fd5b505af115801561136a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138e9190612077565b915091508261139d578161139f565b805b6000039b9a5050505050505050505050565b60008215806113cc575050818102818382816113c957fe5b04145b6113d557600080fd5b92915050565b8051604211155b919050565b60606113d5826000602b611903565b80516060906113d590839060179060161901611903565b60006001600160a01b038416611421573093505b600080600061143385600001516116cf565b919450925090506001600160a01b03808416908316106000806114578587866118af565b6001600160a01b031663128acb088b856114708f6118ed565b6000036001600160a01b038e1615611488578d6114ae565b876114a75773fffd8963efd1fc6a506488495d951d5263988d256114ae565b6401000276a45b8d6040516020016114bf9190612546565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016114ee959493929190612434565b6040805180830381600087803b15801561150757600080fd5b505af115801561151b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153f9190612077565b9150915060008361155457818360000361155a565b82826000035b90985090506001600160a01b038a16611579578b811461157957600080fd5b50505050505050949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b602083106116045780518252601f1990920191602091820191016115e5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611666576040519150601f19603f3d011682016040523d82523d6000602084013e61166b565b606091505b5091509150818015611699575080511580611699575080806020019051602081101561169657600080fd5b50515b610826576040805162461bcd60e51b815260206004820152600260248201526114d560f21b604482015290519081900360640190fd5b600080806116dd8482611a54565b92506116ea846014611b04565b90506116f7846017611a54565b91509193909250565b600061171685611711868686611bab565b611c01565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161480156117605750804710155b15611882577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156117c057600080fd5b505af11580156117d4573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561185057600080fd5b505af1158015611864573d6000803e3d6000fd5b505050506040513d602081101561187a57600080fd5b50610dc49050565b6001600160a01b0383163014156118a35761189e848383611588565b610dc4565b610dc484848484611c24565b60006118e57f00000000000000000000000000000000000000000000000000000000000000006118e0868686611bab565b611d74565b949350505050565b6000600160ff1b82106118ff57600080fd5b5090565b60608182601f01101561194e576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b828284011015611996576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b818301845110156119e2576040805162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015290519081900360640190fd5b606082158015611a015760405191506000825260208201604052611a4b565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611a3a578051835260209283019201611a22565b5050858452601f01601f1916604052505b50949350505050565b600081826014011015611aa3576040805162461bcd60e51b8152602060048201526012602482015271746f416464726573735f6f766572666c6f7760701b604482015290519081900360640190fd5b8160140183511015611af4576040805162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b604482015290519081900360640190fd5b500160200151600160601b900490565b600081826003011015611b52576040805162461bcd60e51b8152602060048201526011602482015270746f55696e7432345f6f766572666c6f7760781b604482015290519081900360640190fd5b8160030183511015611ba2576040805162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b604482015290519081900360640190fd5b50016003015190565b611bb3611e58565b826001600160a01b0316846001600160a01b03161115611bd1579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b6000611c0d8383611d74565b9050336001600160a01b038216146113d557600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000948594938a169392918291908083835b60208310611ca85780518252601f199092019160209182019101611c89565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d0a576040519150601f19603f3d011682016040523d82523d6000602084013e611d0f565b606091505b5091509150818015611d3d575080511580611d3d5750808060200190516020811015611d3a57600080fd5b50515b610824576040805162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015290519081900360640190fd5b600081602001516001600160a01b031682600001516001600160a01b031610611d9c57600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301206001600160f81b031960a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516060810182526000808252602082018190529181019190915290565b80356113e28161264a565b600082601f830112611e93578081fd5b8135611ea6611ea1826125fc565b6125d8565b818152846020838601011115611eba578283fd5b816020850160208301379081016020019190915292915050565b60006101008284031215610423578081fd5b600060208284031215611ef7578081fd5b8135611f028161264a565b9392505050565b600080600060608486031215611f1d578182fd5b8335611f288161264a565b9250602084013591506040840135611f3f8161264a565b809150509250925092565b600080600080600060a08688031215611f61578081fd5b8535611f6c8161264a565b9450602086013593506040860135611f838161264a565b9250606086013591506080860135611f9a8161264a565b809150509295509295909350565b60008060008060008060c08789031215611fc0578081fd5b8635611fcb8161264a565b95506020870135945060408701359350606087013560ff81168114611fee578182fd5b9598949750929560808101359460a0909101359350915050565b6000806020838503121561201a578182fd5b823567ffffffffffffffff80821115612031578384fd5b818501915085601f830112612044578384fd5b813581811115612052578485fd5b8660208083028501011115612065578485fd5b60209290920196919550909350505050565b60008060408385031215612089578182fd5b505080516020909101519092909150565b600080600080606085870312156120af578182fd5b8435935060208501359250604085013567ffffffffffffffff808211156120d4578384fd5b818701915087601f8301126120e7578384fd5b8135818111156120f5578485fd5b886020828501011115612106578485fd5b95989497505060200194505050565b600060208284031215612126578081fd5b815167ffffffffffffffff81111561213c578182fd5b8201601f8101841361214c578182fd5b805161215a611ea1826125fc565b81815285602083850101111561216e578384fd5b61171682602083016020860161261e565b600060208284031215612190578081fd5b813567ffffffffffffffff808211156121a7578283fd5b9083019060a082860312156121ba578283fd5b60405160a0810181811083821117156121cf57fe5b6040528235828111156121e0578485fd5b6121ec87828601611e83565b8252506121fb60208401611e78565b602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b6000610100828403121561223c578081fd5b611f028383611ed4565b600060208284031215612257578081fd5b813567ffffffffffffffff81111561226d578182fd5b820160a08185031215611f02578182fd5b60006020828403121561228f578081fd5b813567ffffffffffffffff808211156122a6578283fd5b90830190604082860312156122b9578283fd5b6040516040810181811083821117156122ce57fe5b6040528235828111156122df578485fd5b6122eb87828601611e83565b825250602083013592506122fe8361264a565b6020810192909252509392505050565b60006020828403121561231f578081fd5b813562ffffff81168114611f02578182fd5b60008060408385031215612343578182fd5b8235915060208301356123558161264a565b809150509250929050565b60008060008060808587031215612375578182fd5b8435935060208501356123878161264a565b925060408501359150606085013561239e8161264a565b939692955090935050565b600081518084526123c181602086016020860161261e565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a06080820181905260009061246f908301846123a9565b979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156124cd57603f198886030184526124bb8583516123a9565b9450928501929085019060010161249f565b5092979650505050505050565b600060208252611f0260208301846123a9565b602080825260129082015271151bdbc81b5d58da081c995c5d595cdd195960721b604082015260600190565b602080825260139082015272151bdbc81b1a5d1d1b19481c9958d95a5d9959606a1b604082015260600190565b60006020825282516040602084015261256260608401826123a9565b602094909401516001600160a01b0316604093909301929092525090919050565b90815260200190565b6000808335601e198436030181126125a2578283fd5b83018035915067ffffffffffffffff8211156125bc578283fd5b6020019150368190038213156125d157600080fd5b9250929050565b60405181810167ffffffffffffffff811182821017156125f457fe5b604052919050565b600067ffffffffffffffff82111561261057fe5b50601f01601f191660200190565b60005b83811015612639578181015183820152602001612621565b83811115610dc45750506000910152565b6001600160a01b038116811461265f57600080fd5b5056fea264697066735822122014cc0897ce7039699cb2c93992991b27cca72c22d0ceb77c9c9b8c86392785a564736f6c63430007060033",
    "sourceMap": "775:8938:158:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;447:10:170;-1:-1:-1;;;;;461:5:170;447:19;;439:41;;;;;-1:-1:-1;;;439:41:170;;;;;;;;;;;;-1:-1:-1;;;439:41:170;;;;;;;;;;;;;;;775:8938:158;;;;;1442:172:170;;;:::i;4486:671:158:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1431:395:174;;;;;;:::i;:::-;;:::i;532:425:170:-;;;;;;:::i;:::-;;:::i;420:39:169:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;561:714:171:-;;;;;;:::i;:::-;;:::i;1864:370:174:-;;;;;;:::i;:::-;;:::i;308:719:168:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5195:1275:158:-;;;;;;:::i;:::-;;:::i;1067:326:174:-;;;;;;:::i;:::-;;:::i;328:41:169:-;;;;;;;;;;;;;:::i;8059:856:158:-;;;;;;:::i;:::-;;:::i;1002:395:170:-;;;;;;:::i;:::-;;:::i;1327:756:171:-;;;;;;:::i;:::-;;:::i;8953:758:158:-;;;;;;:::i;:::-;;:::i;662:367:174:-;;;;;;:::i;:::-;;:::i;2092:1300:158:-;;;;;;;;;;-1:-1:-1;2092:1300:158;;;;;:::i;:::-;;:::i;1442:172:170:-;1503:21;:25;1499:108;;1542:65;1573:10;1585:21;1542:30;:65::i;:::-;1442:172::o;4486:671:158:-;4658:17;4624:6;:15;;;244:8:172;223:17;:15;:17::i;:::-;:29;;215:61;;;;;-1:-1:-1;;;215:61:172;;;;;;;;;;;;-1:-1:-1;;;215:61:172;;;;;;;;;;;;;;;4703:369:158::1;4735:15;::::0;::::1;;4764:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;4794:24;::::0;;;::::1;::::0;::::1;;:::i;:::-;4832:230;::::0;;;;::::1;::::0;;;;4911:14:::1;;::::0;::::1;:6:::0;:14:::1;:::i;:::-;4947:10;::::0;;;::::1;::::0;::::1;;:::i;:::-;4979:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;4873:139;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4832:230;;;;5037:10;-1:-1:-1::0;;;;;4832:230:158::1;;;::::0;4703:18:::1;:369::i;:::-;4691:381;;5103:6;:23;;;5090:9;:36;;5082:68;;;;-1:-1:-1::0;;;5082:68:158::1;;;;;;;:::i;:::-;;;;;;;;;4486:671:::0;;;;:::o;1431:395:174:-;1623:196;;;-1:-1:-1;;;1623:196:174;;1670:10;1623:196;;;;1702:4;1623:196;;;;;;;;;;;;;;;;1760:4;1623:196;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1623:33:174;;;;;:196;;;;;-1:-1:-1;;1623:196:174;;;;;;;-1:-1:-1;1623:33:174;:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1431:395;;;;;;:::o;532:425:170:-;657:20;687:5;-1:-1:-1;;;;;680:23:170;;712:4;680:38;;;;;;;;;;;;;-1:-1:-1;;;;;680:38:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;680:38:170;;-1:-1:-1;736:29:170;;;;728:60;;;;;-1:-1:-1;;;728:60:170;;;;;;;;;;;;-1:-1:-1;;;728:60:170;;;;;;;;;;;;;;;803:16;;799:152;;842:5;-1:-1:-1;;;;;835:22:170;;858:12;835:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;885:55;916:9;927:12;885:30;:55::i;:::-;532:425;;;:::o;420:39:169:-;;;:::o;561:714:171:-;760:1;750:7;:11;:29;;;;;776:3;765:7;:14;;750:29;742:38;;;;;;791:20;821:5;-1:-1:-1;;;;;814:23:171;;846:4;814:38;;;;;;;;;;;;;-1:-1:-1;;;;;814:38:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;814:38:171;;-1:-1:-1;870:29:171;;;;862:60;;;;;-1:-1:-1;;;862:60:171;;;;;;;;;;;;-1:-1:-1;;;862:60:171;;;;;;;;;;;;;;;937:16;;933:336;;976:5;-1:-1:-1;;;;;969:22:171;;992:12;969:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:17;1067:6;1039:25;1056:7;1039:12;:16;;:25;;;;:::i;:::-;:34;;;;;;;-1:-1:-1;1091:13:171;;1087:90;;1122:55;1153:12;1167:9;1122:30;:55::i;:::-;1191:67;1222:9;1248;1233:12;:24;1191:30;:67::i;:::-;933:336;;561:714;;;;;:::o;1864:370:174:-;2086:50;;;-1:-1:-1;;;2086:50:174;;2110:10;2086:50;;;;2130:4;2086:50;;;;;;-1:-1:-1;;2151:17:174;-1:-1:-1;;;;;2086:23:174;;;;;:50;;;;;;;;;;;;;;;:23;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2086:50:174;:82;2069:158;;;2179:48;2197:5;2204;2211:6;2219:1;2222;2225;2179:17;:48::i;308:719:168:-;415:22;475:4;463:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;453:34;;502:9;497:524;517:15;;;497:524;;;554:12;;599:4;635;;640:1;635:7;;;;;;;;;;;;;;;;;;:::i;:::-;591:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;553:103;;;;676:7;671:306;;803:2;787:6;:13;:18;783:32;;;807:8;;;783:32;886:4;878:6;874:17;864:27;;944:6;933:28;;;;;;;;;;;;:::i;:::-;926:36;;-1:-1:-1;;;926:36:168;;;;;;;;:::i;671:306::-;1004:6;991:7;999:1;991:10;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;534:3:168;;497:524;;;;308:719;;;;:::o;5195:1275:158:-;5353:17;5319:6;:15;;;244:8:172;223:17;:15;:17::i;:::-;:29;;215:61;;;;;-1:-1:-1;;;215:61:172;;;;;;;;;;;;-1:-1:-1;;;215:61:172;;;;;;;;;;;;;;;5402:10:158::1;5460:925;5487:21;5511:30;:6;:11;;;:28;:30::i;:::-;5487:54;;5653:394;5689:6;:15;;;5722:16;:51;;5757:6;:16;;;5722:51;;;5749:4;5722:51;5842:1;5861:172;;;;;;;;5906:26;:6;:11;;;:24;:26::i;:::-;5861:172;;;;6009:5;-1:-1:-1::0;;;;;5861:172:158::1;;;::::0;5653:18:::1;:394::i;:::-;5635:15;::::0;::::1;:412:::0;6117:258;::::1;;;6248:11:::0;;6173:4:::1;::::0;-1:-1:-1;6248:23:158::1;::::0;:21:::1;:23::i;:::-;6234:37:::0;;6117:258:::1;;;6322:6;:15;;;6310:27;;6355:5;;;6117:258;5460:925;;;;6416:6;:23;;;6403:9;:36;;6395:68;;;;-1:-1:-1::0;;;6395:68:158::1;;;;;;;:::i;:::-;286:1:172;5195:1275:158::0;;;;:::o;1067:326:174:-;1271:50;;;-1:-1:-1;;;1271:50:174;;1295:10;1271:50;;;;1315:4;1271:50;;;;;;1324:5;;-1:-1:-1;;;;;1271:23:174;;;;;:50;;;;;;;;;;;;;;;:23;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1271:50:174;:58;1267:119;;;1343:43;1354:5;1361;1368:8;1378:1;1381;1384;1343:10;:43::i;328:41:169:-;;;:::o;8059:856:158:-;8233:16;8199:6;:15;;;244:8:172;223:17;:15;:17::i;:::-;:29;;215:61;;;;;-1:-1:-1;;;215:61:172;;;;;;;;;;;;-1:-1:-1;;;215:61:172;;;;;;;;;;;;;;;8332:371:158::1;8365:16;::::0;::::1;;8395;::::0;;;::::1;::::0;::::1;;:::i;:::-;8425:24;::::0;;;::::1;::::0;::::1;;:::i;:::-;8463:230;;;;;;;;8542:6;:15;;;;;;;;;;:::i;:::-;8579:10;::::0;;;::::1;::::0;::::1;;:::i;:::-;8611:14;;::::0;::::1;:6:::0;:14:::1;:::i;:::-;8504:139;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8463:230;;;;8668:10;-1:-1:-1::0;;;;;8463:230:158::1;;;::::0;8332:19:::1;:371::i;:::-;8321:382;;8734:6;:22;;;8722:8;:34;;8714:65;;;;-1:-1:-1::0;;;8714:65:158::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;8867:14:158::1;:41:::0;8059:856;;-1:-1:-1;8059:856:158:o;1002:395:170:-;1143:20;1173:5;-1:-1:-1;;;;;1166:23:170;;1198:4;1166:38;;;;;;;;;;;;;-1:-1:-1;;;;;1166:38:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1166:38:170;;-1:-1:-1;1222:29:170;;;;1214:60;;;;;-1:-1:-1;;;1214:60:170;;;;;;;;;;;;-1:-1:-1;;;1214:60:170;;;;;;;;;;;;;;;1289:16;;1285:106;;1321:59;1349:5;1356:9;1367:12;1321:27;:59::i;:::-;1002:395;;;;:::o;1327:756:171:-;1548:1;1538:7;:11;:29;;;;;1564:3;1553:7;:14;;1538:29;1530:38;;;;;;1579:20;1609:5;-1:-1:-1;;;;;1602:23:171;;1634:4;1602:38;;;;;;;;;;;;;-1:-1:-1;;;;;1602:38:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1602:38:171;;-1:-1:-1;1658:29:171;;;;1650:60;;;;;-1:-1:-1;;;1650:60:171;;;;;;;;;;;;-1:-1:-1;;;1650:60:171;;;;;;;;;;;;;;;1725:16;;1721:356;;1757:17;1805:6;1777:25;:12;1794:7;1777:16;:25::i;:::-;:34;;;;;;;-1:-1:-1;1829:13:171;;1825:94;;1860:59;1888:5;1895:12;1909:9;1860:27;:59::i;:::-;1933:133;1978:5;2001:9;2043;2028:12;:24;1933:27;:133::i;:::-;1721:356;1327:756;;;;;;:::o;8953:758:158:-;9115:16;9081:6;:15;;;244:8:172;223:17;:15;:17::i;:::-;:29;;215:61;;;;;-1:-1:-1;;;215:61:172;;;;;;;;;;;;-1:-1:-1;;;215:61:172;;;;;;;;;;;;;;;9366:176:158::1;9399:16;::::0;::::1;;9429;::::0;;;::::1;::::0;::::1;;:::i;:::-;9474:58;::::0;;;;::::1;::::0;;;9459:1:::1;::::0;9474:58;9499:11:::1;:6:::0;;:11:::1;:::i;:::-;9474:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;9474:58:158;;;-1:-1:-1;9519:10:158::1;9474:58;::::0;;::::1;::::0;9366:19:::1;:176::i;:::-;;9564:14;;9553:25;;9608:6;:22;;;9596:8;:34;;9588:65;;;;-1:-1:-1::0;;;9588:65:158::1;;;;;;;:::i;662:367:174:-:0;849:173;;;-1:-1:-1;;;849:173:174;;889:10;849:173;;;;921:4;849:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;849:26:174;;;;;:173;;;;;-1:-1:-1;;849:173:174;;;;;;;-1:-1:-1;849:26:174;:173;;;;;;;;;;2092:1300:158;2268:1;2253:12;:16;:36;;;;2288:1;2273:12;:16;2253:36;2245:45;;;;;;2363:28;2394:37;;;;2405:5;2394:37;:::i;:::-;2363:68;;2442:15;2459:16;2477:10;2491:53;:4;:22;;;:51;:53::i;:::-;2441:103;;;;;;2554:66;2588:7;2597;2606:8;2616:3;2554:33;:66::i;:::-;;2632:17;2651:19;2689:1;2674:12;:16;:132;;2775:7;-1:-1:-1;;;;;2764:18:158;:8;-1:-1:-1;;;;;2764:18:158;;2792:12;2674:132;;;2716:8;-1:-1:-1;;;;;2706:18:158;:7;-1:-1:-1;;;;;2706:18:158;;2734:12;2674:132;2631:175;;;;2820:12;2816:570;;;2848:49;2852:7;2861:4;:10;;;2873;2885:11;2848:3;:49::i;:::-;2816:570;;;2984:9;;:28;;:26;:28::i;:::-;2980:396;;;3044:9;;:21;;:19;:21::i;:::-;3032:33;;3083:53;3103:11;3116:10;3032:9;:4;3083:19;:53::i;:::-;;2980:396;;;3192:11;3175:14;:28;;;;3231:8;3221:18;;3312:49;3316:7;3325:4;:10;;;3337;3349:11;3312:3;:49::i;2604:167:238:-;2718:12;;;2676;2718;;;;;;;;;-1:-1:-1;;;;;2694:7:238;;;2710:5;;2694:37;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2694:37:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2675:56;;;2749:7;2741:23;;;;;-1:-1:-1;;;2741:23:238;;;;;;;;;;;;-1:-1:-1;;;2741:23:238;;;;;;;;;;;;;;319:106:165;403:15;319:106;:::o;3446:1002:158:-;3623:17;-1:-1:-1;;;;;3719:23:158;;3715:54;;3764:4;3744:25;;3715:54;3781:15;3798:16;3816:10;3830:53;:4;:22;;;:51;:53::i;:::-;3780:103;;-1:-1:-1;3780:103:158;-1:-1:-1;3780:103:158;-1:-1:-1;;;;;;3912:18:158;;;;;;;3894:15;;3976:31;3780:103;;;3976:7;:31::i;:::-;-1:-1:-1;;;;;3976:36:158;;4026:9;4049:10;4073:19;:8;:17;:19::i;:::-;-1:-1:-1;;;;;4106:22:158;;;:235;;4324:17;4106:235;;;4169:10;:118;;4260:27;4169:118;;;4206:27;4169:118;4366:4;4355:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;3976:405;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3941:440;;;;4409:10;:30;;4432:7;4409:30;;;4422:7;4409:30;4407:33;;;3446:1002;-1:-1:-1;;;;;;;;;;;3446:1002:158:o;986:125:297:-;1044:9;1073:6;;;:30;;-1:-1:-1;;1088:5:297;;;1102:1;1097;1088:5;1097:1;1083:15;;;;;:20;1073:30;1065:39;;;;;;986:125;;;;:::o;1000:138:224:-;1091:11;;785:24;-1:-1:-1;1091:40:224;1000:138;;;;:::o;2327:155::-;2415:12;2450:25;:4;2461:1;618:23;2450:10;:25::i;2671:149::-;2787:11;;2732:12;;2763:50;;2787:4;;507:20;;-1:-1:-1;;2787:25:224;2763:10;:50::i;6525:1496:158:-;6704:16;-1:-1:-1;;;;;6799:23:158;;6795:54;;6844:4;6824:25;;6795:54;6861:16;6879:15;6896:10;6910:53;:4;:22;;;:51;:53::i;:::-;6860:103;;-1:-1:-1;6860:103:158;-1:-1:-1;6860:103:158;-1:-1:-1;;;;;;6992:18:158;;;;;;;6974:15;;7066:77;6860:103;;;7066:7;:77::i;:::-;-1:-1:-1;;;;;7066:82:158;;7166:9;7193:10;7222:20;:9;:18;:20::i;:::-;7221:21;;-1:-1:-1;;;;;7260:22:158;;;:259;;7502:17;7260:259;;;7331:10;:126;;7430:27;7331:126;;;7372:27;7331:126;7548:4;7537:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;7066:501;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7021:546;;;;7578:25;7645:10;:134;;7741:12;7765;7764:13;;7645:134;;;7679:12;7703;7702:13;;7645:134;7613:166;;-1:-1:-1;7613:166:158;-1:-1:-1;;;;;;7951:22:158;;7947:67;;8004:9;7983:17;:30;7975:39;;;;;;6525:1496;;;;;;;;;;;;;:::o;1333:365:238:-;1506:59;;;-1:-1:-1;;;;;1506:59:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1506:59:238;-1:-1:-1;;;1506:59:238;;;1482:93;;;;1447:12;;;;1482:10;;;;1506:59;1482:93;;;1506:59;1482:93;;1506:59;1482:93;;;;;;;;;;-1:-1:-1;;1482:93:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1446:129;;;;1606:7;:57;;;;-1:-1:-1;1618:11:238;;:16;;:44;;;1649:4;1638:24;;;;;;;;;;;;;;;-1:-1:-1;1638:24:238;1618:44;1585:106;;;;;-1:-1:-1;;;1585:106:238;;;;;;;;;;;;-1:-1:-1;;;1585:106:238;;;;;;;;;;;;;;1787:314:224;1891:14;;;1991:17;:4;1891:14;1991;:17::i;:::-;1982:26;-1:-1:-1;2024:24:224;:4;304:2;2024:13;:24::i;:::-;2018:30;-1:-1:-1;2067:27:224;:4;507:20;2067:14;:27::i;:::-;2058:36;;1787:314;;;;;:::o;683:317:211:-;829:19;879:114;911:7;936:43;959:6;967;975:3;936:22;:43::i;:::-;879:14;:114::i;:::-;860:133;683:317;-1:-1:-1;;;;;683:317:211:o;1805:701:170:-;1952:5;-1:-1:-1;;;;;1943:14:170;:5;-1:-1:-1;;;;;1943:14:170;;:48;;;;;1986:5;1961:21;:30;;1943:48;1939:561;;;2044:5;-1:-1:-1;;;;;2037:21:170;;2067:5;2037:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2132:5;-1:-1:-1;;;;;2125:22:170;;2148:9;2159:5;2125:40;;;;;;;;;;;;;-1:-1:-1;;;;;2125:40:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1939:561:170;;-1:-1:-1;1939:561:170;;-1:-1:-1;;;;;2186:22:170;;2203:4;2186:22;2182:318;;;2315:52;2343:5;2350:9;2361:5;2315:27;:52::i;:::-;2182:318;;;2426:63;2458:5;2465;2472:9;2483:5;2426:31;:63::i;1614:349:158:-;1727:14;1804:138;1852:7;1881:43;1904:6;1912;1920:3;1881:22;:43::i;:::-;1804:26;:138::i;:::-;1753:203;1614:349;-1:-1:-1;;;;1614:349:158:o;924:121:299:-;976:8;-1:-1:-1;;;1004:1:299;:10;996:19;;;;;;-1:-1:-1;1036:1:299;924:121::o;399:3049:210:-;521:12;569:7;553;563:2;553:12;:23;;545:50;;;;;-1:-1:-1;;;545:50:210;;;;;;;;;;;;-1:-1:-1;;;545:50:210;;;;;;;;;;;;;;;633:6;622:7;613:6;:16;:26;;605:53;;;;;-1:-1:-1;;;605:53:210;;;;;;;;;;;;-1:-1:-1;;;605:53:210;;;;;;;;;;;;;;;702:7;693:6;:16;676:6;:13;:33;;668:63;;;;;-1:-1:-1;;;668:63:210;;;;;;;;;;;;-1:-1:-1;;;668:63:210;;;;;;;;;;;;;;;742:22;805:15;;833:2177;;;;3151:4;3145:11;3132:24;;3337:1;3326:9;3319:20;3385:4;3374:9;3370:20;3364:4;3357:34;798:2607;;833:2177;1015:4;1009:11;996:24;;1674:2;1665:7;1661:16;2097:9;2090:17;2084:4;2080:28;2048:9;2037;2033:25;2008:118;2162:7;2158:2;2154:16;2545:6;2482:9;2475:17;2469:4;2465:28;2425:9;2417:6;2413:22;2380:139;2351:222;2188:577;2599:3;2595:2;2592:11;2188:577;;;2737:9;;2726:21;;2640:4;2632:13;;;;2672;2188:577;;;-1:-1:-1;;2783:26:210;;;2991:2;2974:11;-1:-1:-1;;2970:25:210;2964:4;2957:39;-1:-1:-1;798:2607:210;-1:-1:-1;3432:9:210;399:3049;-1:-1:-1;;;;399:3049:210:o;3454:490::-;3557:7;3603:6;3588;3597:2;3588:11;:21;;3580:52;;;;;-1:-1:-1;;;3580:52:210;;;;;;;;;;;;-1:-1:-1;;;3580:52:210;;;;;;;;;;;;;;;3667:6;3676:2;3667:11;3650:6;:13;:28;;3642:62;;;;;-1:-1:-1;;;3642:62:210;;;;;;;;;;;;-1:-1:-1;;;3642:62:210;;;;;;;;;;;;;;;-1:-1:-1;3809:30:210;3825:4;3809:30;3803:37;-1:-1:-1;;;3782:117:210;;;3454:490::o;3950:393::-;4052:6;4096;4082;4091:1;4082:10;:20;;4074:50;;;;;-1:-1:-1;;;4074:50:210;;;;;;;;;;;;-1:-1:-1;;;4074:50:210;;;;;;;;;;;;;;;4159:6;4168:1;4159:10;4142:6;:13;:27;;4134:60;;;;;-1:-1:-1;;;4134:60:210;;;;;;;;;;;;-1:-1:-1;;;4134:60:210;;;;;;;;;;;;;;;-1:-1:-1;4271:29:210;4287:3;4271:29;4265:36;;3950:393::o;792:276:225:-;909:14;;:::i;:::-;948:6;-1:-1:-1;;;;;939:15:225;:6;-1:-1:-1;;;;;939:15:225;;935:56;;;976:6;;984;935:56;-1:-1:-1;1008:53:225;;;;;;;;-1:-1:-1;;;;;1008:53:225;;;;;;;;;;;;;;;;;;;;;;;792:276::o;1247:279:211:-;1371:19;1428:44;1455:7;1464;1428:26;:44::i;:::-;1406:67;-1:-1:-1;1491:10:211;-1:-1:-1;;;;;1491:27:211;;;1483:36;;;;;561:480:238;760:147;;;-1:-1:-1;;;;;760:147:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;760:147:238;-1:-1:-1;;;760:147:238;;;736:181;;;;701:12;;;;736:10;;;;760:147;736:181;;;760:147;736:181;;760:147;736:181;;;;;;;;;;-1:-1:-1;;736:181:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:217;;;;948:7;:57;;;;-1:-1:-1;960:11:238;;:16;;:44;;;991:4;980:24;;;;;;;;;;;;;;;-1:-1:-1;980:24:238;960:44;927:107;;;;;-1:-1:-1;;;927:107:238;;;;;;;;;;;;-1:-1:-1;;;927:107:238;;;;;;;;;;;;;;1315:540:225;1423:12;1472:3;:10;;;-1:-1:-1;;;;;1459:23:225;:3;:10;;;-1:-1:-1;;;;;1459:23:225;;1451:32;;;;;;-1:-1:-1;1706:10:225;;1718;;;;;1730:7;;;;;1695:43;;-1:-1:-1;;;;;1695:43:225;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1685:54;;;;;;-1:-1:-1;;;;;;1577:229:225;;;;;;;-1:-1:-1;;1577:229:225;;;;;;;;;;;;249:66;1577:229;;;;;;;;;;;;;;;;;;;;;;;;;1546:278;;;;;;1315:540::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:138:315:-;84:20;;113:33;84:20;113:33;:::i;157:485::-;;254:3;247:4;239:6;235:17;231:27;221:2;;276:5;269;262:20;221:2;316:6;303:20;347:49;362:33;392:2;362:33;:::i;:::-;347:49;:::i;:::-;421:2;412:7;405:19;467:3;460:4;455:2;447:6;443:15;439:26;436:35;433:2;;;488:5;481;474:20;433:2;557;550:4;542:6;538:17;531:4;522:7;518:18;505:55;580:16;;;598:4;576:27;569:42;;;;584:7;211:431;-1:-1:-1;;211:431:315:o;647:182::-;;770:3;761:6;756:3;752:16;748:26;745:2;;;791:5;784;777:20;834:259;;946:2;934:9;925:7;921:23;917:32;914:2;;;967:6;959;952:22;914:2;1011:9;998:23;1030:33;1057:5;1030:33;:::i;:::-;1082:5;904:189;-1:-1:-1;;;904:189:315:o;1098:470::-;;;;1244:2;1232:9;1223:7;1219:23;1215:32;1212:2;;;1265:6;1257;1250:22;1212:2;1309:9;1296:23;1328:33;1355:5;1328:33;:::i;:::-;1380:5;-1:-1:-1;1432:2:315;1417:18;;1404:32;;-1:-1:-1;1488:2:315;1473:18;;1460:32;1501:35;1460:32;1501:35;:::i;:::-;1555:7;1545:17;;;1202:366;;;;;:::o;1573:683::-;;;;;;1753:3;1741:9;1732:7;1728:23;1724:33;1721:2;;;1775:6;1767;1760:22;1721:2;1819:9;1806:23;1838:33;1865:5;1838:33;:::i;:::-;1890:5;-1:-1:-1;1942:2:315;1927:18;;1914:32;;-1:-1:-1;1998:2:315;1983:18;;1970:32;2011:35;1970:32;2011:35;:::i;:::-;2065:7;-1:-1:-1;2119:2:315;2104:18;;2091:32;;-1:-1:-1;2175:3:315;2160:19;;2147:33;2189:35;2147:33;2189:35;:::i;:::-;2243:7;2233:17;;;1711:545;;;;;;;;:::o;2261:709::-;;;;;;;2456:3;2444:9;2435:7;2431:23;2427:33;2424:2;;;2478:6;2470;2463:22;2424:2;2522:9;2509:23;2541:33;2568:5;2541:33;:::i;:::-;2593:5;-1:-1:-1;2645:2:315;2630:18;;2617:32;;-1:-1:-1;2696:2:315;2681:18;;2668:32;;-1:-1:-1;2752:2:315;2737:18;;2724:32;2800:4;2787:18;;2775:31;;2765:2;;2825:6;2817;2810:22;2765:2;2414:556;;;;-1:-1:-1;2414:556:315;;2907:3;2892:19;;2879:33;;2959:3;2944:19;;;2931:33;;-1:-1:-1;2414:556:315;-1:-1:-1;;2414:556:315:o;2975:677::-;;;3133:2;3121:9;3112:7;3108:23;3104:32;3101:2;;;3154:6;3146;3139:22;3101:2;3199:9;3186:23;3228:18;3269:2;3261:6;3258:14;3255:2;;;3290:6;3282;3275:22;3255:2;3333:6;3322:9;3318:22;3308:32;;3378:7;3371:4;3367:2;3363:13;3359:27;3349:2;;3405:6;3397;3390:22;3349:2;3450;3437:16;3476:2;3468:6;3465:14;3462:2;;;3497:6;3489;3482:22;3462:2;3556:7;3551:2;3545;3537:6;3533:15;3529:2;3525:24;3521:33;3518:46;3515:2;;;3582:6;3574;3567:22;3515:2;3618;3610:11;;;;;3640:6;;-1:-1:-1;3091:561:315;;-1:-1:-1;;;;3091:561:315:o;3657:253::-;;;3795:2;3783:9;3774:7;3770:23;3766:32;3763:2;;;3816:6;3808;3801:22;3763:2;-1:-1:-1;;3844:16:315;;3900:2;3885:18;;;3879:25;3844:16;;3879:25;;-1:-1:-1;3753:157:315:o;3915:775::-;;;;;4078:2;4066:9;4057:7;4053:23;4049:32;4046:2;;;4099:6;4091;4084:22;4046:2;4140:9;4127:23;4117:33;;4197:2;4186:9;4182:18;4169:32;4159:42;;4252:2;4241:9;4237:18;4224:32;4275:18;4316:2;4308:6;4305:14;4302:2;;;4337:6;4329;4322:22;4302:2;4380:6;4369:9;4365:22;4355:32;;4425:7;4418:4;4414:2;4410:13;4406:27;4396:2;;4452:6;4444;4437:22;4396:2;4497;4484:16;4523:2;4515:6;4512:14;4509:2;;;4544:6;4536;4529:22;4509:2;4594:7;4589:2;4580:6;4576:2;4572:15;4568:24;4565:37;4562:2;;;4620:6;4612;4605:22;4562:2;4036:654;;;;-1:-1:-1;;4656:2:315;4648:11;;-1:-1:-1;;;4036:654:315:o;4695:676::-;;4828:2;4816:9;4807:7;4803:23;4799:32;4796:2;;;4849:6;4841;4834:22;4796:2;4887:9;4881:16;4920:18;4912:6;4909:30;4906:2;;;4957:6;4949;4942:22;4906:2;4985:22;;5038:4;5030:13;;5026:27;-1:-1:-1;5016:2:315;;5072:6;5064;5057:22;5016:2;5106;5100:9;5131:49;5146:33;5176:2;5146:33;:::i;5131:49::-;5203:2;5196:5;5189:17;5243:7;5238:2;5233;5229;5225:11;5221:20;5218:33;5215:2;;;5269:6;5261;5254:22;5215:2;5287:54;5338:2;5333;5326:5;5322:14;5317:2;5313;5309:11;5287:54;:::i;5376:1043::-;;5523:2;5511:9;5502:7;5498:23;5494:32;5491:2;;;5544:6;5536;5529:22;5491:2;5589:9;5576:23;5618:18;5659:2;5651:6;5648:14;5645:2;;;5680:6;5672;5665:22;5645:2;5708:22;;;;5764:4;5746:16;;;5742:27;5739:2;;;5787:6;5779;5772:22;5739:2;5825;5819:9;5867:4;5859:6;5855:17;5922:6;5910:10;5907:22;5902:2;5890:10;5887:18;5884:46;5881:2;;;5933:9;5881:2;5960;5953:22;6000:16;;6028;;;6025:2;;;6062:6;6054;6047:22;6025:2;6095:46;6133:7;6122:8;6118:2;6114:17;6095:46;:::i;:::-;6087:6;6080:62;;6175:33;6204:2;6200;6196:11;6175:33;:::i;:::-;6170:2;6162:6;6158:15;6151:58;6263:2;6259;6255:11;6242:25;6237:2;6229:6;6225:15;6218:50;6322:2;6318;6314:11;6301:25;6296:2;6288:6;6284:15;6277:50;6382:3;6378:2;6374:12;6361:26;6355:3;6347:6;6343:16;6336:52;6407:6;6397:16;;;;;5481:938;;;;:::o;6424:283::-;;6579:3;6567:9;6558:7;6554:23;6550:33;6547:2;;;6601:6;6593;6586:22;6547:2;6629:72;6693:7;6682:9;6629:72;:::i;6712:428::-;;6862:2;6850:9;6841:7;6837:23;6833:32;6830:2;;;6883:6;6875;6868:22;6830:2;6928:9;6915:23;6961:18;6953:6;6950:30;6947:2;;;6998:6;6990;6983:22;6947:2;7026:22;;7082:3;7064:16;;;7060:26;7057:2;;;7104:6;7096;7089:22;7434:929;;7581:2;7569:9;7560:7;7556:23;7552:32;7549:2;;;7602:6;7594;7587:22;7549:2;7647:9;7634:23;7676:18;7717:2;7709:6;7706:14;7703:2;;;7738:6;7730;7723:22;7703:2;7766:22;;;;7822:4;7804:16;;;7800:27;7797:2;;;7845:6;7837;7830:22;7797:2;7883:4;7877:11;7927:4;7919:6;7915:17;7982:6;7970:10;7967:22;7962:2;7950:10;7947:18;7944:46;7941:2;;;7993:9;7941:2;8020:4;8013:24;8062:16;;8090;;;8087:2;;;8124:6;8116;8109:22;8087:2;8157:46;8195:7;8184:8;8180:2;8176:17;8157:46;:::i;:::-;8149:6;8142:62;;8247:2;8243;8239:11;8226:25;8213:38;;8260:33;8287:5;8260:33;:::i;:::-;8321:2;8309:15;;8302:30;;;;-1:-1:-1;8313:6:315;7539:824;-1:-1:-1;;;7539:824:315:o;8632:294::-;;8743:2;8731:9;8722:7;8718:23;8714:32;8711:2;;;8764:6;8756;8749:22;8711:2;8808:9;8795:23;8858:8;8851:5;8847:20;8840:5;8837:31;8827:2;;8887:6;8879;8872:22;8931:327;;;9060:2;9048:9;9039:7;9035:23;9031:32;9028:2;;;9081:6;9073;9066:22;9028:2;9122:9;9109:23;9099:33;;9182:2;9171:9;9167:18;9154:32;9195:33;9222:5;9195:33;:::i;:::-;9247:5;9237:15;;;9018:240;;;;;:::o;9263:539::-;;;;;9426:3;9414:9;9405:7;9401:23;9397:33;9394:2;;;9448:6;9440;9433:22;9394:2;9489:9;9476:23;9466:33;;9549:2;9538:9;9534:18;9521:32;9562:33;9589:5;9562:33;:::i;:::-;9614:5;-1:-1:-1;9666:2:315;9651:18;;9638:32;;-1:-1:-1;9722:2:315;9707:18;;9694:32;9735:35;9694:32;9735:35;:::i;:::-;9384:418;;;;-1:-1:-1;9384:418:315;;-1:-1:-1;;9384:418:315:o;9807:259::-;;9888:5;9882:12;9915:6;9910:3;9903:19;9931:63;9987:6;9980:4;9975:3;9971:14;9964:4;9957:5;9953:16;9931:63;:::i;:::-;10048:2;10027:15;-1:-1:-1;;10023:29:315;10014:39;;;;10055:4;10010:50;;9858:208;-1:-1:-1;;9858:208:315:o;10071:431::-;10324:2;10320:15;;;-1:-1:-1;;10316:24:315;;;10304:37;;10397:3;10375:16;;;;-1:-1:-1;;;;;;10371:41:315;10366:2;10357:12;;10350:63;10447:15;;10443:24;10438:2;10429:12;;10422:46;10493:2;10484:12;;10244:258::o;10507:273::-;;10690:6;10682;10677:3;10664:33;10716:16;;10741:15;;;10716:16;10654:126;-1:-1:-1;10654:126:315:o;10785:203::-;-1:-1:-1;;;;;10949:32:315;;;;10931:51;;10919:2;10904:18;;10886:102::o;10993:570::-;-1:-1:-1;;;;;11282:15:315;;;11264:34;;11341:14;;11334:22;11329:2;11314:18;;11307:50;11388:2;11373:18;;11366:34;;;11436:15;;11431:2;11416:18;;11409:43;11244:3;11483;11468:19;;11461:32;;;10993:570;;11510:47;;11537:19;;11529:6;11510:47;:::i;:::-;11502:55;11216:347;-1:-1:-1;;;;;;;11216:347:315:o;11568:806::-;;11757:2;11797;11786:9;11782:18;11827:2;11816:9;11809:21;11850:6;11885;11879:13;11916:6;11908;11901:22;11954:2;11943:9;11939:18;11932:25;;12017:2;12011;12003:6;11999:15;11988:9;11984:31;11980:40;11966:54;;12055:2;12047:6;12043:15;12076:4;12089:256;12103:6;12100:1;12097:13;12089:256;;;12196:2;12192:7;12180:9;12172:6;12168:22;12164:36;12159:3;12152:49;12224:41;12258:6;12249;12243:13;12224:41;:::i;:::-;12214:51;-1:-1:-1;12323:12:315;;;;12288:15;;;;12125:1;12118:9;12089:256;;;-1:-1:-1;12362:6:315;;11737:637;-1:-1:-1;;;;;;;11737:637:315:o;12379:221::-;;12528:2;12517:9;12510:21;12548:46;12590:2;12579:9;12575:18;12567:6;12548:46;:::i;12605:342::-;12807:2;12789:21;;;12846:2;12826:18;;;12819:30;-1:-1:-1;;;12880:2:315;12865:18;;12858:48;12938:2;12923:18;;12779:168::o;12952:343::-;13154:2;13136:21;;;13193:2;13173:18;;;13166:30;-1:-1:-1;;;13227:2:315;13212:18;;13205:49;13286:2;13271:18;;13126:169::o;13300:476::-;;13499:2;13488:9;13481:21;13537:6;13531:13;13580:4;13575:2;13564:9;13560:18;13553:32;13608:52;13656:2;13645:9;13641:18;13627:12;13608:52;:::i;:::-;13720:2;13708:15;;;;13702:22;-1:-1:-1;;;;;13698:48:315;13691:4;13676:20;;;;13669:78;;;;-1:-1:-1;13594:66:315;;13471:305;-1:-1:-1;13471:305:315:o;13781:177::-;13927:25;;;13915:2;13900:18;;13882:76::o;13963:533::-;;;14106:11;14093:25;14200:2;14196:7;14185:8;14169:14;14165:29;14161:43;14141:18;14137:68;14127:2;;14222:4;14216;14209:18;14127:2;14252:33;;14304:20;;;-1:-1:-1;14347:18:315;14336:30;;14333:2;;;14382:4;14376;14369:18;14333:2;14418:4;14406:17;;-1:-1:-1;14449:14:315;14445:27;;;14435:38;;14432:2;;;14486:1;14483;14476:12;14432:2;14057:439;;;;;:::o;14501:242::-;14571:2;14565:9;14601:17;;;14648:18;14633:34;;14669:22;;;14630:62;14627:2;;;14695:9;14627:2;14722;14715:22;14545:198;;-1:-1:-1;14545:198:315:o;14748:181::-;;14831:18;14823:6;14820:30;14817:2;;;14853:9;14817:2;-1:-1:-1;14912:2:315;14889:17;-1:-1:-1;;14885:31:315;14918:4;14881:42;;14807:122::o;14934:258::-;15006:1;15016:113;15030:6;15027:1;15024:13;15016:113;;;15106:11;;;15100:18;15087:11;;;15080:39;15052:2;15045:10;15016:113;;;15147:6;15144:1;15141:13;15138:2;;;-1:-1:-1;;15182:1:315;15164:16;;15157:27;14987:205::o;15197:133::-;-1:-1:-1;;;;;15274:31:315;;15264:42;;15254:2;;15320:1;15317;15310:12;15254:2;15244:86;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "41623": [
        {
          "start": 2979,
          "length": 32
        },
        {
          "start": 4254,
          "length": 32
        },
        {
          "start": 6326,
          "length": 32
        }
      ],
      "41627": [
        {
          "start": 274,
          "length": 32
        },
        {
          "start": 1223,
          "length": 32
        },
        {
          "start": 1458,
          "length": 32
        },
        {
          "start": 1599,
          "length": 32
        },
        {
          "start": 1663,
          "length": 32
        },
        {
          "start": 1898,
          "length": 32
        },
        {
          "start": 5921,
          "length": 32
        },
        {
          "start": 5991,
          "length": 32
        },
        {
          "start": 6107,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "WETH9()": "4aa4a4fc",
    "exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
    "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
    "exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
    "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
    "factory()": "c45a0155",
    "multicall(bytes[])": "ac9650d8",
    "refundETH()": "12210e8a",
    "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
    "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "4659a494",
    "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "a4a78f0c",
    "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a",
    "sweepToken(address,uint256,address)": "df2ab5bb",
    "sweepTokenWithFee(address,uint256,address,uint256,address)": "e0e189a0",
    "uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33",
    "unwrapWETH9(uint256,address)": "49404b7c",
    "unwrapWETH9WithFee(uint256,address,uint256,address)": "9b2c0a37"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"sweepTokenWithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9WithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this).\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this)\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"sweepTokenWithFee(address,uint256,address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}},\"unwrapWETH9WithFee(uint256,address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\"}},\"stateVariables\":{\"DEFAULT_AMOUNT_IN_CACHED\":{\"details\":\"Used as the placeholder value for amountInCached, because the computed amount in for an exact output swap can never actually be this value\"},\"amountInCached\":{\"details\":\"Transient storage variable used for returning the computed amount in for an exact output swap.\"}},\"title\":\"Uniswap V3 Swap Router\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"sweepTokenWithFee(address,uint256,address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1 (inclusive) going to feeRecipient\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"},\"unwrapWETH9WithFee(uint256,address,uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1 (inclusive) going to feeRecipient\"}},\"notice\":\"Router for stateless execution of swaps against Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/SwapRouter.sol\":\"SwapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@cryptoalgebra/=node_modules/@cryptoalgebra/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/test/SwapRouter.sol\":{\"keccak256\":\"0x7e9c2b37f4ff1a0e44e6db8a3a3737b859982e2296d4e7e97946e721702241cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://97eb5704ea82fbc989f525a3ffdc3847b485f9ea1ab1daf5afb591e5b9738c9e\",\"dweb:/ipfs/QmUZ9KPKeHyysr3ddrZonZNxozv6NwfSGMui3A9mjMYgnE\"]},\"contracts/test/base/BlockTimestamp.sol\":{\"keccak256\":\"0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93\",\"dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b\"]},\"contracts/test/base/Multicall.sol\":{\"keccak256\":\"0xab8f3ee06ea7de854c7ff37c11a8e6feaf4f58d9f9a829906d064af4d2fbb702\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da62ae1c01ec379dd5c528555e6fa4d8added15a65920c8598873abad6b6417e\",\"dweb:/ipfs/QmekTPfxPiEgA7AuAQXnAqYu1jHTLS7yLu3eqKCM3QcaoY\"]},\"contracts/test/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0x8e8689548a0bac366e8a190bea21cbaabf99d91045e7e58e8f615bcf24a1baf7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://722c5e2f60d788a8c67ba400e9f9437778b02035f2b849b860e1d272c1ba4c5e\",\"dweb:/ipfs/Qmar7UDCVzAKcQK1u3n8eY6trxnthdRRyCjxA2SfMBGFdU\"]},\"contracts/test/base/PeripheryPayments.sol\":{\"keccak256\":\"0xdd3c24c81fba6953ea9d85300f665cdb738894a677d6fede1cc3e9e0d1a57a44\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2918494071226007a46cdfebecba6a2bbc336aaa269dd6d840bcacac03fa46ba\",\"dweb:/ipfs/Qmefiyw4zos8Dp2Leygs5vua7KEzy2hzG97ZUw6qixoP3j\"]},\"contracts/test/base/PeripheryPaymentsWithFee.sol\":{\"keccak256\":\"0x2adf5103aad68785667a92fc64fd1ae22cce8616605861c5230335dd50a2f2b2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8d74ac6e844e7bcc92555fe2f35181e4de58ebbb9b7d0e239b673512016c9d31\",\"dweb:/ipfs/QmQjHa5vnnw2AC4ZHjhUm54ianCQAVhMGaW47fS9wTYREz\"]},\"contracts/test/base/PeripheryValidation.sol\":{\"keccak256\":\"0x84c324d475cc8b0878a8e702a47ad99dc727d31f5d66ef73569e275f494c7ea7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://aa16be77c2a267499f043c98156c16b33fd7e1dc4759143bd74524abaf406b69\",\"dweb:/ipfs/QmSG8bCC3o5Hz5e1aiCkehqVU5jFYV8zL25ZaKiVVS8gQ2\"]},\"contracts/test/base/SelfPermit.sol\":{\"keccak256\":\"0x20b2a7ef660d31637c0f9a54dd35669712fd582d025356f8e865426653de856d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://21c1325a3b55bafc971e23068b175be87eed794b20f1db7e90c29af4acd3e19f\",\"dweb:/ipfs/Qmcz68rvvGYpwMrHF6NuT6BDxWjKAhB6oPwn12LqVreBba\"]},\"contracts/test/interfaces/IMulticall.sol\":{\"keccak256\":\"0x15917f1080a41efd307e51c0d56afa885c5f2757da456ef4833c2d1aff1566b7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2391bc98c85d62eb0b42dac16f836965d7709d76cd5d1d2cc3803d5bcdb90cc9\",\"dweb:/ipfs/QmT9jceBt5hfL6tT6pTKh4CJStjFrsUj9F4nVj1hRSnQ6f\"]},\"contracts/test/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"contracts/test/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0x304c2150b73fadef367df2eea935a04df7a07606939f884a0d5e1c3d65f5d671\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fdddfa1a23b77f433b450d09148600b1a6ff2cea18365026378d0b6c19bd5c95\",\"dweb:/ipfs/Qmb4ekGQUwm45YQrMVUTxKyuQu1MPbPQVW823rhS3jYZ16\"]},\"contracts/test/interfaces/IPeripheryPaymentsWithFee.sol\":{\"keccak256\":\"0x8e347269d5d8cb3f91017c410c595a1a4068811fc31429e337e4a2f0508a4dd2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e42f6098dd715015207887b738869787cd7e29fb7edc4edeb43950a10dfe4f61\",\"dweb:/ipfs/QmZo1BSW8SozcCt5YM4GjXpRstfaTpGtvCs6R59JtDddvk\"]},\"contracts/test/interfaces/ISelfPermit.sol\":{\"keccak256\":\"0xe1a1c072855e687c90317c15b9b6ce81cc683723f73d70e47b40f2f9bad0c2be\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://53b0881a1c55254d157054bd3d1c86982c0f5429bd2a9986c15479f6b71ef678\",\"dweb:/ipfs/Qmc9WZqXzQmqsA3xYxojbx9nXcG3FGuwAjM3opEmRGSnBb\"]},\"contracts/test/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x6cac49c1e552b5552527f6b3d8a6cb0a1a5567015ccc929e119dc4230efb3ad8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7ebf29ba7dfc8ebccce958be03da57c76de9314eee503945d6d4f4b7c9566542\",\"dweb:/ipfs/QmRMpsjpa5UqhSbKeVgKkXW1pZKHQpHwLQdjwS2CLnTDez\"]},\"contracts/test/interfaces/external/IERC20PermitAllowed.sol\":{\"keccak256\":\"0x8c4c1b8e724e0a78cb691d703dd37cd91b8bd6600537fb227807a194025a792d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://783be851155842a02cdb0483c3a69ecc0e7ae8545f65cec1d4aeb355b2026a7d\",\"dweb:/ipfs/QmZNBQosTjpGNKB3Eo2K6Zzye7FYiLVoEki5iPB2Y69jz2\"]},\"contracts/test/interfaces/external/IWETH9.sol\":{\"keccak256\":\"0x7dcf8005d026aff5f18afebe2c40b7089e74b55f6e0eb0ad37c36220f82316c4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8b78e4a92b9ecfb20b8c4c30ad45868eaf14d4be461eba0585b720d979a1ee9a\",\"dweb:/ipfs/QmdVz2eaMvRAPBDQpK6DLqv72znE8FBeAAGEhQW2bsujeH\"]},\"contracts/test/libraries/BytesLib.sol\":{\"keccak256\":\"0xddd2fd1ed069649a584922fa5d542debd9ac21fb8ec81997ebaa2bc4c94eecad\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fd1a5a7e74ff805fa341375c2414b6760c6f35c462cc96d910285395db296d4a\",\"dweb:/ipfs/QmZB2fFGYKw8buVwPmhv1fvigfVptVbF8qtCKRPX4hwnsN\"]},\"contracts/test/libraries/CallbackValidation.sol\":{\"keccak256\":\"0xaee9f0132856f43339967390c37c76dd1bc1972adf0daa03266956af43b5db9c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bc3e97da960ccf7b407897de467585844eb743ea15ea7dff2085e3089f6d6f3c\",\"dweb:/ipfs/QmUomhzxSeUfqfQEXUms2NWYZSXgcyGdyGHnkSLPKc4Cy4\"]},\"contracts/test/libraries/Path.sol\":{\"keccak256\":\"0xb8e48bd2c99613a8582425fd151775da1c0fa7fdb3ff84df73c0e3b7dc1bd5e7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2f921b45c253bc2740f3d9818195bf163ca45ac414e77d295aecf8af8fe9e953\",\"dweb:/ipfs/QmeMkfywfo1j7jAxKwPK6VC2eXh5dk3FrHdqd71ZWPeuNV\"]},\"contracts/test/libraries/PoolAddress.sol\":{\"keccak256\":\"0x534b77e831b66519d1e52c7a21d3329832c21deefa35dec360f7604be2b8d9a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://95341ca07dd50acc9b4f881baff9fe7d725d087e4520662abfc3fac2a4ddd16c\",\"dweb:/ipfs/QmP2TfNARc25MVdp2ox3g45EygyrimfifbtB86mH9Yzkes\"]},\"contracts/test/libraries/TransferHelper.sol\":{\"keccak256\":\"0x325c5a058585f2a1ffe292a82b08fa77bccad9f02830aee1c7e7493189e600b8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3c3e1ae87de89ad8b2743b2a9a7f17234cad484fe6caf35321e1ae947ed7a92a\",\"dweb:/ipfs/QmeFixRMxvXBpT6rGrszU7TjDoVbv5HmQYUfecEArAPKRn\"]},\"node_modules/@openzeppelin/contracts/drafts/IERC20Permit.sol\":{\"keccak256\":\"0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c14e8ff1b384bdb68f262669364b1e79fbbd82b85938b7ce788a1395c40c6a2\",\"dweb:/ipfs/QmUKLXfSeEuRUXkeWLBhjHTKeSFoNBCS1RaMXv1AmHXYzn\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"node_modules/@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"node_modules/@uniswap/v3-core/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869\",\"dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU\"]},\"node_modules/@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x1f864a2bf61ba05f3173eaf2e3f94c5e1da4bec0554757527b6d1ef1fe439e4e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5139b586df546a9d1c46804ca400b1cb9ce87236eaf212ebd64edee6747a172a\",\"dweb:/ipfs/QmVa2kcRw3VyuB6j1EVWXACKnkbQZgfXYXNi5voq3XkYG8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_WETH9",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactInputParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "path",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMinimum",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactInput",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactInputSingleParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactInputSingle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactOutputParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "path",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMaximum",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactOutput",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactOutputSingleParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMaximum",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactOutputSingle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitAllowedIfNecessary"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitIfNecessary"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "feeBips",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepTokenWithFee"
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "amount0Delta",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "amount1Delta",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "uniswapV3SwapCallback"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWETH9"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "feeBips",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWETH9WithFee"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "exactInput((bytes,address,uint256,uint256,uint256))": {
            "params": {
              "params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
            },
            "returns": {
              "amountOut": "The amount of the received token"
            }
          },
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "params": {
              "params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
            },
            "returns": {
              "amountOut": "The amount of the received token"
            }
          },
          "exactOutput((bytes,address,uint256,uint256,uint256))": {
            "params": {
              "params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
            },
            "returns": {
              "amountIn": "The amount of the input token"
            }
          },
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "params": {
              "params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
            },
            "returns": {
              "amountIn": "The amount of the input token"
            }
          },
          "multicall(bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract"
            },
            "returns": {
              "results": "The results from each of the calls passed in via data"
            }
          },
          "refundETH()": {
            "details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
          },
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this).",
            "params": {
              "deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
              "value": "The amount that can be spent of token"
            }
          },
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this)",
            "params": {
              "expiry": "The timestamp at which the permit is no longer valid",
              "nonce": "The current nonce of the owner",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
            }
          },
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.",
            "params": {
              "expiry": "The timestamp at which the permit is no longer valid",
              "nonce": "The current nonce of the owner",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
            }
          },
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit",
            "params": {
              "deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
              "value": "The amount that can be spent of token"
            }
          },
          "sweepToken(address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
            "params": {
              "amountMinimum": "The minimum amount of token required for a transfer",
              "recipient": "The destination address of the token",
              "token": "The contract address of the token which will be transferred to `recipient`"
            }
          },
          "sweepTokenWithFee(address,uint256,address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users"
          },
          "uniswapV3SwapCallback(int256,int256,bytes)": {
            "details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
            "params": {
              "amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
              "amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
              "data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
            }
          },
          "unwrapWETH9(uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
            "params": {
              "amountMinimum": "The minimum amount of WETH9 to unwrap",
              "recipient": "The address receiving ETH"
            }
          },
          "unwrapWETH9WithFee(uint256,address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "exactInput((bytes,address,uint256,uint256,uint256))": {
            "notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
          },
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "notice": "Swaps `amountIn` of one token for as much as possible of another token"
          },
          "exactOutput((bytes,address,uint256,uint256,uint256))": {
            "notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
          },
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "notice": "Swaps as little as possible of one token for `amountOut` of another token"
          },
          "multicall(bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          },
          "refundETH()": {
            "notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
          },
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend a given token from `msg.sender`"
          },
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
          },
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
          },
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend a given token from `msg.sender`"
          },
          "sweepToken(address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient"
          },
          "sweepTokenWithFee(address,uint256,address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1 (inclusive) going to feeRecipient"
          },
          "uniswapV3SwapCallback(int256,int256,bytes)": {
            "notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
          },
          "unwrapWETH9(uint256,address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
          },
          "unwrapWETH9WithFee(uint256,address,uint256,address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1 (inclusive) going to feeRecipient"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@cryptoalgebra/=node_modules/@cryptoalgebra/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/test/SwapRouter.sol": "SwapRouter"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/test/SwapRouter.sol": {
        "keccak256": "0x7e9c2b37f4ff1a0e44e6db8a3a3737b859982e2296d4e7e97946e721702241cd",
        "urls": [
          "bzz-raw://97eb5704ea82fbc989f525a3ffdc3847b485f9ea1ab1daf5afb591e5b9738c9e",
          "dweb:/ipfs/QmUZ9KPKeHyysr3ddrZonZNxozv6NwfSGMui3A9mjMYgnE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/base/BlockTimestamp.sol": {
        "keccak256": "0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6",
        "urls": [
          "bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93",
          "dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/base/Multicall.sol": {
        "keccak256": "0xab8f3ee06ea7de854c7ff37c11a8e6feaf4f58d9f9a829906d064af4d2fbb702",
        "urls": [
          "bzz-raw://da62ae1c01ec379dd5c528555e6fa4d8added15a65920c8598873abad6b6417e",
          "dweb:/ipfs/QmekTPfxPiEgA7AuAQXnAqYu1jHTLS7yLu3eqKCM3QcaoY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/base/PeripheryImmutableState.sol": {
        "keccak256": "0x8e8689548a0bac366e8a190bea21cbaabf99d91045e7e58e8f615bcf24a1baf7",
        "urls": [
          "bzz-raw://722c5e2f60d788a8c67ba400e9f9437778b02035f2b849b860e1d272c1ba4c5e",
          "dweb:/ipfs/Qmar7UDCVzAKcQK1u3n8eY6trxnthdRRyCjxA2SfMBGFdU"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/base/PeripheryPayments.sol": {
        "keccak256": "0xdd3c24c81fba6953ea9d85300f665cdb738894a677d6fede1cc3e9e0d1a57a44",
        "urls": [
          "bzz-raw://2918494071226007a46cdfebecba6a2bbc336aaa269dd6d840bcacac03fa46ba",
          "dweb:/ipfs/Qmefiyw4zos8Dp2Leygs5vua7KEzy2hzG97ZUw6qixoP3j"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/base/PeripheryPaymentsWithFee.sol": {
        "keccak256": "0x2adf5103aad68785667a92fc64fd1ae22cce8616605861c5230335dd50a2f2b2",
        "urls": [
          "bzz-raw://8d74ac6e844e7bcc92555fe2f35181e4de58ebbb9b7d0e239b673512016c9d31",
          "dweb:/ipfs/QmQjHa5vnnw2AC4ZHjhUm54ianCQAVhMGaW47fS9wTYREz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/base/PeripheryValidation.sol": {
        "keccak256": "0x84c324d475cc8b0878a8e702a47ad99dc727d31f5d66ef73569e275f494c7ea7",
        "urls": [
          "bzz-raw://aa16be77c2a267499f043c98156c16b33fd7e1dc4759143bd74524abaf406b69",
          "dweb:/ipfs/QmSG8bCC3o5Hz5e1aiCkehqVU5jFYV8zL25ZaKiVVS8gQ2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/base/SelfPermit.sol": {
        "keccak256": "0x20b2a7ef660d31637c0f9a54dd35669712fd582d025356f8e865426653de856d",
        "urls": [
          "bzz-raw://21c1325a3b55bafc971e23068b175be87eed794b20f1db7e90c29af4acd3e19f",
          "dweb:/ipfs/Qmcz68rvvGYpwMrHF6NuT6BDxWjKAhB6oPwn12LqVreBba"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/interfaces/IMulticall.sol": {
        "keccak256": "0x15917f1080a41efd307e51c0d56afa885c5f2757da456ef4833c2d1aff1566b7",
        "urls": [
          "bzz-raw://2391bc98c85d62eb0b42dac16f836965d7709d76cd5d1d2cc3803d5bcdb90cc9",
          "dweb:/ipfs/QmT9jceBt5hfL6tT6pTKh4CJStjFrsUj9F4nVj1hRSnQ6f"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/interfaces/IPeripheryImmutableState.sol": {
        "keccak256": "0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d",
        "urls": [
          "bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f",
          "dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/interfaces/IPeripheryPayments.sol": {
        "keccak256": "0x304c2150b73fadef367df2eea935a04df7a07606939f884a0d5e1c3d65f5d671",
        "urls": [
          "bzz-raw://fdddfa1a23b77f433b450d09148600b1a6ff2cea18365026378d0b6c19bd5c95",
          "dweb:/ipfs/Qmb4ekGQUwm45YQrMVUTxKyuQu1MPbPQVW823rhS3jYZ16"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/interfaces/IPeripheryPaymentsWithFee.sol": {
        "keccak256": "0x8e347269d5d8cb3f91017c410c595a1a4068811fc31429e337e4a2f0508a4dd2",
        "urls": [
          "bzz-raw://e42f6098dd715015207887b738869787cd7e29fb7edc4edeb43950a10dfe4f61",
          "dweb:/ipfs/QmZo1BSW8SozcCt5YM4GjXpRstfaTpGtvCs6R59JtDddvk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/interfaces/ISelfPermit.sol": {
        "keccak256": "0xe1a1c072855e687c90317c15b9b6ce81cc683723f73d70e47b40f2f9bad0c2be",
        "urls": [
          "bzz-raw://53b0881a1c55254d157054bd3d1c86982c0f5429bd2a9986c15479f6b71ef678",
          "dweb:/ipfs/Qmc9WZqXzQmqsA3xYxojbx9nXcG3FGuwAjM3opEmRGSnBb"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/interfaces/ISwapRouter.sol": {
        "keccak256": "0x6cac49c1e552b5552527f6b3d8a6cb0a1a5567015ccc929e119dc4230efb3ad8",
        "urls": [
          "bzz-raw://7ebf29ba7dfc8ebccce958be03da57c76de9314eee503945d6d4f4b7c9566542",
          "dweb:/ipfs/QmRMpsjpa5UqhSbKeVgKkXW1pZKHQpHwLQdjwS2CLnTDez"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/interfaces/external/IERC20PermitAllowed.sol": {
        "keccak256": "0x8c4c1b8e724e0a78cb691d703dd37cd91b8bd6600537fb227807a194025a792d",
        "urls": [
          "bzz-raw://783be851155842a02cdb0483c3a69ecc0e7ae8545f65cec1d4aeb355b2026a7d",
          "dweb:/ipfs/QmZNBQosTjpGNKB3Eo2K6Zzye7FYiLVoEki5iPB2Y69jz2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/interfaces/external/IWETH9.sol": {
        "keccak256": "0x7dcf8005d026aff5f18afebe2c40b7089e74b55f6e0eb0ad37c36220f82316c4",
        "urls": [
          "bzz-raw://8b78e4a92b9ecfb20b8c4c30ad45868eaf14d4be461eba0585b720d979a1ee9a",
          "dweb:/ipfs/QmdVz2eaMvRAPBDQpK6DLqv72znE8FBeAAGEhQW2bsujeH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/libraries/BytesLib.sol": {
        "keccak256": "0xddd2fd1ed069649a584922fa5d542debd9ac21fb8ec81997ebaa2bc4c94eecad",
        "urls": [
          "bzz-raw://fd1a5a7e74ff805fa341375c2414b6760c6f35c462cc96d910285395db296d4a",
          "dweb:/ipfs/QmZB2fFGYKw8buVwPmhv1fvigfVptVbF8qtCKRPX4hwnsN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/libraries/CallbackValidation.sol": {
        "keccak256": "0xaee9f0132856f43339967390c37c76dd1bc1972adf0daa03266956af43b5db9c",
        "urls": [
          "bzz-raw://bc3e97da960ccf7b407897de467585844eb743ea15ea7dff2085e3089f6d6f3c",
          "dweb:/ipfs/QmUomhzxSeUfqfQEXUms2NWYZSXgcyGdyGHnkSLPKc4Cy4"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/libraries/Path.sol": {
        "keccak256": "0xb8e48bd2c99613a8582425fd151775da1c0fa7fdb3ff84df73c0e3b7dc1bd5e7",
        "urls": [
          "bzz-raw://2f921b45c253bc2740f3d9818195bf163ca45ac414e77d295aecf8af8fe9e953",
          "dweb:/ipfs/QmeMkfywfo1j7jAxKwPK6VC2eXh5dk3FrHdqd71ZWPeuNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/libraries/PoolAddress.sol": {
        "keccak256": "0x534b77e831b66519d1e52c7a21d3329832c21deefa35dec360f7604be2b8d9a2",
        "urls": [
          "bzz-raw://95341ca07dd50acc9b4f881baff9fe7d725d087e4520662abfc3fac2a4ddd16c",
          "dweb:/ipfs/QmP2TfNARc25MVdp2ox3g45EygyrimfifbtB86mH9Yzkes"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/libraries/TransferHelper.sol": {
        "keccak256": "0x325c5a058585f2a1ffe292a82b08fa77bccad9f02830aee1c7e7493189e600b8",
        "urls": [
          "bzz-raw://3c3e1ae87de89ad8b2743b2a9a7f17234cad484fe6caf35321e1ae947ed7a92a",
          "dweb:/ipfs/QmeFixRMxvXBpT6rGrszU7TjDoVbv5HmQYUfecEArAPKRn"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@openzeppelin/contracts/drafts/IERC20Permit.sol": {
        "keccak256": "0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f",
        "urls": [
          "bzz-raw://8c14e8ff1b384bdb68f262669364b1e79fbbd82b85938b7ce788a1395c40c6a2",
          "dweb:/ipfs/QmUKLXfSeEuRUXkeWLBhjHTKeSFoNBCS1RaMXv1AmHXYzn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76",
        "urls": [
          "bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b",
          "dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol": {
        "keccak256": "0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d",
        "urls": [
          "bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37",
          "dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/libraries/SafeCast.sol": {
        "keccak256": "0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8",
        "urls": [
          "bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869",
          "dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x1f864a2bf61ba05f3173eaf2e3f94c5e1da4bec0554757527b6d1ef1fe439e4e",
        "urls": [
          "bzz-raw://5139b586df546a9d1c46804ca400b1cb9ce87236eaf212ebd64edee6747a172a",
          "dweb:/ipfs/QmVa2kcRw3VyuB6j1EVWXACKnkbQZgfXYXNi5voq3XkYG8"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/SwapRouter.sol",
    "id": 37600,
    "exportedSymbols": {
      "BlockTimestamp": [
        41103
      ],
      "BytesLib": [
        44240
      ],
      "CallbackValidation": [
        44302
      ],
      "IERC20": [
        78911
      ],
      "IERC20Permit": [
        77559
      ],
      "IERC20PermitAllowed": [
        43405
      ],
      "IMulticall": [
        42484
      ],
      "IPeripheryImmutableState": [
        42710
      ],
      "IPeripheryPayments": [
        42736
      ],
      "IPeripheryPaymentsWithFee": [
        42769
      ],
      "ISelfPermit": [
        43004
      ],
      "ISwapRouter": [
        43100
      ],
      "IUniswapV3Pool": [
        82573
      ],
      "IUniswapV3PoolActions": [
        82711
      ],
      "IUniswapV3PoolDerivedState": [
        82742
      ],
      "IUniswapV3PoolEvents": [
        82861
      ],
      "IUniswapV3PoolImmutables": [
        82901
      ],
      "IUniswapV3PoolOwnerActions": [
        82927
      ],
      "IUniswapV3PoolState": [
        83035
      ],
      "IUniswapV3SwapCallback": [
        82615
      ],
      "IWETH9": [
        43422
      ],
      "LowGasSafeMath": [
        83686
      ],
      "Multicall": [
        41613
      ],
      "Path": [
        49201
      ],
      "PeripheryImmutableState": [
        41644
      ],
      "PeripheryPayments": [
        41854
      ],
      "PeripheryPaymentsWithFee": [
        42035
      ],
      "PeripheryValidation": [
        42055
      ],
      "PoolAddress": [
        49293
      ],
      "SafeCast": [
        84491
      ],
      "SelfPermit": [
        42314
      ],
      "SwapRouter": [
        37599
      ],
      "TickMath": [
        86250
      ],
      "TransferHelper": [
        52553
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:9669:158",
    "nodes": [
      {
        "id": 36935,
        "nodeType": "PragmaDirective",
        "src": "45:23:158",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ]
      },
      {
        "id": 36936,
        "nodeType": "PragmaDirective",
        "src": "69:19:158",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 36937,
        "nodeType": "ImportDirective",
        "src": "90:59:158",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-core/contracts/libraries/SafeCast.sol",
        "file": "@uniswap/v3-core/contracts/libraries/SafeCast.sol",
        "scope": 37600,
        "sourceUnit": 84492,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36938,
        "nodeType": "ImportDirective",
        "src": "150:59:158",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-core/contracts/libraries/TickMath.sol",
        "file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
        "scope": 37600,
        "sourceUnit": 86251,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36939,
        "nodeType": "ImportDirective",
        "src": "210:66:158",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "scope": 37600,
        "sourceUnit": 82574,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36940,
        "nodeType": "ImportDirective",
        "src": "278:38:158",
        "nodes": [],
        "absolutePath": "contracts/test/interfaces/ISwapRouter.sol",
        "file": "./interfaces/ISwapRouter.sol",
        "scope": 37600,
        "sourceUnit": 43101,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36941,
        "nodeType": "ImportDirective",
        "src": "317:44:158",
        "nodes": [],
        "absolutePath": "contracts/test/base/PeripheryImmutableState.sol",
        "file": "./base/PeripheryImmutableState.sol",
        "scope": 37600,
        "sourceUnit": 41645,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36942,
        "nodeType": "ImportDirective",
        "src": "362:40:158",
        "nodes": [],
        "absolutePath": "contracts/test/base/PeripheryValidation.sol",
        "file": "./base/PeripheryValidation.sol",
        "scope": 37600,
        "sourceUnit": 42056,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36943,
        "nodeType": "ImportDirective",
        "src": "403:45:158",
        "nodes": [],
        "absolutePath": "contracts/test/base/PeripheryPaymentsWithFee.sol",
        "file": "./base/PeripheryPaymentsWithFee.sol",
        "scope": 37600,
        "sourceUnit": 42036,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36944,
        "nodeType": "ImportDirective",
        "src": "449:30:158",
        "nodes": [],
        "absolutePath": "contracts/test/base/Multicall.sol",
        "file": "./base/Multicall.sol",
        "scope": 37600,
        "sourceUnit": 41614,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36945,
        "nodeType": "ImportDirective",
        "src": "480:31:158",
        "nodes": [],
        "absolutePath": "contracts/test/base/SelfPermit.sol",
        "file": "./base/SelfPermit.sol",
        "scope": 37600,
        "sourceUnit": 42315,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36946,
        "nodeType": "ImportDirective",
        "src": "512:30:158",
        "nodes": [],
        "absolutePath": "contracts/test/libraries/Path.sol",
        "file": "./libraries/Path.sol",
        "scope": 37600,
        "sourceUnit": 49202,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36947,
        "nodeType": "ImportDirective",
        "src": "543:37:158",
        "nodes": [],
        "absolutePath": "contracts/test/libraries/PoolAddress.sol",
        "file": "./libraries/PoolAddress.sol",
        "scope": 37600,
        "sourceUnit": 49294,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36948,
        "nodeType": "ImportDirective",
        "src": "581:44:158",
        "nodes": [],
        "absolutePath": "contracts/test/libraries/CallbackValidation.sol",
        "file": "./libraries/CallbackValidation.sol",
        "scope": 37600,
        "sourceUnit": 44303,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36949,
        "nodeType": "ImportDirective",
        "src": "626:42:158",
        "nodes": [],
        "absolutePath": "contracts/test/interfaces/external/IWETH9.sol",
        "file": "./interfaces/external/IWETH9.sol",
        "scope": 37600,
        "sourceUnit": 43423,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37599,
        "nodeType": "ContractDefinition",
        "src": "775:8938:158",
        "nodes": [
          {
            "id": 36965,
            "nodeType": "UsingForDirective",
            "src": "935:21:158",
            "nodes": [],
            "libraryName": {
              "id": 36963,
              "name": "Path",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 49201,
              "src": "941:4:158",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Path_$49201",
                "typeString": "library Path"
              }
            },
            "typeName": {
              "id": 36964,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "950:5:158",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 36968,
            "nodeType": "UsingForDirective",
            "src": "961:27:158",
            "nodes": [],
            "libraryName": {
              "id": 36966,
              "name": "SafeCast",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 84491,
              "src": "967:8:158",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeCast_$84491",
                "typeString": "library SafeCast"
              }
            },
            "typeName": {
              "id": 36967,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "980:7:158",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 36976,
            "nodeType": "VariableDeclaration",
            "src": "1154:69:158",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 36969,
              "nodeType": "StructuredDocumentation",
              "src": "994:155:158",
              "text": "@dev Used as the placeholder value for amountInCached, because the computed amount in for an exact output swap\n can never actually be this value"
            },
            "mutability": "constant",
            "name": "DEFAULT_AMOUNT_IN_CACHED",
            "scope": 37599,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36970,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1154:7:158",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 36973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1211:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 36972,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1211:7:158",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    }
                  ],
                  "id": 36971,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "1206:4:158",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 36974,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1206:13:158",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                  "typeString": "type(uint256)"
                }
              },
              "id": 36975,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "1206:17:158",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 36980,
            "nodeType": "VariableDeclaration",
            "src": "1338:57:158",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 36977,
              "nodeType": "StructuredDocumentation",
              "src": "1230:103:158",
              "text": "@dev Transient storage variable used for returning the computed amount in for an exact output swap."
            },
            "mutability": "mutable",
            "name": "amountInCached",
            "scope": 37599,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36978,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1338:7:158",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "id": 36979,
              "name": "DEFAULT_AMOUNT_IN_CACHED",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36976,
              "src": "1371:24:158",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 36992,
            "nodeType": "FunctionDefinition",
            "src": "1402:102:158",
            "nodes": [],
            "body": {
              "id": 36991,
              "nodeType": "Block",
              "src": "1502:2:158",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 36987,
                    "name": "_factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36982,
                    "src": "1480:8:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 36988,
                    "name": "_WETH9",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36984,
                    "src": "1490:6:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 36989,
                "modifierName": {
                  "id": 36986,
                  "name": "PeripheryImmutableState",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 41644,
                  "src": "1456:23:158",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PeripheryImmutableState_$41644_$",
                    "typeString": "type(contract PeripheryImmutableState)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1456:41:158"
              }
            ],
            "name": "",
            "parameters": {
              "id": 36985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36982,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nodeType": "VariableDeclaration",
                  "scope": 36992,
                  "src": "1414:16:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:7:158",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36984,
                  "mutability": "mutable",
                  "name": "_WETH9",
                  "nodeType": "VariableDeclaration",
                  "scope": 36992,
                  "src": "1432:14:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:7:158",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1413:34:158"
            },
            "returnParameters": {
              "id": 36990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1502:0:158"
            },
            "scope": 37599,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37018,
            "nodeType": "FunctionDefinition",
            "src": "1614:349:158",
            "nodes": [],
            "body": {
              "id": 37017,
              "nodeType": "Block",
              "src": "1743:220:158",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 37007,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41623,
                            "src": "1852:7:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 37010,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36995,
                                "src": "1904:6:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 37011,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36997,
                                "src": "1912:6:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 37012,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36999,
                                "src": "1920:3:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              ],
                              "expression": {
                                "id": 37008,
                                "name": "PoolAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49293,
                                "src": "1881:11:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_PoolAddress_$49293_$",
                                  "typeString": "type(library PoolAddress)"
                                }
                              },
                              "id": 37009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getPoolKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49245,
                              "src": "1881:22:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint24_$returns$_t_struct$_PoolKey_$49214_memory_ptr_$",
                                "typeString": "function (address,address,uint24) pure returns (struct PoolAddress.PoolKey memory)"
                              }
                            },
                            "id": 37013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1881:43:158",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolKey_$49214_memory_ptr",
                              "typeString": "struct PoolAddress.PoolKey memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_struct$_PoolKey_$49214_memory_ptr",
                              "typeString": "struct PoolAddress.PoolKey memory"
                            }
                          ],
                          "expression": {
                            "id": 37005,
                            "name": "PoolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49293,
                            "src": "1804:11:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PoolAddress_$49293_$",
                              "typeString": "type(library PoolAddress)"
                            }
                          },
                          "id": 37006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "computeAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49292,
                          "src": "1804:26:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$49214_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
                          }
                        },
                        "id": 37014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1804:138:158",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37004,
                      "name": "IUniswapV3Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82573,
                      "src": "1772:14:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$82573_$",
                        "typeString": "type(contract IUniswapV3Pool)"
                      }
                    },
                    "id": 37015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:184:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$82573",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "functionReturnParameters": 37003,
                  "id": 37016,
                  "nodeType": "Return",
                  "src": "1753:203:158"
                }
              ]
            },
            "documentation": {
              "id": 36993,
              "nodeType": "StructuredDocumentation",
              "src": "1510:99:158",
              "text": "@dev Returns the pool for the given token pair and fee. The pool contract may or may not exist."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPool",
            "parameters": {
              "id": 37000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36995,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "scope": 37018,
                  "src": "1640:14:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:158",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36997,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "scope": 37018,
                  "src": "1664:14:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:158",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36999,
                  "mutability": "mutable",
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 37018,
                  "src": "1688:10:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 36998,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:6:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1630:74:158"
            },
            "returnParameters": {
              "id": 37003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37002,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37018,
                  "src": "1727:14:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$82573",
                    "typeString": "contract IUniswapV3Pool"
                  },
                  "typeName": {
                    "id": 37001,
                    "name": "IUniswapV3Pool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 82573,
                    "src": "1727:14:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$82573",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1726:16:158"
            },
            "scope": 37599,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 37023,
            "nodeType": "StructDefinition",
            "src": "1969:74:158",
            "nodes": [],
            "canonicalName": "SwapRouter.SwapCallbackData",
            "members": [
              {
                "constant": false,
                "id": 37020,
                "mutability": "mutable",
                "name": "path",
                "nodeType": "VariableDeclaration",
                "scope": 37023,
                "src": "2003:10:158",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 37019,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "2003:5:158",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37022,
                "mutability": "mutable",
                "name": "payer",
                "nodeType": "VariableDeclaration",
                "scope": 37023,
                "src": "2023:13:158",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 37021,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2023:7:158",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapCallbackData",
            "scope": 37599,
            "visibility": "public"
          },
          {
            "id": 37153,
            "nodeType": "FunctionDefinition",
            "src": "2092:1300:158",
            "nodes": [],
            "body": {
              "id": 37152,
              "nodeType": "Block",
              "src": "2235:1157:158",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 37041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 37037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 37035,
                            "name": "amount0Delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37026,
                            "src": "2253:12:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 37036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2268:1:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2253:16:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 37040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 37038,
                            "name": "amount1Delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37028,
                            "src": "2273:12:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 37039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2288:1:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2273:16:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2253:36:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2245:7:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 37042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2245:45:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37043,
                  "nodeType": "ExpressionStatement",
                  "src": "2245:45:158"
                },
                {
                  "assignments": [
                    37045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37045,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 37152,
                      "src": "2363:28:158",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                        "typeString": "struct SwapRouter.SwapCallbackData"
                      },
                      "typeName": {
                        "id": 37044,
                        "name": "SwapCallbackData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 37023,
                        "src": "2363:16:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapCallbackData_$37023_storage_ptr",
                          "typeString": "struct SwapRouter.SwapCallbackData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37052,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37048,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37030,
                        "src": "2405:5:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 37049,
                            "name": "SwapCallbackData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37023,
                            "src": "2413:16:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$37023_storage_ptr_$",
                              "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                            }
                          }
                        ],
                        "id": 37050,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2412:18:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$37023_storage_ptr_$",
                          "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$37023_storage_ptr_$",
                          "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 37046,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2394:3:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 37047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2394:10:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 37051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2394:37:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                      "typeString": "struct SwapRouter.SwapCallbackData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2363:68:158"
                },
                {
                  "assignments": [
                    37054,
                    37056,
                    37058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37054,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nodeType": "VariableDeclaration",
                      "scope": 37152,
                      "src": "2442:15:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37053,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2442:7:158",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37056,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nodeType": "VariableDeclaration",
                      "scope": 37152,
                      "src": "2459:16:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37055,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2459:7:158",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37058,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 37152,
                      "src": "2477:10:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 37057,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "2477:6:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37063,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 37059,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37045,
                          "src": "2491:4:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        },
                        "id": 37060,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "path",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37020,
                        "src": "2491:22:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 37061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeFirstPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49167,
                      "src": "2491:51:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (address,address,uint24)"
                      }
                    },
                    "id": 37062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2491:53:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
                      "typeString": "tuple(address,address,uint24)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2441:103:158"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37067,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41623,
                        "src": "2588:7:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37068,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37054,
                        "src": "2597:7:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37069,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37056,
                        "src": "2606:8:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37070,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37058,
                        "src": "2616:3:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 37064,
                        "name": "CallbackValidation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44302,
                        "src": "2554:18:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CallbackValidation_$44302_$",
                          "typeString": "type(library CallbackValidation)"
                        }
                      },
                      "id": 37066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyCallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44270,
                      "src": "2554:33:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$82573_$",
                        "typeString": "function (address,address,address,uint24) view returns (contract IUniswapV3Pool)"
                      }
                    },
                    "id": 37071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2554:66:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$82573",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "id": 37072,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:66:158"
                },
                {
                  "assignments": [
                    37074,
                    37076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37074,
                      "mutability": "mutable",
                      "name": "isExactInput",
                      "nodeType": "VariableDeclaration",
                      "scope": 37152,
                      "src": "2632:17:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 37073,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2632:4:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37076,
                      "mutability": "mutable",
                      "name": "amountToPay",
                      "nodeType": "VariableDeclaration",
                      "scope": 37152,
                      "src": "2651:19:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37075,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2651:7:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37097,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 37079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 37077,
                        "name": "amount0Delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37026,
                        "src": "2674:12:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 37078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2689:1:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2674:16:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 37090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 37088,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37056,
                            "src": "2764:8:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 37089,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37054,
                            "src": "2775:7:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2764:18:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 37093,
                              "name": "amount1Delta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37028,
                              "src": "2792:12:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 37092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2784:7:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 37091,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2784:7:158",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2784:21:158",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 37095,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2763:43:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256)"
                      }
                    },
                    "id": 37096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2674:132:158",
                    "trueExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 37082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 37080,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37054,
                            "src": "2706:7:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 37081,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37056,
                            "src": "2716:8:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2706:18:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 37085,
                              "name": "amount0Delta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37026,
                              "src": "2734:12:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 37084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2726:7:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 37083,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2726:7:158",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2726:21:158",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 37087,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2705:43:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2631:175:158"
                },
                {
                  "condition": {
                    "id": 37098,
                    "name": "isExactInput",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37074,
                    "src": "2820:12:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 37150,
                    "nodeType": "Block",
                    "src": "2914:472:158",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 37109,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37045,
                                "src": "2984:4:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                                  "typeString": "struct SwapRouter.SwapCallbackData memory"
                                }
                              },
                              "id": 37110,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "path",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37020,
                              "src": "2984:9:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 37111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasMultiplePools",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49115,
                            "src": "2984:26:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (bool)"
                            }
                          },
                          "id": 37112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2984:28:158",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 37148,
                          "nodeType": "Block",
                          "src": "3157:219:158",
                          "statements": [
                            {
                              "expression": {
                                "id": 37133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 37131,
                                  "name": "amountInCached",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36980,
                                  "src": "3175:14:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 37132,
                                  "name": "amountToPay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37076,
                                  "src": "3192:11:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3175:28:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 37134,
                              "nodeType": "ExpressionStatement",
                              "src": "3175:28:158"
                            },
                            {
                              "expression": {
                                "id": 37137,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 37135,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37054,
                                  "src": "3221:7:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 37136,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37056,
                                  "src": "3231:8:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3221:18:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 37138,
                              "nodeType": "ExpressionStatement",
                              "src": "3221:18:158"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 37140,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37054,
                                    "src": "3316:7:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 37141,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 37045,
                                      "src": "3325:4:158",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                                        "typeString": "struct SwapRouter.SwapCallbackData memory"
                                      }
                                    },
                                    "id": 37142,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "payer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 37022,
                                    "src": "3325:10:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 37143,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3337:3:158",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 37144,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3337:10:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 37145,
                                    "name": "amountToPay",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37076,
                                    "src": "3349:11:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 37139,
                                  "name": "pay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41853,
                                  "src": "3312:3:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256)"
                                  }
                                },
                                "id": 37146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3312:49:158",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 37147,
                              "nodeType": "ExpressionStatement",
                              "src": "3312:49:158"
                            }
                          ]
                        },
                        "id": 37149,
                        "nodeType": "IfStatement",
                        "src": "2980:396:158",
                        "trueBody": {
                          "id": 37130,
                          "nodeType": "Block",
                          "src": "3014:137:158",
                          "statements": [
                            {
                              "expression": {
                                "id": 37120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 37113,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37045,
                                    "src": "3032:4:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                                      "typeString": "struct SwapRouter.SwapCallbackData memory"
                                    }
                                  },
                                  "id": 37115,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "path",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37020,
                                  "src": "3032:9:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "expression": {
                                        "id": 37116,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37045,
                                        "src": "3044:4:158",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                                          "typeString": "struct SwapRouter.SwapCallbackData memory"
                                        }
                                      },
                                      "id": 37117,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "path",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 37020,
                                      "src": "3044:9:158",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 37118,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "skipToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 49200,
                                    "src": "3044:19:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 37119,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3044:21:158",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "src": "3032:33:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 37121,
                              "nodeType": "ExpressionStatement",
                              "src": "3032:33:158"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 37123,
                                    "name": "amountToPay",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37076,
                                    "src": "3103:11:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 37124,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3116:3:158",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 37125,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3116:10:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 37126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3128:1:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "id": 37127,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37045,
                                    "src": "3131:4:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                                      "typeString": "struct SwapRouter.SwapCallbackData memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                                      "typeString": "struct SwapRouter.SwapCallbackData memory"
                                    }
                                  ],
                                  "id": 37122,
                                  "name": "exactOutputInternal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37504,
                                  "src": "3083:19:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$37023_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                                  }
                                },
                                "id": 37128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3083:53:158",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 37129,
                              "nodeType": "ExpressionStatement",
                              "src": "3083:53:158"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 37151,
                  "nodeType": "IfStatement",
                  "src": "2816:570:158",
                  "trueBody": {
                    "id": 37108,
                    "nodeType": "Block",
                    "src": "2834:74:158",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37100,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37054,
                              "src": "2852:7:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 37101,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37045,
                                "src": "2861:4:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                                  "typeString": "struct SwapRouter.SwapCallbackData memory"
                                }
                              },
                              "id": 37102,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "payer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37022,
                              "src": "2861:10:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 37103,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2873:3:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 37104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2873:10:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 37105,
                              "name": "amountToPay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37076,
                              "src": "2885:11:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 37099,
                            "name": "pay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41853,
                            "src": "2848:3:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 37106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2848:49:158",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37107,
                        "nodeType": "ExpressionStatement",
                        "src": "2848:49:158"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              82614
            ],
            "documentation": {
              "id": 37024,
              "nodeType": "StructuredDocumentation",
              "src": "2049:38:158",
              "text": "@inheritdoc IUniswapV3SwapCallback"
            },
            "functionSelector": "fa461e33",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV3SwapCallback",
            "overrides": {
              "id": 37032,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2226:8:158"
            },
            "parameters": {
              "id": 37031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37026,
                  "mutability": "mutable",
                  "name": "amount0Delta",
                  "nodeType": "VariableDeclaration",
                  "scope": 37153,
                  "src": "2132:19:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 37025,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:6:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37028,
                  "mutability": "mutable",
                  "name": "amount1Delta",
                  "nodeType": "VariableDeclaration",
                  "scope": 37153,
                  "src": "2161:19:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 37027,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2161:6:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37030,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 37153,
                  "src": "2190:20:158",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37029,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:5:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2122:94:158"
            },
            "returnParameters": {
              "id": 37033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2235:0:158"
            },
            "scope": 37599,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37246,
            "nodeType": "FunctionDefinition",
            "src": "3446:1002:158",
            "nodes": [],
            "body": {
              "id": 37245,
              "nodeType": "Block",
              "src": "3642:806:158",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 37172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37167,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37158,
                      "src": "3719:9:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 37170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3740:1:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 37169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3732:7:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 37168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3732:7:158",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 37171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3732:10:158",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3719:23:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37180,
                  "nodeType": "IfStatement",
                  "src": "3715:54:158",
                  "trueBody": {
                    "expression": {
                      "id": 37178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 37173,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37158,
                        "src": "3744:9:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 37176,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3764:4:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapRouter_$37599",
                              "typeString": "contract SwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapRouter_$37599",
                              "typeString": "contract SwapRouter"
                            }
                          ],
                          "id": 37175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3756:7:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37174,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3756:7:158",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3756:13:158",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "3744:25:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37179,
                    "nodeType": "ExpressionStatement",
                    "src": "3744:25:158"
                  }
                },
                {
                  "assignments": [
                    37182,
                    37184,
                    37186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37182,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nodeType": "VariableDeclaration",
                      "scope": 37245,
                      "src": "3781:15:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37181,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3781:7:158",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37184,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nodeType": "VariableDeclaration",
                      "scope": 37245,
                      "src": "3798:16:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37183,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3798:7:158",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37186,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 37245,
                      "src": "3816:10:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 37185,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3816:6:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37191,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 37187,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37162,
                          "src": "3830:4:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        },
                        "id": 37188,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "path",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37020,
                        "src": "3830:22:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 37189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeFirstPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49167,
                      "src": "3830:51:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (address,address,uint24)"
                      }
                    },
                    "id": 37190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3830:53:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
                      "typeString": "tuple(address,address,uint24)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3780:103:158"
                },
                {
                  "assignments": [
                    37193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37193,
                      "mutability": "mutable",
                      "name": "zeroForOne",
                      "nodeType": "VariableDeclaration",
                      "scope": 37245,
                      "src": "3894:15:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 37192,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3894:4:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37197,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 37196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37194,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37182,
                      "src": "3912:7:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 37195,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37184,
                      "src": "3922:8:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3912:18:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3894:36:158"
                },
                {
                  "assignments": [
                    37199,
                    37201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37199,
                      "mutability": "mutable",
                      "name": "amount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 37245,
                      "src": "3942:14:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 37198,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3942:6:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37201,
                      "mutability": "mutable",
                      "name": "amount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 37245,
                      "src": "3958:14:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 37200,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3958:6:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37234,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37208,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37158,
                        "src": "4026:9:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37209,
                        "name": "zeroForOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37193,
                        "src": "4049:10:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 37210,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37156,
                            "src": "4073:8:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 37211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toInt256",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 84490,
                          "src": "4073:17:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (int256)"
                          }
                        },
                        "id": 37212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4073:19:158",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          "id": 37215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 37213,
                            "name": "sqrtPriceLimitX96",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37160,
                            "src": "4106:17:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 37214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4127:1:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4106:22:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 37227,
                          "name": "sqrtPriceLimitX96",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37160,
                          "src": "4324:17:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "id": 37228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4106:235:158",
                        "trueExpression": {
                          "components": [
                            {
                              "condition": {
                                "id": 37216,
                                "name": "zeroForOne",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37193,
                                "src": "4169:10:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                "id": 37224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 37221,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86250,
                                    "src": "4260:8:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$86250_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 37222,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MAX_SQRT_RATIO",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 85736,
                                  "src": "4260:23:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 37223,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4286:1:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4260:27:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "id": 37225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "4169:118:158",
                              "trueExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                "id": 37220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 37217,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86250,
                                    "src": "4206:8:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$86250_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 37218,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MIN_SQRT_RATIO",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 85732,
                                  "src": "4206:23:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 37219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4232:1:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4206:27:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "id": 37226,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4147:158:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 37231,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37162,
                            "src": "4366:4:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                              "typeString": "struct SwapRouter.SwapCallbackData memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                              "typeString": "struct SwapRouter.SwapCallbackData memory"
                            }
                          ],
                          "expression": {
                            "id": 37229,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4355:3:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 37230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4355:10:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 37232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4355:16:158",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 37203,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37182,
                            "src": "3984:7:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 37204,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37184,
                            "src": "3993:8:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 37205,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37186,
                            "src": "4003:3:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          ],
                          "id": 37202,
                          "name": "getPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37018,
                          "src": "3976:7:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$82573_$",
                            "typeString": "function (address,address,uint24) view returns (contract IUniswapV3Pool)"
                          }
                        },
                        "id": 37206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3976:31:158",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$82573",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 37207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82692,
                      "src": "3976:36:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
                        "typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
                      }
                    },
                    "id": 37233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3976:405:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                      "typeString": "tuple(int256,int256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3941:440:158"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "4407:33:158",
                        "subExpression": {
                          "components": [
                            {
                              "condition": {
                                "id": 37237,
                                "name": "zeroForOne",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37193,
                                "src": "4409:10:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "id": 37239,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37199,
                                "src": "4432:7:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 37240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "4409:30:158",
                              "trueExpression": {
                                "id": 37238,
                                "name": "amount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37201,
                                "src": "4422:7:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "id": 37241,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4408:32:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 37236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4399:7:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 37235,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4399:7:158",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 37243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4399:42:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37166,
                  "id": 37244,
                  "nodeType": "Return",
                  "src": "4392:49:158"
                }
              ]
            },
            "documentation": {
              "id": 37154,
              "nodeType": "StructuredDocumentation",
              "src": "3398:43:158",
              "text": "@dev Performs a single exact input swap"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exactInputInternal",
            "parameters": {
              "id": 37163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37156,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 37246,
                  "src": "3483:16:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3483:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37158,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 37246,
                  "src": "3509:17:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3509:7:158",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37160,
                  "mutability": "mutable",
                  "name": "sqrtPriceLimitX96",
                  "nodeType": "VariableDeclaration",
                  "scope": 37246,
                  "src": "3536:25:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 37159,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "3536:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37162,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 37246,
                  "src": "3571:28:158",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                    "typeString": "struct SwapRouter.SwapCallbackData"
                  },
                  "typeName": {
                    "id": 37161,
                    "name": "SwapCallbackData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 37023,
                    "src": "3571:16:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapCallbackData_$37023_storage_ptr",
                      "typeString": "struct SwapRouter.SwapCallbackData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3473:132:158"
            },
            "returnParameters": {
              "id": 37166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37165,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 37246,
                  "src": "3623:17:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3623:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3622:19:158"
            },
            "scope": 37599,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 37292,
            "nodeType": "FunctionDefinition",
            "src": "4486:671:158",
            "nodes": [],
            "body": {
              "id": 37291,
              "nodeType": "Block",
              "src": "4681:476:158",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37259,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37257,
                      "src": "4691:9:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 37261,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37249,
                            "src": "4735:6:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$43028_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                            }
                          },
                          "id": 37262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountIn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43023,
                          "src": "4735:15:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 37263,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37249,
                            "src": "4764:6:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$43028_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                            }
                          },
                          "id": 37264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43019,
                          "src": "4764:16:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 37265,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37249,
                            "src": "4794:6:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$43028_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                            }
                          },
                          "id": 37266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sqrtPriceLimitX96",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43027,
                          "src": "4794:24:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 37270,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37249,
                                    "src": "4911:6:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$43028_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                                    }
                                  },
                                  "id": 37271,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenIn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43013,
                                  "src": "4911:14:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 37272,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37249,
                                    "src": "4947:6:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$43028_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                                    }
                                  },
                                  "id": 37273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43017,
                                  "src": "4947:10:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 37274,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37249,
                                    "src": "4979:6:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$43028_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                                    }
                                  },
                                  "id": 37275,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenOut",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43015,
                                  "src": "4979:15:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 37268,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4873:3:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 37269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4873:16:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 37276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4873:139:158",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 37277,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5037:3:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 37278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5037:10:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 37267,
                            "name": "SwapCallbackData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37023,
                            "src": "4832:16:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$37023_storage_ptr_$",
                              "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                            }
                          },
                          "id": 37279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "path",
                            "payer"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4832:230:158",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        ],
                        "id": 37260,
                        "name": "exactInputInternal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37246,
                        "src": "4703:18:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$37023_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                        }
                      },
                      "id": 37280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4703:369:158",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4691:381:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37282,
                  "nodeType": "ExpressionStatement",
                  "src": "4691:381:158"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37284,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37257,
                          "src": "5090:9:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 37285,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37249,
                            "src": "5103:6:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$43028_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                            }
                          },
                          "id": 37286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOutMinimum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43025,
                          "src": "5103:23:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5090:36:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206c6974746c65207265636569766564",
                        "id": 37288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5128:21:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f037a9cbca9be03859489f289f0cf5f85c0414bbfdd9785bc7ab31bd734e249c",
                          "typeString": "literal_string \"Too little received\""
                        },
                        "value": "Too little received"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f037a9cbca9be03859489f289f0cf5f85c0414bbfdd9785bc7ab31bd734e249c",
                          "typeString": "literal_string \"Too little received\""
                        }
                      ],
                      "id": 37283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5082:7:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5082:68:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37290,
                  "nodeType": "ExpressionStatement",
                  "src": "5082:68:158"
                }
              ]
            },
            "baseFunctions": [
              43036
            ],
            "documentation": {
              "id": 37247,
              "nodeType": "StructuredDocumentation",
              "src": "4454:27:158",
              "text": "@inheritdoc ISwapRouter"
            },
            "functionSelector": "414bf389",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 37253,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37249,
                      "src": "4624:6:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$43028_calldata_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                      }
                    },
                    "id": 37254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43021,
                    "src": "4624:15:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 37255,
                "modifierName": {
                  "id": 37252,
                  "name": "checkDeadline",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42054,
                  "src": "4610:13:158",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4610:30:158"
              }
            ],
            "name": "exactInputSingle",
            "overrides": {
              "id": 37251,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4593:8:158"
            },
            "parameters": {
              "id": 37250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37249,
                  "mutability": "mutable",
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "scope": 37292,
                  "src": "4512:38:158",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactInputSingleParams_$43028_calldata_ptr",
                    "typeString": "struct ISwapRouter.ExactInputSingleParams"
                  },
                  "typeName": {
                    "id": 37248,
                    "name": "ExactInputSingleParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 43028,
                    "src": "4512:22:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$43028_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4511:40:158"
            },
            "returnParameters": {
              "id": 37258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37257,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 37292,
                  "src": "4658:17:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4658:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4657:19:158"
            },
            "scope": 37599,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37380,
            "nodeType": "FunctionDefinition",
            "src": "5195:1275:158",
            "nodes": [],
            "body": {
              "id": 37379,
              "nodeType": "Block",
              "src": "5376:1094:158",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37306,
                      "mutability": "mutable",
                      "name": "payer",
                      "nodeType": "VariableDeclaration",
                      "scope": 37379,
                      "src": "5386:13:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37305,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5386:7:158",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37309,
                  "initialValue": {
                    "expression": {
                      "id": 37307,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5402:3:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 37308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5402:10:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5386:26:158"
                },
                {
                  "body": {
                    "id": 37369,
                    "nodeType": "Block",
                    "src": "5473:912:158",
                    "statements": [
                      {
                        "assignments": [
                          37312
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 37312,
                            "mutability": "mutable",
                            "name": "hasMultiplePools",
                            "nodeType": "VariableDeclaration",
                            "scope": 37369,
                            "src": "5487:21:158",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 37311,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5487:4:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 37317,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 37313,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37295,
                                "src": "5511:6:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExactInputParams_$43047_memory_ptr",
                                  "typeString": "struct ISwapRouter.ExactInputParams memory"
                                }
                              },
                              "id": 37314,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "path",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43038,
                              "src": "5511:11:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 37315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasMultiplePools",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49115,
                            "src": "5511:28:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (bool)"
                            }
                          },
                          "id": 37316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5511:30:158",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5487:54:158"
                      },
                      {
                        "expression": {
                          "id": 37341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 37318,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37295,
                              "src": "5635:6:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactInputParams_$43047_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactInputParams memory"
                              }
                            },
                            "id": 37320,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amountIn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43044,
                            "src": "5635:15:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 37322,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37295,
                                  "src": "5689:6:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExactInputParams_$43047_memory_ptr",
                                    "typeString": "struct ISwapRouter.ExactInputParams memory"
                                  }
                                },
                                "id": 37323,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amountIn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43044,
                                "src": "5689:15:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "condition": {
                                  "id": 37324,
                                  "name": "hasMultiplePools",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37312,
                                  "src": "5722:16:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "expression": {
                                    "id": 37329,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37295,
                                    "src": "5757:6:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputParams_$43047_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputParams memory"
                                    }
                                  },
                                  "id": 37330,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "recipient",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43040,
                                  "src": "5757:16:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 37331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "5722:51:158",
                                "trueExpression": {
                                  "arguments": [
                                    {
                                      "id": 37327,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5749:4:158",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SwapRouter_$37599",
                                        "typeString": "contract SwapRouter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SwapRouter_$37599",
                                        "typeString": "contract SwapRouter"
                                      }
                                    ],
                                    "id": 37326,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5741:7:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 37325,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5741:7:158",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 37328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5741:13:158",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 37332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5842:1:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "expression": {
                                          "id": 37334,
                                          "name": "params",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37295,
                                          "src": "5906:6:158",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ExactInputParams_$43047_memory_ptr",
                                            "typeString": "struct ISwapRouter.ExactInputParams memory"
                                          }
                                        },
                                        "id": 37335,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "path",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 43038,
                                        "src": "5906:11:158",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 37336,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getFirstPool",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 49182,
                                      "src": "5906:24:158",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 37337,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5906:26:158",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 37338,
                                    "name": "payer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37306,
                                    "src": "6009:5:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 37333,
                                  "name": "SwapCallbackData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37023,
                                  "src": "5861:16:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$37023_storage_ptr_$",
                                    "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                                  }
                                },
                                "id": 37339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [
                                  "path",
                                  "payer"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "5861:172:158",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                                  "typeString": "struct SwapRouter.SwapCallbackData memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                                  "typeString": "struct SwapRouter.SwapCallbackData memory"
                                }
                              ],
                              "id": 37321,
                              "name": "exactInputInternal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37246,
                              "src": "5653:18:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$37023_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                              }
                            },
                            "id": 37340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5653:394:158",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5635:412:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37342,
                        "nodeType": "ExpressionStatement",
                        "src": "5635:412:158"
                      },
                      {
                        "condition": {
                          "id": 37343,
                          "name": "hasMultiplePools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37312,
                          "src": "6121:16:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 37367,
                          "nodeType": "Block",
                          "src": "6292:83:158",
                          "statements": [
                            {
                              "expression": {
                                "id": 37364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 37361,
                                  "name": "amountOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37303,
                                  "src": "6310:9:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 37362,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37295,
                                    "src": "6322:6:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputParams_$43047_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputParams memory"
                                    }
                                  },
                                  "id": 37363,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amountIn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43044,
                                  "src": "6322:15:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6310:27:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 37365,
                              "nodeType": "ExpressionStatement",
                              "src": "6310:27:158"
                            },
                            {
                              "id": 37366,
                              "nodeType": "Break",
                              "src": "6355:5:158"
                            }
                          ]
                        },
                        "id": 37368,
                        "nodeType": "IfStatement",
                        "src": "6117:258:158",
                        "trueBody": {
                          "id": 37360,
                          "nodeType": "Block",
                          "src": "6139:147:158",
                          "statements": [
                            {
                              "expression": {
                                "id": 37349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 37344,
                                  "name": "payer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37306,
                                  "src": "6157:5:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 37347,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "6173:4:158",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SwapRouter_$37599",
                                        "typeString": "contract SwapRouter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SwapRouter_$37599",
                                        "typeString": "contract SwapRouter"
                                      }
                                    ],
                                    "id": 37346,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6165:7:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 37345,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6165:7:158",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 37348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6165:13:158",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "6157:21:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 37350,
                              "nodeType": "ExpressionStatement",
                              "src": "6157:21:158"
                            },
                            {
                              "expression": {
                                "id": 37358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 37351,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37295,
                                    "src": "6234:6:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputParams_$43047_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputParams memory"
                                    }
                                  },
                                  "id": 37353,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "path",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43038,
                                  "src": "6234:11:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "expression": {
                                        "id": 37354,
                                        "name": "params",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37295,
                                        "src": "6248:6:158",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ExactInputParams_$43047_memory_ptr",
                                          "typeString": "struct ISwapRouter.ExactInputParams memory"
                                        }
                                      },
                                      "id": 37355,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "path",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 43038,
                                      "src": "6248:11:158",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 37356,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "skipToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 49200,
                                    "src": "6248:21:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 37357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6248:23:158",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "src": "6234:37:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 37359,
                              "nodeType": "ExpressionStatement",
                              "src": "6234:37:158"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "hexValue": "74727565",
                    "id": 37310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5467:4:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "id": 37370,
                  "nodeType": "WhileStatement",
                  "src": "5460:925:158"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37372,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37303,
                          "src": "6403:9:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 37373,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37295,
                            "src": "6416:6:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputParams_$43047_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputParams memory"
                            }
                          },
                          "id": 37374,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOutMinimum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43046,
                          "src": "6416:23:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6403:36:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206c6974746c65207265636569766564",
                        "id": 37376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6441:21:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f037a9cbca9be03859489f289f0cf5f85c0414bbfdd9785bc7ab31bd734e249c",
                          "typeString": "literal_string \"Too little received\""
                        },
                        "value": "Too little received"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f037a9cbca9be03859489f289f0cf5f85c0414bbfdd9785bc7ab31bd734e249c",
                          "typeString": "literal_string \"Too little received\""
                        }
                      ],
                      "id": 37371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6395:7:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6395:68:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37378,
                  "nodeType": "ExpressionStatement",
                  "src": "6395:68:158"
                }
              ]
            },
            "baseFunctions": [
              43055
            ],
            "documentation": {
              "id": 37293,
              "nodeType": "StructuredDocumentation",
              "src": "5163:27:158",
              "text": "@inheritdoc ISwapRouter"
            },
            "functionSelector": "c04b8d59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 37299,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37295,
                      "src": "5319:6:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputParams_$43047_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputParams memory"
                      }
                    },
                    "id": 37300,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43042,
                    "src": "5319:15:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 37301,
                "modifierName": {
                  "id": 37298,
                  "name": "checkDeadline",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42054,
                  "src": "5305:13:158",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5305:30:158"
              }
            ],
            "name": "exactInput",
            "overrides": {
              "id": 37297,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5288:8:158"
            },
            "parameters": {
              "id": 37296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37295,
                  "mutability": "mutable",
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "scope": 37380,
                  "src": "5215:30:158",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactInputParams_$43047_memory_ptr",
                    "typeString": "struct ISwapRouter.ExactInputParams"
                  },
                  "typeName": {
                    "id": 37294,
                    "name": "ExactInputParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 43047,
                    "src": "5215:16:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputParams_$43047_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactInputParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5214:32:158"
            },
            "returnParameters": {
              "id": 37304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37303,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 37380,
                  "src": "5353:17:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5353:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5352:19:158"
            },
            "scope": 37599,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37504,
            "nodeType": "FunctionDefinition",
            "src": "6525:1496:158",
            "nodes": [],
            "body": {
              "id": 37503,
              "nodeType": "Block",
              "src": "6722:1299:158",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 37399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37394,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37385,
                      "src": "6799:9:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 37397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6820:1:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 37396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6812:7:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 37395,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6812:7:158",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 37398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6812:10:158",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6799:23:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37407,
                  "nodeType": "IfStatement",
                  "src": "6795:54:158",
                  "trueBody": {
                    "expression": {
                      "id": 37405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 37400,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37385,
                        "src": "6824:9:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 37403,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6844:4:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapRouter_$37599",
                              "typeString": "contract SwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapRouter_$37599",
                              "typeString": "contract SwapRouter"
                            }
                          ],
                          "id": 37402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6836:7:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37401,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6836:7:158",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6836:13:158",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "6824:25:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37406,
                    "nodeType": "ExpressionStatement",
                    "src": "6824:25:158"
                  }
                },
                {
                  "assignments": [
                    37409,
                    37411,
                    37413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37409,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nodeType": "VariableDeclaration",
                      "scope": 37503,
                      "src": "6861:16:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37408,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6861:7:158",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37411,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nodeType": "VariableDeclaration",
                      "scope": 37503,
                      "src": "6879:15:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37410,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6879:7:158",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37413,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 37503,
                      "src": "6896:10:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 37412,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "6896:6:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37418,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 37414,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37389,
                          "src": "6910:4:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        },
                        "id": 37415,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "path",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37020,
                        "src": "6910:22:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 37416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeFirstPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49167,
                      "src": "6910:51:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (address,address,uint24)"
                      }
                    },
                    "id": 37417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6910:53:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
                      "typeString": "tuple(address,address,uint24)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6860:103:158"
                },
                {
                  "assignments": [
                    37420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37420,
                      "mutability": "mutable",
                      "name": "zeroForOne",
                      "nodeType": "VariableDeclaration",
                      "scope": 37503,
                      "src": "6974:15:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 37419,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6974:4:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37424,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 37423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37421,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37411,
                      "src": "6992:7:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 37422,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37409,
                      "src": "7002:8:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6992:18:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6974:36:158"
                },
                {
                  "assignments": [
                    37426,
                    37428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37426,
                      "mutability": "mutable",
                      "name": "amount0Delta",
                      "nodeType": "VariableDeclaration",
                      "scope": 37503,
                      "src": "7022:19:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 37425,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7022:6:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37428,
                      "mutability": "mutable",
                      "name": "amount1Delta",
                      "nodeType": "VariableDeclaration",
                      "scope": 37503,
                      "src": "7043:19:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 37427,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7043:6:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37462,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37435,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37385,
                        "src": "7166:9:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37436,
                        "name": "zeroForOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37420,
                        "src": "7193:10:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 37440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "7221:21:158",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 37437,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37383,
                              "src": "7222:9:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 37438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "toInt256",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 84490,
                            "src": "7222:18:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (int256)"
                            }
                          },
                          "id": 37439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7222:20:158",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          "id": 37443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 37441,
                            "name": "sqrtPriceLimitX96",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37387,
                            "src": "7260:17:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 37442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7281:1:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7260:22:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 37455,
                          "name": "sqrtPriceLimitX96",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37387,
                          "src": "7502:17:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "id": 37456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "7260:259:158",
                        "trueExpression": {
                          "components": [
                            {
                              "condition": {
                                "id": 37444,
                                "name": "zeroForOne",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37420,
                                "src": "7331:10:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                "id": 37452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 37449,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86250,
                                    "src": "7430:8:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$86250_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 37450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MAX_SQRT_RATIO",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 85736,
                                  "src": "7430:23:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 37451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7456:1:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7430:27:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "id": 37453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "7331:126:158",
                              "trueExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                "id": 37448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 37445,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86250,
                                    "src": "7372:8:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$86250_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 37446,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MIN_SQRT_RATIO",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 85732,
                                  "src": "7372:23:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 37447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7398:1:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7372:27:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "id": 37454,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7305:174:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 37459,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37389,
                            "src": "7548:4:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                              "typeString": "struct SwapRouter.SwapCallbackData memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                              "typeString": "struct SwapRouter.SwapCallbackData memory"
                            }
                          ],
                          "expression": {
                            "id": 37457,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7537:3:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 37458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7537:10:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 37460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7537:16:158",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 37430,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37411,
                            "src": "7087:7:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 37431,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37409,
                            "src": "7108:8:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 37432,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37413,
                            "src": "7130:3:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          ],
                          "id": 37429,
                          "name": "getPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37018,
                          "src": "7066:7:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$82573_$",
                            "typeString": "function (address,address,uint24) view returns (contract IUniswapV3Pool)"
                          }
                        },
                        "id": 37433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7066:77:158",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$82573",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 37434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82692,
                      "src": "7066:82:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
                        "typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
                      }
                    },
                    "id": 37461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7066:501:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                      "typeString": "tuple(int256,int256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7021:546:158"
                },
                {
                  "assignments": [
                    37464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37464,
                      "mutability": "mutable",
                      "name": "amountOutReceived",
                      "nodeType": "VariableDeclaration",
                      "scope": 37503,
                      "src": "7578:25:158",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37463,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7578:7:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37465,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7578:25:158"
                },
                {
                  "expression": {
                    "id": 37491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 37466,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37392,
                          "src": "7614:8:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 37467,
                          "name": "amountOutReceived",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37464,
                          "src": "7624:17:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 37468,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7613:29:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "id": 37469,
                        "name": "zeroForOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37420,
                        "src": "7645:10:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "id": 37482,
                                "name": "amount1Delta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37428,
                                "src": "7741:12:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 37481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7733:7:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 37480,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7733:7:158",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 37483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7733:21:158",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 37487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "7764:13:158",
                                "subExpression": {
                                  "id": 37486,
                                  "name": "amount0Delta",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37426,
                                  "src": "7765:12:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 37485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7756:7:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 37484,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7756:7:158",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 37488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7756:22:158",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 37489,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7732:47:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "id": 37490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "7645:134:158",
                      "trueExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "id": 37472,
                                "name": "amount0Delta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37426,
                                "src": "7679:12:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 37471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7671:7:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 37470,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7671:7:158",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 37473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7671:21:158",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 37477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "7702:13:158",
                                "subExpression": {
                                  "id": 37476,
                                  "name": "amount1Delta",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37428,
                                  "src": "7703:12:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 37475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7694:7:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 37474,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7694:7:158",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 37478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7694:22:158",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 37479,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7670:47:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "7613:166:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37492,
                  "nodeType": "ExpressionStatement",
                  "src": "7613:166:158"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    },
                    "id": 37495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37493,
                      "name": "sqrtPriceLimitX96",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37387,
                      "src": "7951:17:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 37494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7972:1:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7951:22:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37502,
                  "nodeType": "IfStatement",
                  "src": "7947:67:158",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 37497,
                            "name": "amountOutReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37464,
                            "src": "7983:17:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 37498,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37383,
                            "src": "8004:9:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7983:30:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 37496,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "7975:7:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                          "typeString": "function (bool) pure"
                        }
                      },
                      "id": 37500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7975:39:158",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 37501,
                    "nodeType": "ExpressionStatement",
                    "src": "7975:39:158"
                  }
                }
              ]
            },
            "documentation": {
              "id": 37381,
              "nodeType": "StructuredDocumentation",
              "src": "6476:44:158",
              "text": "@dev Performs a single exact output swap"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exactOutputInternal",
            "parameters": {
              "id": 37390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37383,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 37504,
                  "src": "6563:17:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6563:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37385,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 37504,
                  "src": "6590:17:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6590:7:158",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37387,
                  "mutability": "mutable",
                  "name": "sqrtPriceLimitX96",
                  "nodeType": "VariableDeclaration",
                  "scope": 37504,
                  "src": "6617:25:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 37386,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "6617:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37389,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 37504,
                  "src": "6652:28:158",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                    "typeString": "struct SwapRouter.SwapCallbackData"
                  },
                  "typeName": {
                    "id": 37388,
                    "name": "SwapCallbackData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 37023,
                    "src": "6652:16:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapCallbackData_$37023_storage_ptr",
                      "typeString": "struct SwapRouter.SwapCallbackData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6553:133:158"
            },
            "returnParameters": {
              "id": 37393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37392,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 37504,
                  "src": "6704:16:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6704:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6703:18:158"
            },
            "scope": 37599,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 37554,
            "nodeType": "FunctionDefinition",
            "src": "8059:856:158",
            "nodes": [],
            "body": {
              "id": 37553,
              "nodeType": "Block",
              "src": "8255:660:158",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37517,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37515,
                      "src": "8321:8:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 37519,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37507,
                            "src": "8365:6:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$43072_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                            }
                          },
                          "id": 37520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43067,
                          "src": "8365:16:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 37521,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37507,
                            "src": "8395:6:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$43072_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                            }
                          },
                          "id": 37522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43063,
                          "src": "8395:16:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 37523,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37507,
                            "src": "8425:6:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$43072_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                            }
                          },
                          "id": 37524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sqrtPriceLimitX96",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43071,
                          "src": "8425:24:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 37528,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37507,
                                    "src": "8542:6:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$43072_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                                    }
                                  },
                                  "id": 37529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenOut",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43059,
                                  "src": "8542:15:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 37530,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37507,
                                    "src": "8579:6:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$43072_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                                    }
                                  },
                                  "id": 37531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43061,
                                  "src": "8579:10:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 37532,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37507,
                                    "src": "8611:6:158",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$43072_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                                    }
                                  },
                                  "id": 37533,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenIn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43057,
                                  "src": "8611:14:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 37526,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8504:3:158",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 37527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8504:16:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 37534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8504:139:158",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 37535,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8668:3:158",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 37536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8668:10:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 37525,
                            "name": "SwapCallbackData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37023,
                            "src": "8463:16:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$37023_storage_ptr_$",
                              "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                            }
                          },
                          "id": 37537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "path",
                            "payer"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "8463:230:158",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        ],
                        "id": 37518,
                        "name": "exactOutputInternal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37504,
                        "src": "8332:19:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$37023_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                        }
                      },
                      "id": 37538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8332:371:158",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8321:382:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37540,
                  "nodeType": "ExpressionStatement",
                  "src": "8321:382:158"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37542,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37515,
                          "src": "8722:8:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 37543,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37507,
                            "src": "8734:6:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$43072_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                            }
                          },
                          "id": 37544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountInMaximum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43069,
                          "src": "8734:22:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8722:34:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206d75636820726571756573746564",
                        "id": 37546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8758:20:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5c1362ddf12293b907d8907d79f16e40792a7ddc4f09ee6d70cfec4ad443305",
                          "typeString": "literal_string \"Too much requested\""
                        },
                        "value": "Too much requested"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5c1362ddf12293b907d8907d79f16e40792a7ddc4f09ee6d70cfec4ad443305",
                          "typeString": "literal_string \"Too much requested\""
                        }
                      ],
                      "id": 37541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8714:7:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8714:65:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37548,
                  "nodeType": "ExpressionStatement",
                  "src": "8714:65:158"
                },
                {
                  "expression": {
                    "id": 37551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37549,
                      "name": "amountInCached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36980,
                      "src": "8867:14:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37550,
                      "name": "DEFAULT_AMOUNT_IN_CACHED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36976,
                      "src": "8884:24:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8867:41:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37552,
                  "nodeType": "ExpressionStatement",
                  "src": "8867:41:158"
                }
              ]
            },
            "baseFunctions": [
              43080
            ],
            "documentation": {
              "id": 37505,
              "nodeType": "StructuredDocumentation",
              "src": "8027:27:158",
              "text": "@inheritdoc ISwapRouter"
            },
            "functionSelector": "db3e2198",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 37511,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37507,
                      "src": "8199:6:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactOutputSingleParams_$43072_calldata_ptr",
                        "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                      }
                    },
                    "id": 37512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43065,
                    "src": "8199:15:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 37513,
                "modifierName": {
                  "id": 37510,
                  "name": "checkDeadline",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42054,
                  "src": "8185:13:158",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8185:30:158"
              }
            ],
            "name": "exactOutputSingle",
            "overrides": {
              "id": 37509,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8168:8:158"
            },
            "parameters": {
              "id": 37508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37507,
                  "mutability": "mutable",
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "scope": 37554,
                  "src": "8086:39:158",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactOutputSingleParams_$43072_calldata_ptr",
                    "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                  },
                  "typeName": {
                    "id": 37506,
                    "name": "ExactOutputSingleParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 43072,
                    "src": "8086:23:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$43072_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8085:41:158"
            },
            "returnParameters": {
              "id": 37516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37515,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 37554,
                  "src": "8233:16:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8233:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8232:18:158"
            },
            "scope": 37599,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37598,
            "nodeType": "FunctionDefinition",
            "src": "8953:758:158",
            "nodes": [],
            "body": {
              "id": 37597,
              "nodeType": "Block",
              "src": "9137:574:158",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37568,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37557,
                          "src": "9399:6:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputParams_$43091_calldata_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                          }
                        },
                        "id": 37569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43088,
                        "src": "9399:16:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 37570,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37557,
                          "src": "9429:6:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputParams_$43091_calldata_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                          }
                        },
                        "id": 37571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43084,
                        "src": "9429:16:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 37572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9459:1:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 37574,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37557,
                              "src": "9499:6:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactOutputParams_$43091_calldata_ptr",
                                "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                              }
                            },
                            "id": 37575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "path",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43082,
                            "src": "9499:11:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 37576,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9519:3:158",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 37577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9519:10:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 37573,
                          "name": "SwapCallbackData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37023,
                          "src": "9474:16:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$37023_storage_ptr_$",
                            "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                          }
                        },
                        "id": 37578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "path",
                          "payer"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "9474:58:158",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                          "typeString": "struct SwapRouter.SwapCallbackData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_struct$_SwapCallbackData_$37023_memory_ptr",
                          "typeString": "struct SwapRouter.SwapCallbackData memory"
                        }
                      ],
                      "id": 37567,
                      "name": "exactOutputInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37504,
                      "src": "9366:19:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$37023_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                      }
                    },
                    "id": 37579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9366:176:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37580,
                  "nodeType": "ExpressionStatement",
                  "src": "9366:176:158"
                },
                {
                  "expression": {
                    "id": 37583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37581,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37565,
                      "src": "9553:8:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37582,
                      "name": "amountInCached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36980,
                      "src": "9564:14:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9553:25:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37584,
                  "nodeType": "ExpressionStatement",
                  "src": "9553:25:158"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37586,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37565,
                          "src": "9596:8:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 37587,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37557,
                            "src": "9608:6:158",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputParams_$43091_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                            }
                          },
                          "id": 37588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountInMaximum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43090,
                          "src": "9608:22:158",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9596:34:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206d75636820726571756573746564",
                        "id": 37590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9632:20:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5c1362ddf12293b907d8907d79f16e40792a7ddc4f09ee6d70cfec4ad443305",
                          "typeString": "literal_string \"Too much requested\""
                        },
                        "value": "Too much requested"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5c1362ddf12293b907d8907d79f16e40792a7ddc4f09ee6d70cfec4ad443305",
                          "typeString": "literal_string \"Too much requested\""
                        }
                      ],
                      "id": 37585,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9588:7:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9588:65:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37592,
                  "nodeType": "ExpressionStatement",
                  "src": "9588:65:158"
                },
                {
                  "expression": {
                    "id": 37595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37593,
                      "name": "amountInCached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36980,
                      "src": "9663:14:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37594,
                      "name": "DEFAULT_AMOUNT_IN_CACHED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36976,
                      "src": "9680:24:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9663:41:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37596,
                  "nodeType": "ExpressionStatement",
                  "src": "9663:41:158"
                }
              ]
            },
            "baseFunctions": [
              43099
            ],
            "documentation": {
              "id": 37555,
              "nodeType": "StructuredDocumentation",
              "src": "8921:27:158",
              "text": "@inheritdoc ISwapRouter"
            },
            "functionSelector": "f28c0498",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 37561,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37557,
                      "src": "9081:6:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactOutputParams_$43091_calldata_ptr",
                        "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                      }
                    },
                    "id": 37562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43086,
                    "src": "9081:15:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 37563,
                "modifierName": {
                  "id": 37560,
                  "name": "checkDeadline",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42054,
                  "src": "9067:13:158",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9067:30:158"
              }
            ],
            "name": "exactOutput",
            "overrides": {
              "id": 37559,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9050:8:158"
            },
            "parameters": {
              "id": 37558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37557,
                  "mutability": "mutable",
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "scope": 37598,
                  "src": "8974:33:158",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactOutputParams_$43091_calldata_ptr",
                    "typeString": "struct ISwapRouter.ExactOutputParams"
                  },
                  "typeName": {
                    "id": 37556,
                    "name": "ExactOutputParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 43091,
                    "src": "8974:17:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactOutputParams_$43091_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactOutputParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8973:35:158"
            },
            "returnParameters": {
              "id": 37566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37565,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 37598,
                  "src": "9115:16:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9115:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9114:18:158"
            },
            "scope": 37599,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36951,
              "name": "ISwapRouter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 43100,
              "src": "802:11:158",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$43100",
                "typeString": "contract ISwapRouter"
              }
            },
            "id": 36952,
            "nodeType": "InheritanceSpecifier",
            "src": "802:11:158"
          },
          {
            "baseName": {
              "id": 36953,
              "name": "PeripheryImmutableState",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 41644,
              "src": "819:23:158",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PeripheryImmutableState_$41644",
                "typeString": "contract PeripheryImmutableState"
              }
            },
            "id": 36954,
            "nodeType": "InheritanceSpecifier",
            "src": "819:23:158"
          },
          {
            "baseName": {
              "id": 36955,
              "name": "PeripheryValidation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 42055,
              "src": "848:19:158",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PeripheryValidation_$42055",
                "typeString": "contract PeripheryValidation"
              }
            },
            "id": 36956,
            "nodeType": "InheritanceSpecifier",
            "src": "848:19:158"
          },
          {
            "baseName": {
              "id": 36957,
              "name": "PeripheryPaymentsWithFee",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 42035,
              "src": "873:24:158",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PeripheryPaymentsWithFee_$42035",
                "typeString": "contract PeripheryPaymentsWithFee"
              }
            },
            "id": 36958,
            "nodeType": "InheritanceSpecifier",
            "src": "873:24:158"
          },
          {
            "baseName": {
              "id": 36959,
              "name": "Multicall",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 41613,
              "src": "903:9:158",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Multicall_$41613",
                "typeString": "contract Multicall"
              }
            },
            "id": 36960,
            "nodeType": "InheritanceSpecifier",
            "src": "903:9:158"
          },
          {
            "baseName": {
              "id": 36961,
              "name": "SelfPermit",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 42314,
              "src": "918:10:158",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SelfPermit_$42314",
                "typeString": "contract SelfPermit"
              }
            },
            "id": 36962,
            "nodeType": "InheritanceSpecifier",
            "src": "918:10:158"
          }
        ],
        "contractDependencies": [
          41103,
          41613,
          41644,
          41854,
          42035,
          42055,
          42314,
          42484,
          42710,
          42736,
          42769,
          43004,
          43100,
          82615
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 36950,
          "nodeType": "StructuredDocumentation",
          "src": "670:105:158",
          "text": "@title Uniswap V3 Swap Router\n @notice Router for stateless execution of swaps against Uniswap V3"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37599,
          42314,
          43004,
          41613,
          42484,
          42035,
          42769,
          41854,
          42055,
          41644,
          42710,
          42736,
          41103,
          43100,
          82615
        ],
        "name": "SwapRouter",
        "scope": 37600
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 158
}