/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UniStrategy, UniStrategyInterface } from "../UniStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int24",
        name: "oldBaseTicks",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "newBaseTicks",
        type: "int24",
      },
    ],
    name: "BaseTicksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldGovernance",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newGovernance",
        type: "address",
      },
    ],
    name: "GovernanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int24",
        name: "oldDeviation",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "newDeviation",
        type: "int24",
      },
    ],
    name: "MaxTwapDeviationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int24",
        name: "oldRangeTicks",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "newRangeTicks",
        type: "int24",
      },
    ],
    name: "RangeTicksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int24",
        name: "oldMultiplier",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "newMultiplier",
        type: "int24",
      },
    ],
    name: "ReadjustMultiplierUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "baseThreshold",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "rangeThreshold",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "maxTwapDeviation",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "readjustThreshold",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "twapDuration",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IUniStrategy.PoolStrategy",
        name: "oldStrategy",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "baseThreshold",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "rangeThreshold",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "maxTwapDeviation",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "readjustThreshold",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "twapDuration",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IUniStrategy.PoolStrategy",
        name: "newStrategy",
        type: "tuple",
      },
    ],
    name: "StrategyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "oldDuration",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newDuration",
        type: "uint32",
      },
    ],
    name: "TwapDurationUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "baseTicks",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "baseThreshold",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "rangeThreshold",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "maxTwapDeviation",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "readjustThreshold",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "twapDuration",
            type: "uint32",
          },
        ],
        internalType: "struct IUniStrategy.PoolStrategy",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "changeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "getReadjustThreshold",
    outputs: [
      {
        internalType: "int24",
        name: "readjustThreshold",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "getStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "baseThreshold",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "rangeThreshold",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "maxTwapDeviation",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "readjustThreshold",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "twapDuration",
            type: "uint32",
          },
        ],
        internalType: "struct IUniStrategy.PoolStrategy",
        name: "strategy",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "getTicks",
    outputs: [
      {
        internalType: "int24",
        name: "baseLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "baseUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "bidLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "bidUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "askLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "askUpper",
        type: "int24",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "getTwap",
    outputs: [
      {
        internalType: "int24",
        name: "twap",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rangeTicks",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "baseThreshold",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "rangeThreshold",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "maxTwapDeviation",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "readjustThreshold",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "twapDuration",
            type: "uint32",
          },
        ],
        internalType: "struct IUniStrategy.PoolStrategy[]",
        name: "params",
        type: "tuple[]",
      },
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
    ],
    name: "setAllStrategies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "_baseTicks",
        type: "int24",
      },
    ],
    name: "setBaseTicks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "_twapDeviation",
        type: "int24",
      },
    ],
    name: "setMaxTwapDeviation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pools",
        type: "address[]",
      },
      {
        internalType: "int24[]",
        name: "_twapDeviations",
        type: "int24[]",
      },
    ],
    name: "setPoolTwapDeviation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "_rangeTicks",
        type: "int24",
      },
    ],
    name: "setRangeTicks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "_readjustMultipier",
        type: "int24",
      },
    ],
    name: "setReadjustMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_twapDuration",
        type: "uint32",
      },
    ],
    name: "setTwapDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unipilot",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_unipilot",
        type: "address",
      },
    ],
    name: "updateUnipilotAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002599380380620025998339810160408190526200003491620000b2565b600080546001600160a01b0319166001600160a01b039290921691909117905560018054600280546001600160e81b03909216604b60ea1b1762ffffff60a01b191660e160a31b1762ffffff60b81b191660e160bb1b17909255600a66ffffffff00000019909116640e100000001762ffffff1916179055620000e2565b600060208284031215620000c4578081fd5b81516001600160a01b0381168114620000db578182fd5b9392505050565b6124a780620000f26000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063ab033ea9116100b2578063ce7a671811610081578063dab62a2f11610066578063dab62a2f1461026e578063f8806a1314610281578063fd0679e9146102a157610136565b8063ce7a671814610253578063d4f9b7a71461025b57610136565b8063ab033ea914610207578063ab24f5261461021a578063b7ab92e81461022d578063c433c80a1461024057610136565b80633d47d227116101095780635aa6e675116100ee5780635aa6e675146101ba578063802036f5146101cf57806387745a11146101f457610136565b80633d47d227146101945780634ed8cf27146101a757610136565b80631ca6aede1461013b5780632b56a9c3146101595780632f09a2041461016e5780633cbff3fe14610181575b600080fd5b6101436102a9565b6040516101509190612235565b60405180910390f35b61016c610167366004611e6e565b6102b9565b005b61016c61017c366004612018565b610341565b61016c61018f366004612018565b61040b565b6101436101a2366004611e6e565b6104a4565b6101436101b5366004611e6e565b610631565b6101c2610656565b6040516101509190612207565b6101e26101dd366004611e6e565b610665565b60405161015096959493929190612257565b61016c610202366004611f53565b610a2f565b61016c610215366004611e6e565b610a78565b61016c610228366004611e91565b610b3e565b61016c61023b366004612018565b610bed565b61016c61024e366004612148565b610cac565b6101c2610d2f565b61016c610269366004612018565b610d3e565b61016c61027c366004612050565b610dd4565b61029461028f366004611e6e565b611032565b604051610150919061238e565b6101436110bf565b600154600160a01b900460020b81565b6000546001600160a01b031633146102ec5760405162461bcd60e51b81526004016102e390612339565b60405180910390fd5b6001600160a01b0381166103125760405162461bcd60e51b81526004016102e3906122c6565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461036b5760405162461bcd60e51b81526004016102e390612339565b60008160020b1361038e5760405162461bcd60e51b81526004016102e39061231c565b60018054600283810b62ffffff16600160b81b9081027fffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffff8416179093556040517f2114dba336720f7286243079d3990bc2a951a7d7562b85648edd940c52fe35f693610400930490910b908490612243565b60405180910390a150565b6000546001600160a01b031633146104355760405162461bcd60e51b81526004016102e390612339565b60018054600283810b62ffffff16600160e81b9081027cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8416179093556040517fb32bf5279c25f60e729f297567e5882813fe72a29dec91009962465b6a98a15f93610400930490910b908490612243565b600080829050600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156104e657600080fd5b505afa1580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e91906120b7565b5050509350935050506000836001600160a01b031663252c09d78361ffff168560010161ffff168161054c57fe5b066040518263ffffffff1660e01b815260040161056991906123f9565b60806040518083038186803b15801561058157600080fd5b505afa158015610595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b99190612164565b5050506001600160a01b0387166000908152600360205260409020549091504282900390600160601b900463ffffffff168061060157506002546301000000900463ffffffff165b610625888263ffffffff168463ffffffff161161061e5783610620565b825b6110cf565b98975050505050505050565b6001600160a01b0316600090815260036020526040902054600160481b900460020b90565b6000546001600160a01b031681565b60008060008060008060008061067a896113cf565b6001600160a01b038b166000908152600360205260409020549193509150600290810b900b6107fe576001546000906106bd90600160b81b900460020b836114cc565b90506040518060a001604052808260020b81526020016106ec600160149054906101000a900460020b856114cc565b600290810b8252600154600160e81b9004810b810b6020830152805460409092019160649190810b8502900b05600290810b8252805463ffffffff63010000009182900481166020948501526001600160a01b038f166000908152600385526040908190208651815496880151928801516060890151608090990151909416600160601b026fffffffff0000000000000000000000001998870b62ffffff908116600160481b026bffffff0000000000000000001996890b821666010000000000000268ffffff00000000000019968a0b831690980265ffffff000000199490990b90911662ffffff199099169890981791909116959095179190911692909217169290921792909216919091179055505b6001600160a01b03891660009081526003602052604081208054600180547fffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffff16600160d01b62ffffff6301000000909404600290810b810b94909416810291909117918290559254929004810b810b91810b900b1361088957600154600160d01b900460020b6108a6565b6001600160a01b038a1660009081526003602052604090205460020b5b90508181620d89e719010160020b8360020b1380156108d557508181620d89e719600003030360020b8360020b125b6108f15760405162461bcd60e51b81526004016102e390612355565b60006108fc8b61151a565b905060008160020b8560020b1361091557848203610919565b8185035b6001600160a01b038d1660009081526003602052604090205490915066010000000000009004600290810b810b9082900b13156109685760405162461bcd60e51b81526004016102e3906122ff565b600061097486866114cc565b905060008582019050600360008f6001600160a01b03166001600160a01b0316815260200190815260200160002060000160009054906101000a900460020b82039c50600360008f6001600160a01b03166001600160a01b0316815260200190815260200160002060000160009054906101000a900460020b82019b506001601a9054906101000a900460020b82039a508199508098506001601a9054906101000a900460020b810197505050505050505091939550919395565b60005b8251811015610a7357610a6b838281518110610a4a57fe5b6020026020010151838381518110610a5e57fe5b6020026020010151610dd4565b600101610a32565b505050565b6000546001600160a01b03163314610aa25760405162461bcd60e51b81526004016102e390612339565b6001600160a01b038116610ac85760405162461bcd60e51b81526004016102e3906122e2565b6000546040517f434a2db650703b36c824e745330d6397cdaa9ee2cc891a4938ae853e1c50b68d91610b07916001600160a01b0390911690849061221b565b60405180910390a16000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610b685760405162461bcd60e51b81526004016102e390612339565b60005b8251811015610a7357818181518110610b8057fe5b602002602001015160036000858481518110610b9857fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460029290920b62ffffff1666010000000000000268ffffff00000000000019909216919091179055600101610b6b565b6000546001600160a01b03163314610c175760405162461bcd60e51b81526004016102e390612339565b60008160020b13610c3a5760405162461bcd60e51b81526004016102e390612371565b60018054600283810b62ffffff16600160a01b9081027fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff8416179093556040517f5d57c30988c079327c7a2866b4ec81c1eb83dca7d6ecd954093458c50034c93893610400930490910b908490612243565b6000546001600160a01b03163314610cd65760405162461bcd60e51b81526004016102e390612339565b6002805463ffffffff838116630100000090810266ffffffff000000198416179093556040517f1c373b0a9b89049c835cfc0851faad1f23dbb7e5bd46cf58eb88da4dd760378b93610400930491909116908490612408565b6001546001600160a01b031681565b6000546001600160a01b03163314610d685760405162461bcd60e51b81526004016102e390612339565b60008160020b13610d8b5760405162461bcd60e51b81526004016102e3906122a8565b6002805482820b62ffffff1662ffffff1982161782556040517f6970a7f31fee92e8ced74d8833776ba308b9d4259e72a19b40ea53bdce8c8c489261040092900b908490612243565b6000546001600160a01b03163314610dfe5760405162461bcd60e51b81526004016102e390612339565b6001600160a01b038116600081815260036020908152604091829020825160a0810184529054600281810b810b810b835263010000008204810b810b810b8385015266010000000000008204810b810b810b83860152600160481b8204810b810b900b6060830152600160601b900463ffffffff166080820152855183516334324e9f60e21b815293519194610ef1949193909263d0c93a7c926004808201939291829003018186803b158015610eb457600080fd5b505afa158015610ec8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eec9190612034565b611645565b6040805160a0810182528451600290810b8252602080870151820b81840190815287850151830b8486019081526060808a0151850b9086019081526080808b015163ffffffff9081169188019182526001600160a01b038b166000908152600390965294889020965187549451935192519151909516600160601b026fffffffff0000000000000000000000001991870b62ffffff908116600160481b026bffffff0000000000000000001994890b821666010000000000000268ffffff00000000000019968a0b831663010000000265ffffff0000001999909a0b90921662ffffff19909716969096179690961696909617929092169390931792909216171617815590517f4fbe17edcf333bc8ed37ac7def64da9ac2726f481aaa733d9c8a64e5fa481dfb916110259184919061239c565b60405180910390a1505050565b61103a611d0f565b506001600160a01b0316600090815260036020908152604091829020825160a0810184529054600281810b810b810b835263010000008204810b810b810b9383019390935266010000000000008104830b830b830b93820193909352600160481b8304820b820b90910b6060820152600160601b90910463ffffffff16608082015290565b600154600160b81b900460020b81565b600063ffffffff821661110e576040805162461bcd60e51b8152602060048201526002602482015261042560f41b604482015290519081900360640190fd5b604080516002808252606082018352600092602083019080368337019050509050828160008151811061113d57fe5b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061116657fe5b63ffffffff90921660209283029190910182015260405163883bdbfd60e01b8152600481018281528351602483015283516000936001600160a01b0389169363883bdbfd938793909283926044019185820191028083838b5b838110156111d75781810151838201526020016111bf565b505050509050019250505060006040518083038186803b1580156111fa57600080fd5b505afa15801561120e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561123757600080fd5b810190808051604051939291908464010000000082111561125757600080fd5b90830190602082018581111561126c57600080fd5b825186602082028301116401000000008211171561128957600080fd5b82525081516020918201928201910280838360005b838110156112b657818101518382015260200161129e565b50505050905001604052602001805160405193929190846401000000008211156112df57600080fd5b9083019060208201858111156112f457600080fd5b825186602082028301116401000000008211171561131157600080fd5b82525081516020918201928201910280838360005b8381101561133e578181015183820152602001611326565b5050505090500160405250505050905060008160008151811061135d57fe5b60200260200101518260018151811061137257fe5b60200260200101510390508463ffffffff168160060b8161138f57fe5b05935060008160060b1280156113b957508463ffffffff168160060b816113b257fe5b0760060b15155b156113c657600019909301925b50505092915050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561140b57600080fd5b505afa15801561141f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144391906120b7565b5050604080516334324e9f60e21b815290519497506001600160a01b038916955063d0c93a7c94600480830195506020945090925090829003018186803b15801561148d57600080fd5b505afa1580156114a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c59190612034565b9050915091565b6000808260020b8460020b816114de57fe5b05905060008460020b12801561150557508260020b8460020b816114fe57fe5b0760020b15155b1561150f57600019015b820290505b92915050565b600080826001600160a01b0316631a6865026040518163ffffffff1660e01b815260040160206040518083038186803b15801561155657600080fd5b505afa15801561156a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158e9190612087565b90506fffffffffffffffffffffffffffffffff8116611633576000836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156115e257600080fd5b505afa1580156115f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161a91906120b7565b505050505050905061162b8161169b565b92505061163f565b61163c836104a4565b91505b50919050565b620d89e8600283900b1380159061166c57508060020b8260020b8161166657fe5b0760020b155b801561167b575060008260020b135b6116975760405162461bcd60e51b81526004016102e39061228b565b5050565b60006401000276a36001600160a01b038316108015906116d7575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b61170c576040805162461bcd60e51b81526020600482015260016024820152602960f91b604482015290519081900360640190fd5b77ffffffffffffffffffffffffffffffffffffffff00000000602083901b166fffffffffffffffffffffffffffffffff811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c979088119617909417909217179091171717608081106117b657607f810383901c91506117c0565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b146119c157886001600160a01b03166119a5826119d0565b6001600160a01b031611156119ba57816119bc565b805b6119c3565b815b9998505050505050505050565b60008060008360020b126119e7578260020b6119ef565b8260020b6000035b9050620d89e8811115611a2d576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b600060018216611a4e57700100000000000000000000000000000000611a60565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611a94576ffff97272373d413259a46990580e213a0260801c5b6004821615611ab3576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611ad2576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615611af1576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615611b10576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615611b2f576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611b4e576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611b6e576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611b8e576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615611bae576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615611bce576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615611bee576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615611c0e576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615611c2e576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611c4e576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611c6f576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611c8f576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615611cae576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615611ccb576b048a170391f7dc42444e8fa20260801c5b60008460020b1315611ce6578060001981611ce257fe5b0490505b640100000000810615611cfa576001611cfd565b60005b60ff16602082901c0192505050919050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b600082601f830112611d4d578081fd5b81356020611d62611d5d83612443565b61241f565b8281528181019085830183850287018401881015611d7e578586fd5b855b85811015611da5578135611d9381612461565b84529284019290840190600101611d80565b5090979650505050505050565b80518015158114611dc257600080fd5b919050565b600060a08284031215611dd8578081fd5b60405160a0810181811067ffffffffffffffff82111715611df557fe5b6040529050808235611e0681612479565b81526020830135611e1681612479565b60208201526040830135611e2981612479565b60408201526060830135611e3c81612479565b60608201526080830135611e4f81612488565b6080919091015292915050565b805161ffff81168114611dc257600080fd5b600060208284031215611e7f578081fd5b8135611e8a81612461565b9392505050565b60008060408385031215611ea3578081fd5b823567ffffffffffffffff80821115611eba578283fd5b611ec686838701611d3d565b9350602091508185013581811115611edc578384fd5b85019050601f81018613611eee578283fd5b8035611efc611d5d82612443565b81815283810190838501858402850186018a1015611f18578687fd5b8694505b83851015611f43578035611f2f81612479565b835260019490940193918501918501611f1c565b5080955050505050509250929050565b60008060408385031215611f65578182fd5b823567ffffffffffffffff80821115611f7c578384fd5b818501915085601f830112611f8f578384fd5b81356020611f9f611d5d83612443565b8281528181019085830160a0808602880185018c1015611fbd57898afd5b8997505b85881015611fe957611fd38c83611dc7565b8452600197909701969284019290810190611fc1565b50909750505086013592505080821115612001578283fd5b5061200e85828601611d3d565b9150509250929050565b600060208284031215612029578081fd5b8135611e8a81612479565b600060208284031215612045578081fd5b8151611e8a81612479565b60008060c08385031215612062578182fd5b61206c8484611dc7565b915060a083013561207c81612461565b809150509250929050565b600060208284031215612098578081fd5b81516fffffffffffffffffffffffffffffffff81168114611e8a578182fd5b600080600080600080600060e0888a0312156120d1578283fd5b87516120dc81612461565b60208901519097506120ed81612479565b95506120fb60408901611e5c565b945061210960608901611e5c565b935061211760808901611e5c565b925060a088015160ff8116811461212c578283fd5b915061213a60c08901611db2565b905092959891949750929550565b600060208284031215612159578081fd5b8135611e8a81612488565b60008060008060808587031215612179578182fd5b845161218481612488565b8094505060208501518060060b811461219b578283fd5b60408601519093506121ac81612461565b91506121ba60608601611db2565b905092959194509250565b805160020b8252602081015160020b6020830152604081015160020b6040830152606081015160020b606083015263ffffffff60808201511660808301525050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b60029190910b815260200190565b600292830b8152910b602082015260400190565b600296870b815294860b602086015292850b604085015290840b6060840152830b608083015290910b60a082015260c00190565b602080825260039082015262494e5360e81b604082015260600190565b6020808252600490820152634952454d60e01b604082015260600190565b6020808252600290820152615a4160f01b604082015260600190565b60208082526003908201526249474160e81b604082015260600190565b60208082526003908201526226aa2360e91b604082015260600190565b60208082526003908201526249424d60e81b604082015260600190565b6020808252600290820152614e4760f01b604082015260600190565b602080825260029082015261125560f21b604082015260600190565b60208082526003908201526249524d60e81b604082015260600190565b60a0810161151482846121c5565b61014081016123ab82856121c5565b9154600281810b810b60a0840152601882901c810b810b60c0840152603082901c810b810b60e0840152604882901c810b900b61010083015260601c63ffffffff1661012090910152919050565b61ffff91909116815260200190565b63ffffffff92831681529116602082015260400190565b60405181810167ffffffffffffffff8111828210171561243b57fe5b604052919050565b600067ffffffffffffffff82111561245757fe5b5060209081020190565b6001600160a01b038116811461247657600080fd5b50565b8060020b811461247657600080fd5b63ffffffff8116811461247657600080fdfea164736f6c6343000706000a";

export class UniStrategy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _governance: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<UniStrategy> {
    return super.deploy(_governance, overrides || {}) as Promise<UniStrategy>;
  }
  getDeployTransaction(
    _governance: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_governance, overrides || {});
  }
  attach(address: string): UniStrategy {
    return super.attach(address) as UniStrategy;
  }
  connect(signer: Signer): UniStrategy__factory {
    return super.connect(signer) as UniStrategy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniStrategyInterface {
    return new utils.Interface(_abi) as UniStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): UniStrategy {
    return new Contract(address, _abi, signerOrProvider) as UniStrategy;
  }
}
