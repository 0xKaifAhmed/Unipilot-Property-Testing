/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UnipilotVault, UnipilotVaultInterface } from "../UnipilotVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpShares",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "lpShares",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101406040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b506040516200222938038062002229833981810160405260a08110156200005d57600080fd5b8151602083015160408085015160608601805192519496939591949391820192846401000000008211156200009157600080fd5b908301906020820185811115620000a757600080fd5b8251640100000000811182820188101715620000c257600080fd5b82525081516020918201929091019080838360005b83811015620000f1578181015183820152602001620000d7565b50505050905090810190601f1680156200011f5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200014357600080fd5b9083019060208201858111156200015957600080fd5b82516401000000008111828201881017156200017457600080fd5b82525081516020918201929091019080838360005b83811015620001a357818101518382015260200162000189565b50505050905090810190601f168015620001d15780820380516001836020036101000a031916815260200191505b506040525050508180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200020e929190620004d3565b50805162000224906004906020840190620004d3565b50506005805460ff1916601217905550815160208084019190912082519183019190912060c082905260e08190527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200027d620002ee565b60a0526200028d818484620002f2565b608052610100525050600a80546001600160a01b03808b166001600160a01b031992831617909255600b8054898416908316179055600980548a841692169190911790819055620002e394501691505062000356565b50505050506200057f565b4690565b600083838362000301620002ee565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b03168152602001955050505050506040516020818303038152906040528051906020012090509392505050565b806001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156200039057600080fd5b505afa158015620003a5573d6000803e3d6000fd5b505050506040513d6020811015620003bc57600080fd5b5051600780546001600160a01b0319166001600160a01b039283161790556040805163d21220a760e01b815290519183169163d21220a791600480820192602092909190829003018186803b1580156200041557600080fd5b505afa1580156200042a573d6000803e3d6000fd5b505050506040513d60208110156200044157600080fd5b5051600880546001600160a01b0319166001600160a01b039283161790556040805163ddca3f4360e01b815290519183169163ddca3f4391600480820192602092909190829003018186803b1580156200049a57600080fd5b505afa158015620004af573d6000803e3d6000fd5b505050506040513d6020811015620004c657600080fd5b505162ffffff16600c5550565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200050b576000855562000556565b82601f106200052657805160ff191683800117855562000556565b8280016001018555821562000556579182015b828111156200055657825182559160200191906001019062000539565b506200056492915062000568565b5090565b5b8082111562000564576000815560010162000569565b60805160a05160c05160e0516101005161012051611c60620005c960003980610bc45250806113d45250806114165250806113f552508061137b5250806113ab5250611c606000f3fe60806040526004361061016e5760003560e01c80635aa6e675116100cb578063a457c2d71161007f578063d505accf11610059578063d505accf14610525578063dd62ed3e14610583578063ddca3f43146105be57610175565b8063a457c2d71461049e578063a9059cbb146104d7578063d21220a71461051057610175565b806379cc6790116100b057806379cc67901461041d5780637ecebe001461045657806395d89b411461048957610175565b80635aa6e675146103d557806370a08231146103ea57610175565b806323b872dd116101225780633644e515116101075780633644e5151461035d578063395093511461037257806342966c68146103ab57610175565b806323b872dd146102ef578063313ce5671461033257610175565b80630dfe1681116101535780630dfe16811461024e57806318160ddd1461027f57806320e8c565146102a657610175565b806306fdde0314610177578063095ea7b31461020157610175565b3661017557005b005b34801561018357600080fd5b5061018c6105d3565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101c65781810151838201526020016101ae565b50505050905090810190601f1680156101f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020d57600080fd5b5061023a6004803603604081101561022457600080fd5b506001600160a01b03813516906020013561066a565b604080519115158252519081900360200190f35b34801561025a57600080fd5b50610263610687565b604080516001600160a01b039092168252519081900360200190f35b34801561028b57600080fd5b50610294610696565b60408051918252519081900360200190f35b3480156102b257600080fd5b50610294600480360360808110156102c957600080fd5b506001600160a01b0381358116916020810135909116906040810135906060013561069c565b3480156102fb57600080fd5b5061023a6004803603606081101561031257600080fd5b506001600160a01b038135811691602081013590911690604001356108bc565b34801561033e57600080fd5b50610347610944565b6040805160ff9092168252519081900360200190f35b34801561036957600080fd5b5061029461094d565b34801561037e57600080fd5b5061023a6004803603604081101561039557600080fd5b506001600160a01b03813516906020013561095c565b3480156103b757600080fd5b50610175600480360360208110156103ce57600080fd5b50356109aa565b3480156103e157600080fd5b506102636109be565b3480156103f657600080fd5b506102946004803603602081101561040d57600080fd5b50356001600160a01b03166109cd565b34801561042957600080fd5b506101756004803603604081101561044057600080fd5b506001600160a01b0381351690602001356109e8565b34801561046257600080fd5b506102946004803603602081101561047957600080fd5b50356001600160a01b0316610a42565b34801561049557600080fd5b5061018c610a69565b3480156104aa57600080fd5b5061023a600480360360408110156104c157600080fd5b506001600160a01b038135169060200135610aca565b3480156104e357600080fd5b5061023a600480360360408110156104fa57600080fd5b506001600160a01b038135169060200135610b32565b34801561051c57600080fd5b50610263610b46565b34801561053157600080fd5b50610175600480360360e081101561054857600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610b55565b34801561058f57600080fd5b50610294600480360360408110156105a657600080fd5b506001600160a01b0381358116916020013516610d0c565b3480156105ca57600080fd5b50610294610d37565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b505050505090505b90565b600061067e610677610d3d565b8484610d41565b50600192915050565b6007546001600160a01b031681565b60025490565b600b546000906001600160a01b031633146106e3576040805162461bcd60e51b8152602060048201526002602482015261272960f11b604482015290519081900360640190fd5b60095460408051638bf30be960e01b81526001600160a01b0390921660048301525160009173__$c9cfffe10a1e515bcd4eeb3f36bf913f93$__9163f785fc99918391638bf30be991602480820192602092909190829003018186803b15801561074c57600080fd5b505af4158015610760573d6000803e3d6000fd5b505050506040513d602081101561077657600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260029290920b6004830152516024808301926020929190829003018186803b1580156107d057600080fd5b505af41580156107e4573d6000803e3d6000fd5b505050506040513d60208110156107fa57600080fd5b50519050600061081a85836ec097ce7bc90715b34b9f1000000000610e2d565b90506108268482610edc565b92506108328684610f36565b60075461084a906001600160a01b0316883088611026565b600854610862906001600160a01b0316883087611026565b604080516001600160a01b0389168152602081018790528082018690526060810185905290517f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e9181900360800190a15050949350505050565b60006108c9848484611185565b610939846108d5610d3d565b61093485604051806060016040528060288152602001611b79602891396001600160a01b038a16600090815260016020526040812090610913610d3d565b6001600160a01b0316815260208101919091526040016000205491906112e0565b610d41565b5060015b9392505050565b60055460ff1690565b6000610957611377565b905090565b600061067e610969610d3d565b84610934856001600061097a610d3d565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610edc565b6109bb6109b5610d3d565b82611441565b50565b600a546001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b6000610a1f82604051806060016040528060248152602001611ba160249139610a1886610a13610d3d565b610d0c565b91906112e0565b9050610a3383610a2d610d3d565b83610d41565b610a3d8383611441565b505050565b6001600160a01b0381166000908152600660205260408120610a639061153d565b92915050565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561065f5780601f106106345761010080835404028352916020019161065f565b600061067e610ad7610d3d565b8461093485604051806060016040528060258152602001611c2f6025913960016000610b01610d3d565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906112e0565b600061067e610b3f610d3d565b8484611185565b6008546001600160a01b031681565b83421115610baa576040805162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015290519081900360640190fd5b6001600160a01b03871660009081526006602052604081207f000000000000000000000000000000000000000000000000000000000000000090899089908990610bf39061153d565b8960405160200180878152602001866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012090506000610c5c82611541565b90506000610c6c8287878761158d565b9050896001600160a01b0316816001600160a01b031614610cd4576040805162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015290519081900360640190fd5b6001600160a01b038a166000908152600660205260409020610cf59061170b565b610d008a8a8a610d41565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600c5481565b3390565b6001600160a01b038316610d865760405162461bcd60e51b8152600401808060200182810382526024815260200180611c0b6024913960400191505060405180910390fd5b6001600160a01b038216610dcb5760405162461bcd60e51b8152600401808060200182810382526022815260200180611aed6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000808060001985870986860292508281109083900303905080610e635760008411610e5857600080fd5b50829004905061093d565b808411610e6f57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60008282018381101561093d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b038216610f91576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610f9d60008383610a3d565b600254610faa9082610edc565b6002556001600160a01b038216600090815260208190526040902054610fd09082610edc565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b03841673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21480156110525750804710155b156111525773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156110a657600080fd5b505af11580156110ba573d6000803e3d6000fd5b50506040805163a9059cbb60e01b81526001600160a01b038716600482015260248101869052905173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2945063a9059cbb9350604480830193506020928290030181600087803b15801561112057600080fd5b505af1158015611134573d6000803e3d6000fd5b505050506040513d602081101561114a57600080fd5b5061117f9050565b6001600160a01b0383163014156111735761116e848383611714565b61117f565b61117f84848484611877565b50505050565b6001600160a01b0383166111ca5760405162461bcd60e51b8152600401808060200182810382526025815260200180611be66025913960400191505060405180910390fd5b6001600160a01b03821661120f5760405162461bcd60e51b8152600401808060200182810382526023815260200180611aa86023913960400191505060405180910390fd5b61121a838383610a3d565b61125781604051806060016040528060268152602001611b0f602691396001600160a01b03861660009081526020819052604090205491906112e0565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546112869082610edc565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561136f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561133457818101518382015260200161131c565b50505050905090810190601f1680156113615780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60007f00000000000000000000000000000000000000000000000000000000000000006113a26119e4565b14156113cf57507f0000000000000000000000000000000000000000000000000000000000000000610667565b61143a7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006119e8565b9050610667565b6001600160a01b0382166114865760405162461bcd60e51b8152600401808060200182810382526021815260200180611bc56021913960400191505060405180910390fd5b61149282600083610a3d565b6114cf81604051806060016040528060228152602001611acb602291396001600160a01b03851660009081526020819052604090205491906112e0565b6001600160a01b0383166000908152602081905260409020556002546114f59082611a4a565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b5490565b600061154b611377565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156115ee5760405162461bcd60e51b8152600401808060200182810382526022815260200180611b356022913960400191505060405180910390fd5b8360ff16601b148061160357508360ff16601c145b61163e5760405162461bcd60e51b8152600401808060200182810382526022815260200180611b576022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561169a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611702576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b80546001019055565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1781529251825160009485949389169392918291908083835b602083106117a55780518252601f199092019160209182019101611786565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611807576040519150601f19603f3d011682016040523d82523d6000602084013e61180c565b606091505b509150915081801561183a57508051158061183a575080806020019051602081101561183757600080fd5b50515b611870576040805162461bcd60e51b815260206004820152600260248201526114d560f21b604482015290519081900360640190fd5b5050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b178152925182516000948594938a169392918291908083835b602083106119105780518252601f1990920191602091820191016118f1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611972576040519150601f19603f3d011682016040523d82523d6000602084013e611977565b606091505b50915091508180156119a55750805115806119a557508080602001905160208110156119a257600080fd5b50515b6119dc576040805162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015290519081900360640190fd5b505050505050565b4690565b60008383836119f56119e4565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b03168152602001955050505050506040516020818303038152906040528051906020012090509392505050565b600082821115611aa1576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c756545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa164736f6c6343000706000a";

type UnipilotVaultConstructorParams =
  | [linkLibraryAddresses: UnipilotVaultLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnipilotVaultConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class UnipilotVault__factory extends ContractFactory {
  constructor(...args: UnipilotVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        UnipilotVault__factory.linkBytecode(linkLibraryAddresses),
        signer,
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: UnipilotVaultLibraryAddresses,
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c9cfffe10a1e515bcd4eeb3f36bf913f93\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/UnipilotMaths.sol:UnipilotMaths"
      ]
        .replace(/^0x/, "")
        .toLowerCase(),
    );

    return linkedBytecode;
  }

  deploy(
    _governance: string,
    _pool: string,
    _router: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<UnipilotVault> {
    return super.deploy(
      _governance,
      _pool,
      _router,
      _name,
      _symbol,
      overrides || {},
    ) as Promise<UnipilotVault>;
  }
  getDeployTransaction(
    _governance: string,
    _pool: string,
    _router: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _governance,
      _pool,
      _router,
      _name,
      _symbol,
      overrides || {},
    );
  }
  attach(address: string): UnipilotVault {
    return super.attach(address) as UnipilotVault;
  }
  connect(signer: Signer): UnipilotVault__factory {
    return super.connect(signer) as UnipilotVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnipilotVaultInterface {
    return new utils.Interface(_abi) as UnipilotVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): UnipilotVault {
    return new Contract(address, _abi, signerOrProvider) as UnipilotVault;
  }
}

export interface UnipilotVaultLibraryAddresses {
  ["contracts/libraries/UnipilotMaths.sol:UnipilotMaths"]: string;
}
